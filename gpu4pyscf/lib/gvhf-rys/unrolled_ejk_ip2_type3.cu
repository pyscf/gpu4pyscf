#include "vhf.cuh"
#include "rys_roots.cu"
#include "create_tasks_ip1.cu"


__device__ static
void _rys_ejk_ip2_type3_0000(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *shl_quartet_idx, double *dd_cache,
                int ntasks, int ish0, int jsh0)
{
    int sq_id = threadIdx.x;
    int nsq_per_block = blockDim.x;
    int gout_id = threadIdx.y;
    int gout_stride = blockDim.y;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int *ao_loc = envs.ao_loc;
    int nbas = envs.nbas;
    int nao = ao_loc[nbas];
    int *bas = envs.bas;
    double *env = envs.env;
    double omega = env[PTR_RANGE_OMEGA];
    double *dm = jk.dm;
    extern __shared__ double cicj_cache[];
    double *rw = cicj_cache + iprim*jprim*TILE2 + sq_id;
    dd_cache += sq_id;
    int thread_id = nsq_per_block * gout_id + sq_id;
    int threads = nsq_per_block * gout_stride;
    for (int n = thread_id; n < iprim*jprim*TILE2; n += threads) {
        int ijp = n / TILE2;
        int sh_ij = n % TILE2;
        int ish = ish0 + sh_ij / TILE;
        int jsh = jsh0 + sh_ij % TILE;
        int ip = ijp / jprim;
        int jp = ijp % jprim;
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
        double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double theta_ij = ai * aj / aij;
        double Kab = exp(-theta_ij * (xjxi*xjxi+yjyi*yjyi+zjzi*zjzi));
        cicj_cache[n] = ci[ip] * cj[jp] * Kab;
    }

    for (int task0 = 0; task0 < ntasks; task0 += nsq_per_block) {
        __syncthreads();
        int task_id = task0 + sq_id;
        double fac_sym = PI_FAC;
        ShellQuartet sq;
        if (task_id >= ntasks) {
            // To avoid __syncthreads blocking blocking idle warps, all remaining
            // threads compute a valid shell quartet with zero normalization factor
            sq = shl_quartet_idx[0];
            fac_sym = 0.;
        } else {
            sq = shl_quartet_idx[task_id];
        }
        int ish = sq.i;
        int jsh = sq.j;
        int ksh = sq.k;
        int lsh = sq.l;
        int sh_ij = (ish % TILE) * TILE + (jsh % TILE);
        if (ish == jsh) fac_sym *= .5;
        if (ksh == lsh) fac_sym *= .5;
        if (ish*nbas+jsh == ksh*nbas+lsh) fac_sym *= .5;
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double dd;
        double Ix, Iy, Iz, prod_xy, prod_xz, prod_yz;
        double gix, giy, giz;
        double gjx, gjy, gjz;
        double gkx, gky, gkz;
        double glx, gly, glz;
        double gikx, giky, gikz;
        double gjkx, gjky, gjkz;
        double gilx, gily, gilz;
        double gjlx, gjly, gjlz;
        double v_ixkx = 0;
        double v_ixky = 0;
        double v_ixkz = 0;
        double v_iykx = 0;
        double v_iyky = 0;
        double v_iykz = 0;
        double v_izkx = 0;
        double v_izky = 0;
        double v_izkz = 0;
        double v_jxkx = 0;
        double v_jxky = 0;
        double v_jxkz = 0;
        double v_jykx = 0;
        double v_jyky = 0;
        double v_jykz = 0;
        double v_jzkx = 0;
        double v_jzky = 0;
        double v_jzkz = 0;
        double v_ixlx = 0;
        double v_ixly = 0;
        double v_ixlz = 0;
        double v_iylx = 0;
        double v_iyly = 0;
        double v_iylz = 0;
        double v_izlx = 0;
        double v_izly = 0;
        double v_izlz = 0;
        double v_jxlx = 0;
        double v_jxly = 0;
        double v_jxlz = 0;
        double v_jylx = 0;
        double v_jyly = 0;
        double v_jylz = 0;
        double v_jzlx = 0;
        double v_jzly = 0;
        double v_jzlz = 0;
        double dd_cache0 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                dd_cache0 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                dd_cache0 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                dd_cache0 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                dd_cache0 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
            }
        }
        
        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = fac_sym * ck[kp] * cl[lp] * Kcd;
            double xqc = xlxk * al_akl;
            double yqc = ylyk * al_akl;
            double zqc = zlzk * al_akl;
            double xkl = rk[0] + xqc;
            double ykl = rk[1] + yqc;
            double zkl = rk[2] + zqc;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[sh_ij+ijp*TILE2];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = xjxi * aj_aij;
                double ypa = yjyi * aj_aij;
                double zpa = zjzi * aj_aij;
                double xij = ri[0] + xpa; // (ai*xi+aj*xj)/aij
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                double theta_rr = theta * rr;
                if (omega == 0) {
                    rys_roots(2, theta_rr, rw, nsq_per_block, 0, 1);
                    for (int irys = 0; irys < 2; ++irys) {
                        rw[(irys*2+1)*nsq_per_block] *= fac;
                    }
                } else if (omega > 0) {
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(2, theta_fac*theta_rr, rw, nsq_per_block, 0, 1);
                    double sqrt_theta_fac = sqrt(theta_fac) * fac;
                    for (int irys = 0; irys < 2; ++irys) {
                        rw[ irys*2   *nsq_per_block] *= theta_fac;
                        rw[(irys*2+1)*nsq_per_block] *= sqrt_theta_fac;
                    }
                } else {
                    double *rw1 = rw + 4*nsq_per_block;
                    rys_roots(2, theta_rr, rw1, nsq_per_block, 0, 1);
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(2, theta_fac*theta_rr, rw, nsq_per_block, 0, 1);
                    double sqrt_theta_fac = -sqrt(theta_fac) * fac;
                    for (int irys = 0; irys < 2; ++irys) {
                        rw[ irys*2   *nsq_per_block] *= theta_fac;
                        rw[(irys*2+1)*nsq_per_block] *= sqrt_theta_fac;
                        rw1[(irys*2+1)*nsq_per_block] *= fac;
                    }
                }
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < bounds.nroots; ++irys) {
                    {
                    double wt = rw[(2*irys+1)*nsq_per_block];
                    double rt = rw[ 2*irys   *nsq_per_block];
                    double rt_aa = rt / (aij + akl);
                    dd = dd_cache0;
                    Ix = 1 * dd;
                    Iy = 1 * dd;
                    Iz = wt * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = 1 * Iz;
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    gix = ai2 * trr_10x;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    giy = ai2 * trr_10y;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    giz = ai2 * trr_10z;
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double trr_01x = cpx * 1;
                    gkx = ak2 * trr_01x;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    gky = ak2 * trr_01y;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    gkz = ak2 * trr_01z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    double b00 = .5 * rt_aa;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    gikx = ai2 * trr_11x;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    giky = ai2 * trr_11y;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    gikz = ai2 * trr_11z;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    gjx = aj2 * hrr_0100x;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    gjy = aj2 * hrr_0100y;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    gjz = aj2 * hrr_0100z;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * trr_01z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    double hrr_0110x = trr_11x - xjxi * trr_01x;
                    gjkx = aj2 * hrr_0110x;
                    double hrr_0110y = trr_11y - yjyi * trr_01y;
                    gjky = aj2 * hrr_0110y;
                    double hrr_0110z = trr_11z - zjzi * trr_01z;
                    gjkz = aj2 * hrr_0110z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_10y;
                    giz = ai2 * trr_10z;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    glx = al2 * hrr_0001x;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    gly = al2 * hrr_0001y;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    glz = al2 * hrr_0001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    gilx = ai2 * hrr_1001x;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    gily = ai2 * hrr_1001y;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    gilz = ai2 * hrr_1001z;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_0100y;
                    gjz = aj2 * hrr_0100z;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_0001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    double hrr_0101x = hrr_1001x - xjxi * hrr_0001x;
                    gjlx = aj2 * hrr_0101x;
                    double hrr_0101y = hrr_1001y - yjyi * hrr_0001y;
                    gjly = aj2 * hrr_0101y;
                    double hrr_0101z = hrr_1001z - zjzi * hrr_0001z;
                    gjlz = aj2 * hrr_0101z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            continue;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        int natm = envs.natm;
        double *ejk = jk.ejk;
        atomicAdd(ejk + (ia*natm+ka)*9 + 0, v_ixkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 1, v_ixky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 2, v_ixkz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 3, v_iykx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 4, v_iyky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 5, v_iykz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 6, v_izkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 7, v_izky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 8, v_izkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 0, v_jxkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 1, v_jxky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 2, v_jxkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 3, v_jykx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 4, v_jyky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 5, v_jykz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 6, v_jzkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 7, v_jzky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 8, v_jzkz);
        atomicAdd(ejk + (ia*natm+la)*9 + 0, v_ixlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 1, v_ixly);
        atomicAdd(ejk + (ia*natm+la)*9 + 2, v_ixlz);
        atomicAdd(ejk + (ia*natm+la)*9 + 3, v_iylx);
        atomicAdd(ejk + (ia*natm+la)*9 + 4, v_iyly);
        atomicAdd(ejk + (ia*natm+la)*9 + 5, v_iylz);
        atomicAdd(ejk + (ia*natm+la)*9 + 6, v_izlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 7, v_izly);
        atomicAdd(ejk + (ia*natm+la)*9 + 8, v_izlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 0, v_jxlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 1, v_jxly);
        atomicAdd(ejk + (ja*natm+la)*9 + 2, v_jxlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 3, v_jylx);
        atomicAdd(ejk + (ja*natm+la)*9 + 4, v_jyly);
        atomicAdd(ejk + (ja*natm+la)*9 + 5, v_jylz);
        atomicAdd(ejk + (ja*natm+la)*9 + 6, v_jzlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 7, v_jzly);
        atomicAdd(ejk + (ja*natm+la)*9 + 8, v_jzlz);
    }
}
__global__
void rys_ejk_ip2_type3_0000(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *pool, double *dd_pool, uint32_t *batch_head)
{
    int b_id = blockIdx.x;
    int t_id = threadIdx.x + blockDim.x * threadIdx.y;
    ShellQuartet *shl_quartet_idx = pool + b_id * QUEUE_DEPTH;

    double *dd_cache = dd_pool + b_id * 256;

    __shared__ int batch_id;
    if (t_id == 0) {
        batch_id = atomicAdd(batch_head, 1);
    }
    __syncthreads();
    int nbatches_kl = (bounds.ntile_kl_pairs + TILES_IN_BATCH - 1) / TILES_IN_BATCH;
    int nbatches = bounds.ntile_ij_pairs * nbatches_kl;
    while (batch_id < nbatches) {
        int batch_ij = batch_id / nbatches_kl;
        int batch_kl = batch_id % nbatches_kl;
        int nbas = envs.nbas;
        double *env = envs.env;
        double omega = env[PTR_RANGE_OMEGA];
        int ntasks;
        if (omega >= 0) {
            ntasks = _fill_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                     batch_ij, batch_kl);
        } else {
            ntasks = _fill_sr_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                        batch_ij, batch_kl);
        }
        if (ntasks > 0) {
            int tile_ij = bounds.tile_ij_mapping[batch_ij];
            int nbas_tiles = nbas / TILE;
            int tile_i = tile_ij / nbas_tiles;
            int tile_j = tile_ij % nbas_tiles;
            int ish0 = tile_i * TILE;
            int jsh0 = tile_j * TILE;
            _rys_ejk_ip2_type3_0000(envs, jk, bounds, shl_quartet_idx, dd_cache,
                             ntasks, ish0, jsh0);
        }
        if (t_id == 0) {
            batch_id = atomicAdd(batch_head, 1);
            atomicAdd(batch_head+1, ntasks);
        }
        __syncthreads();
    }
}

__device__ static
void _rys_ejk_ip2_type3_1000(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *shl_quartet_idx, double *dd_cache,
                int ntasks, int ish0, int jsh0)
{
    int sq_id = threadIdx.x;
    int nsq_per_block = blockDim.x;
    int gout_id = threadIdx.y;
    int gout_stride = blockDim.y;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int *ao_loc = envs.ao_loc;
    int nbas = envs.nbas;
    int nao = ao_loc[nbas];
    int *bas = envs.bas;
    double *env = envs.env;
    double omega = env[PTR_RANGE_OMEGA];
    double *dm = jk.dm;
    extern __shared__ double cicj_cache[];
    double *rw = cicj_cache + iprim*jprim*TILE2 + sq_id;
    dd_cache += sq_id;
    int thread_id = nsq_per_block * gout_id + sq_id;
    int threads = nsq_per_block * gout_stride;
    for (int n = thread_id; n < iprim*jprim*TILE2; n += threads) {
        int ijp = n / TILE2;
        int sh_ij = n % TILE2;
        int ish = ish0 + sh_ij / TILE;
        int jsh = jsh0 + sh_ij % TILE;
        int ip = ijp / jprim;
        int jp = ijp % jprim;
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
        double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double theta_ij = ai * aj / aij;
        double Kab = exp(-theta_ij * (xjxi*xjxi+yjyi*yjyi+zjzi*zjzi));
        cicj_cache[n] = ci[ip] * cj[jp] * Kab;
    }

    for (int task0 = 0; task0 < ntasks; task0 += nsq_per_block) {
        __syncthreads();
        int task_id = task0 + sq_id;
        double fac_sym = PI_FAC;
        ShellQuartet sq;
        if (task_id >= ntasks) {
            // To avoid __syncthreads blocking blocking idle warps, all remaining
            // threads compute a valid shell quartet with zero normalization factor
            sq = shl_quartet_idx[0];
            fac_sym = 0.;
        } else {
            sq = shl_quartet_idx[task_id];
        }
        int ish = sq.i;
        int jsh = sq.j;
        int ksh = sq.k;
        int lsh = sq.l;
        int sh_ij = (ish % TILE) * TILE + (jsh % TILE);
        if (ish == jsh) fac_sym *= .5;
        if (ksh == lsh) fac_sym *= .5;
        if (ish*nbas+jsh == ksh*nbas+lsh) fac_sym *= .5;
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double dd;
        double Ix, Iy, Iz, prod_xy, prod_xz, prod_yz;
        double gix, giy, giz;
        double gjx, gjy, gjz;
        double gkx, gky, gkz;
        double glx, gly, glz;
        double gikx, giky, gikz;
        double gjkx, gjky, gjkz;
        double gilx, gily, gilz;
        double gjlx, gjly, gjlz;
        double v_ixkx = 0;
        double v_ixky = 0;
        double v_ixkz = 0;
        double v_iykx = 0;
        double v_iyky = 0;
        double v_iykz = 0;
        double v_izkx = 0;
        double v_izky = 0;
        double v_izkz = 0;
        double v_jxkx = 0;
        double v_jxky = 0;
        double v_jxkz = 0;
        double v_jykx = 0;
        double v_jyky = 0;
        double v_jykz = 0;
        double v_jzkx = 0;
        double v_jzky = 0;
        double v_jzkz = 0;
        double v_ixlx = 0;
        double v_ixly = 0;
        double v_ixlz = 0;
        double v_iylx = 0;
        double v_iyly = 0;
        double v_iylz = 0;
        double v_izlx = 0;
        double v_izly = 0;
        double v_izlz = 0;
        double v_jxlx = 0;
        double v_jxly = 0;
        double v_jxlz = 0;
        double v_jylx = 0;
        double v_jyly = 0;
        double v_jylz = 0;
        double v_jzlx = 0;
        double v_jzly = 0;
        double v_jzlz = 0;
        double dd_cache0 = 0.;
        double dd_cache1 = 0.;
        double dd_cache2 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                dd_cache0 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache1 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache2 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                dd_cache0 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache1 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache2 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                dd_cache0 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache1 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache2 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                dd_cache0 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache1 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache2 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
            }
        }
        
        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = fac_sym * ck[kp] * cl[lp] * Kcd;
            double xqc = xlxk * al_akl;
            double yqc = ylyk * al_akl;
            double zqc = zlzk * al_akl;
            double xkl = rk[0] + xqc;
            double ykl = rk[1] + yqc;
            double zkl = rk[2] + zqc;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[sh_ij+ijp*TILE2];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = xjxi * aj_aij;
                double ypa = yjyi * aj_aij;
                double zpa = zjzi * aj_aij;
                double xij = ri[0] + xpa; // (ai*xi+aj*xj)/aij
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                double theta_rr = theta * rr;
                if (omega == 0) {
                    rys_roots(2, theta_rr, rw, nsq_per_block, 0, 1);
                    for (int irys = 0; irys < 2; ++irys) {
                        rw[(irys*2+1)*nsq_per_block] *= fac;
                    }
                } else if (omega > 0) {
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(2, theta_fac*theta_rr, rw, nsq_per_block, 0, 1);
                    double sqrt_theta_fac = sqrt(theta_fac) * fac;
                    for (int irys = 0; irys < 2; ++irys) {
                        rw[ irys*2   *nsq_per_block] *= theta_fac;
                        rw[(irys*2+1)*nsq_per_block] *= sqrt_theta_fac;
                    }
                } else {
                    double *rw1 = rw + 4*nsq_per_block;
                    rys_roots(2, theta_rr, rw1, nsq_per_block, 0, 1);
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(2, theta_fac*theta_rr, rw, nsq_per_block, 0, 1);
                    double sqrt_theta_fac = -sqrt(theta_fac) * fac;
                    for (int irys = 0; irys < 2; ++irys) {
                        rw[ irys*2   *nsq_per_block] *= theta_fac;
                        rw[(irys*2+1)*nsq_per_block] *= sqrt_theta_fac;
                        rw1[(irys*2+1)*nsq_per_block] *= fac;
                    }
                }
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < bounds.nroots; ++irys) {
                    {
                    double wt = rw[(2*irys+1)*nsq_per_block];
                    double rt = rw[ 2*irys   *nsq_per_block];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    dd = dd_cache0;
                    Ix = trr_10x * dd;
                    Iy = 1 * dd;
                    Iz = wt * dd;
                    prod_xy = trr_10x * Iy;
                    prod_xz = trr_10x * Iz;
                    prod_yz = 1 * Iz;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    gix = ai2 * trr_20x;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    giy = ai2 * trr_10y;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    giz = ai2 * trr_10z;
                    gix -= 1 * 1;
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double b00 = .5 * rt_aa;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    gkx = ak2 * trr_11x;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    gky = ak2 * trr_01y;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    gkz = ak2 * trr_01z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    gikx = ai2 * trr_21x;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    giky = ai2 * trr_11y;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    gikz = ai2 * trr_11z;
                    double trr_01x = cpx * 1;
                    gikx -= 1 * trr_01x;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    gjx = aj2 * hrr_1100x;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    gjy = aj2 * hrr_0100y;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    gjz = aj2 * hrr_0100z;
                    gkx = ak2 * trr_11x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * trr_01z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    double hrr_1110x = trr_21x - xjxi * trr_11x;
                    gjkx = aj2 * hrr_1110x;
                    double hrr_0110y = trr_11y - yjyi * trr_01y;
                    gjky = aj2 * hrr_0110y;
                    double hrr_0110z = trr_11z - zjzi * trr_01z;
                    gjkz = aj2 * hrr_0110z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gix = ai2 * trr_20x;
                    giy = ai2 * trr_10y;
                    giz = ai2 * trr_10z;
                    gix -= 1 * 1;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    glx = al2 * hrr_1001x;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    gly = al2 * hrr_0001y;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    glz = al2 * hrr_0001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    double hrr_2001x = trr_21x - xlxk * trr_20x;
                    gilx = ai2 * hrr_2001x;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    gily = ai2 * hrr_1001y;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    gilz = ai2 * hrr_1001z;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    gilx -= 1 * hrr_0001x;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_1100x;
                    gjy = aj2 * hrr_0100y;
                    gjz = aj2 * hrr_0100z;
                    glx = al2 * hrr_1001x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_0001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    double hrr_1101x = hrr_2001x - xjxi * hrr_1001x;
                    gjlx = aj2 * hrr_1101x;
                    double hrr_0101y = hrr_1001y - yjyi * hrr_0001y;
                    gjly = aj2 * hrr_0101y;
                    double hrr_0101z = hrr_1001z - zjzi * hrr_0001z;
                    gjlz = aj2 * hrr_0101z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache1;
                    Ix = 1 * dd;
                    Iy = trr_10y * dd;
                    Iz = wt * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = trr_10y * Iz;
                    gix = ai2 * trr_10x;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    giy = ai2 * trr_20y;
                    giz = ai2 * trr_10z;
                    giy -= 1 * 1;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_11y;
                    gkz = ak2 * trr_01z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_11x;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    giky = ai2 * trr_21y;
                    gikz = ai2 * trr_11z;
                    giky -= 1 * trr_01y;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    gjx = aj2 * hrr_0100x;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    gjy = aj2 * hrr_1100y;
                    gjz = aj2 * hrr_0100z;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_11y;
                    gkz = ak2 * trr_01z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    double hrr_0110x = trr_11x - xjxi * trr_01x;
                    gjkx = aj2 * hrr_0110x;
                    double hrr_1110y = trr_21y - yjyi * trr_11y;
                    gjky = aj2 * hrr_1110y;
                    gjkz = aj2 * hrr_0110z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_20y;
                    giz = ai2 * trr_10z;
                    giy -= 1 * 1;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_1001y;
                    glz = al2 * hrr_0001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1001x;
                    double hrr_2001y = trr_21y - ylyk * trr_20y;
                    gily = ai2 * hrr_2001y;
                    gilz = ai2 * hrr_1001z;
                    gily -= 1 * hrr_0001y;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_1100y;
                    gjz = aj2 * hrr_0100z;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_1001y;
                    glz = al2 * hrr_0001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    double hrr_0101x = hrr_1001x - xjxi * hrr_0001x;
                    gjlx = aj2 * hrr_0101x;
                    double hrr_1101y = hrr_2001y - yjyi * hrr_1001y;
                    gjly = aj2 * hrr_1101y;
                    gjlz = aj2 * hrr_0101z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache2;
                    Ix = 1 * dd;
                    Iy = 1 * dd;
                    Iz = trr_10z * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = 1 * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_10y;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    giz = ai2 * trr_20z;
                    giz -= 1 * wt;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * trr_11z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_11x;
                    giky = ai2 * trr_11y;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    gikz = ai2 * trr_21z;
                    gikz -= 1 * trr_01z;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_0100y;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    gjz = aj2 * hrr_1100z;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * trr_11z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_0110x;
                    gjky = aj2 * hrr_0110y;
                    double hrr_1110z = trr_21z - zjzi * trr_11z;
                    gjkz = aj2 * hrr_1110z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_10y;
                    giz = ai2 * trr_20z;
                    giz -= 1 * wt;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_1001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1001x;
                    gily = ai2 * hrr_1001y;
                    double hrr_2001z = trr_21z - zlzk * trr_20z;
                    gilz = ai2 * hrr_2001z;
                    gilz -= 1 * hrr_0001z;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_0100y;
                    gjz = aj2 * hrr_1100z;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_1001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    gjlx = aj2 * hrr_0101x;
                    gjly = aj2 * hrr_0101y;
                    double hrr_1101z = hrr_2001z - zjzi * hrr_1001z;
                    gjlz = aj2 * hrr_1101z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            continue;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        int natm = envs.natm;
        double *ejk = jk.ejk;
        atomicAdd(ejk + (ia*natm+ka)*9 + 0, v_ixkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 1, v_ixky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 2, v_ixkz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 3, v_iykx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 4, v_iyky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 5, v_iykz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 6, v_izkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 7, v_izky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 8, v_izkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 0, v_jxkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 1, v_jxky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 2, v_jxkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 3, v_jykx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 4, v_jyky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 5, v_jykz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 6, v_jzkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 7, v_jzky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 8, v_jzkz);
        atomicAdd(ejk + (ia*natm+la)*9 + 0, v_ixlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 1, v_ixly);
        atomicAdd(ejk + (ia*natm+la)*9 + 2, v_ixlz);
        atomicAdd(ejk + (ia*natm+la)*9 + 3, v_iylx);
        atomicAdd(ejk + (ia*natm+la)*9 + 4, v_iyly);
        atomicAdd(ejk + (ia*natm+la)*9 + 5, v_iylz);
        atomicAdd(ejk + (ia*natm+la)*9 + 6, v_izlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 7, v_izly);
        atomicAdd(ejk + (ia*natm+la)*9 + 8, v_izlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 0, v_jxlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 1, v_jxly);
        atomicAdd(ejk + (ja*natm+la)*9 + 2, v_jxlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 3, v_jylx);
        atomicAdd(ejk + (ja*natm+la)*9 + 4, v_jyly);
        atomicAdd(ejk + (ja*natm+la)*9 + 5, v_jylz);
        atomicAdd(ejk + (ja*natm+la)*9 + 6, v_jzlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 7, v_jzly);
        atomicAdd(ejk + (ja*natm+la)*9 + 8, v_jzlz);
    }
}
__global__
void rys_ejk_ip2_type3_1000(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *pool, double *dd_pool, uint32_t *batch_head)
{
    int b_id = blockIdx.x;
    int t_id = threadIdx.x + blockDim.x * threadIdx.y;
    ShellQuartet *shl_quartet_idx = pool + b_id * QUEUE_DEPTH;

    double *dd_cache = dd_pool + b_id * 768;

    __shared__ int batch_id;
    if (t_id == 0) {
        batch_id = atomicAdd(batch_head, 1);
    }
    __syncthreads();
    int nbatches_kl = (bounds.ntile_kl_pairs + TILES_IN_BATCH - 1) / TILES_IN_BATCH;
    int nbatches = bounds.ntile_ij_pairs * nbatches_kl;
    while (batch_id < nbatches) {
        int batch_ij = batch_id / nbatches_kl;
        int batch_kl = batch_id % nbatches_kl;
        int nbas = envs.nbas;
        double *env = envs.env;
        double omega = env[PTR_RANGE_OMEGA];
        int ntasks;
        if (omega >= 0) {
            ntasks = _fill_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                     batch_ij, batch_kl);
        } else {
            ntasks = _fill_sr_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                        batch_ij, batch_kl);
        }
        if (ntasks > 0) {
            int tile_ij = bounds.tile_ij_mapping[batch_ij];
            int nbas_tiles = nbas / TILE;
            int tile_i = tile_ij / nbas_tiles;
            int tile_j = tile_ij % nbas_tiles;
            int ish0 = tile_i * TILE;
            int jsh0 = tile_j * TILE;
            _rys_ejk_ip2_type3_1000(envs, jk, bounds, shl_quartet_idx, dd_cache,
                             ntasks, ish0, jsh0);
        }
        if (t_id == 0) {
            batch_id = atomicAdd(batch_head, 1);
            atomicAdd(batch_head+1, ntasks);
        }
        __syncthreads();
    }
}

__device__ static
void _rys_ejk_ip2_type3_1010(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *shl_quartet_idx, double *dd_cache,
                int ntasks, int ish0, int jsh0)
{
    int sq_id = threadIdx.x;
    int nsq_per_block = blockDim.x;
    int gout_id = threadIdx.y;
    int gout_stride = blockDim.y;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int *ao_loc = envs.ao_loc;
    int nbas = envs.nbas;
    int nao = ao_loc[nbas];
    int *bas = envs.bas;
    double *env = envs.env;
    double omega = env[PTR_RANGE_OMEGA];
    double *dm = jk.dm;
    extern __shared__ double cicj_cache[];
    double *rw = cicj_cache + iprim*jprim*TILE2 + sq_id;
    dd_cache += sq_id;
    int thread_id = nsq_per_block * gout_id + sq_id;
    int threads = nsq_per_block * gout_stride;
    for (int n = thread_id; n < iprim*jprim*TILE2; n += threads) {
        int ijp = n / TILE2;
        int sh_ij = n % TILE2;
        int ish = ish0 + sh_ij / TILE;
        int jsh = jsh0 + sh_ij % TILE;
        int ip = ijp / jprim;
        int jp = ijp % jprim;
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
        double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double theta_ij = ai * aj / aij;
        double Kab = exp(-theta_ij * (xjxi*xjxi+yjyi*yjyi+zjzi*zjzi));
        cicj_cache[n] = ci[ip] * cj[jp] * Kab;
    }

    for (int task0 = 0; task0 < ntasks; task0 += nsq_per_block) {
        __syncthreads();
        int task_id = task0 + sq_id;
        double fac_sym = PI_FAC;
        ShellQuartet sq;
        if (task_id >= ntasks) {
            // To avoid __syncthreads blocking blocking idle warps, all remaining
            // threads compute a valid shell quartet with zero normalization factor
            sq = shl_quartet_idx[0];
            fac_sym = 0.;
        } else {
            sq = shl_quartet_idx[task_id];
        }
        int ish = sq.i;
        int jsh = sq.j;
        int ksh = sq.k;
        int lsh = sq.l;
        int sh_ij = (ish % TILE) * TILE + (jsh % TILE);
        if (ish == jsh) fac_sym *= .5;
        if (ksh == lsh) fac_sym *= .5;
        if (ish*nbas+jsh == ksh*nbas+lsh) fac_sym *= .5;
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double dd;
        double Ix, Iy, Iz, prod_xy, prod_xz, prod_yz;
        double gix, giy, giz;
        double gjx, gjy, gjz;
        double gkx, gky, gkz;
        double glx, gly, glz;
        double gikx, giky, gikz;
        double gjkx, gjky, gjkz;
        double gilx, gily, gilz;
        double gjlx, gjly, gjlz;
        double v_ixkx = 0;
        double v_ixky = 0;
        double v_ixkz = 0;
        double v_iykx = 0;
        double v_iyky = 0;
        double v_iykz = 0;
        double v_izkx = 0;
        double v_izky = 0;
        double v_izkz = 0;
        double v_jxkx = 0;
        double v_jxky = 0;
        double v_jxkz = 0;
        double v_jykx = 0;
        double v_jyky = 0;
        double v_jykz = 0;
        double v_jzkx = 0;
        double v_jzky = 0;
        double v_jzkz = 0;
        double v_ixlx = 0;
        double v_ixly = 0;
        double v_ixlz = 0;
        double v_iylx = 0;
        double v_iyly = 0;
        double v_iylz = 0;
        double v_izlx = 0;
        double v_izly = 0;
        double v_izlz = 0;
        double v_jxlx = 0;
        double v_jxly = 0;
        double v_jxlz = 0;
        double v_jylx = 0;
        double v_jyly = 0;
        double v_jylz = 0;
        double v_jzlx = 0;
        double v_jzly = 0;
        double v_jzlz = 0;
        double dd_cache0 = 0.;
        double dd_cache1 = 0.;
        double dd_cache2 = 0.;
        double dd_cache3 = 0.;
        double dd_cache4 = 0.;
        double dd_cache5 = 0.;
        double dd_cache6 = 0.;
        double dd_cache7 = 0.;
        double dd_cache8 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                dd_cache0 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache1 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache2 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache3 += jk.k_factor * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+1)]);
                dd_cache4 += jk.k_factor * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+1)]);
                dd_cache5 += jk.k_factor * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+1)]);
                dd_cache6 += jk.k_factor * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+2)]);
                dd_cache7 += jk.k_factor * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+2)]);
                dd_cache8 += jk.k_factor * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+2)]);
            }
            if (jk.j_factor != 0) {
                dd_cache0 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache1 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache2 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache3 += jk.j_factor * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache4 += jk.j_factor * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache5 += jk.j_factor * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache6 += jk.j_factor * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache7 += jk.j_factor * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache8 += jk.j_factor * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+2)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                dd_cache0 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache1 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache2 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache3 += jk.k_factor * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+1)]);
                dd_cache4 += jk.k_factor * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+1)]);
                dd_cache5 += jk.k_factor * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+1)]);
                dd_cache6 += jk.k_factor * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+2)]);
                dd_cache7 += jk.k_factor * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+2)]);
                dd_cache8 += jk.k_factor * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+2)]);
            }
            if (jk.j_factor != 0) {
                dd_cache0 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache1 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache2 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache3 += jk.j_factor * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache4 += jk.j_factor * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache5 += jk.j_factor * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache6 += jk.j_factor * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache7 += jk.j_factor * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache8 += jk.j_factor * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
            }
        }
        
        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = fac_sym * ck[kp] * cl[lp] * Kcd;
            double xqc = xlxk * al_akl;
            double yqc = ylyk * al_akl;
            double zqc = zlzk * al_akl;
            double xkl = rk[0] + xqc;
            double ykl = rk[1] + yqc;
            double zkl = rk[2] + zqc;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[sh_ij+ijp*TILE2];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = xjxi * aj_aij;
                double ypa = yjyi * aj_aij;
                double zpa = zjzi * aj_aij;
                double xij = ri[0] + xpa; // (ai*xi+aj*xj)/aij
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                double theta_rr = theta * rr;
                if (omega == 0) {
                    rys_roots(3, theta_rr, rw, nsq_per_block, 0, 1);
                    for (int irys = 0; irys < 3; ++irys) {
                        rw[(irys*2+1)*nsq_per_block] *= fac;
                    }
                } else if (omega > 0) {
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(3, theta_fac*theta_rr, rw, nsq_per_block, 0, 1);
                    double sqrt_theta_fac = sqrt(theta_fac) * fac;
                    for (int irys = 0; irys < 3; ++irys) {
                        rw[ irys*2   *nsq_per_block] *= theta_fac;
                        rw[(irys*2+1)*nsq_per_block] *= sqrt_theta_fac;
                    }
                } else {
                    double *rw1 = rw + 6*nsq_per_block;
                    rys_roots(3, theta_rr, rw1, nsq_per_block, 0, 1);
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(3, theta_fac*theta_rr, rw, nsq_per_block, 0, 1);
                    double sqrt_theta_fac = -sqrt(theta_fac) * fac;
                    for (int irys = 0; irys < 3; ++irys) {
                        rw[ irys*2   *nsq_per_block] *= theta_fac;
                        rw[(irys*2+1)*nsq_per_block] *= sqrt_theta_fac;
                        rw1[(irys*2+1)*nsq_per_block] *= fac;
                    }
                }
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < bounds.nroots; ++irys) {
                    {
                    double wt = rw[(2*irys+1)*nsq_per_block];
                    double rt = rw[ 2*irys   *nsq_per_block];
                    double rt_aa = rt / (aij + akl);
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    double b00 = .5 * rt_aa;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    dd = dd_cache0;
                    Ix = trr_11x * dd;
                    Iy = 1 * dd;
                    Iz = wt * dd;
                    prod_xy = trr_11x * Iy;
                    prod_xz = trr_11x * Iz;
                    prod_yz = 1 * Iz;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    gix = ai2 * trr_21x;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    giy = ai2 * trr_10y;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    giz = ai2 * trr_10z;
                    double trr_01x = cpx * 1;
                    gix -= 1 * trr_01x;
                    double b01 = .5/akl * (1 - rt_akl);
                    double trr_12x = cpx * trr_11x + 1*b01 * trr_10x + 1*b00 * trr_01x;
                    gkx = ak2 * trr_12x;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    gky = ak2 * trr_01y;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    gkz = ak2 * trr_01z;
                    gkx -= 1 * trr_10x;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    double trr_22x = cpx * trr_21x + 1*b01 * trr_20x + 2*b00 * trr_11x;
                    gikx = ai2 * trr_22x;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    giky = ai2 * trr_11y;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    gikz = ai2 * trr_11z;
                    double trr_02x = cpx * trr_01x + 1*b01 * 1;
                    gikx -= 1 * trr_02x;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    gikx -= 1 * (ai2 * trr_20x - 1 * 1);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    double hrr_1110x = trr_21x - xjxi * trr_11x;
                    gjx = aj2 * hrr_1110x;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    gjy = aj2 * hrr_0100y;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    gjz = aj2 * hrr_0100z;
                    gkx = ak2 * trr_12x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * trr_01z;
                    gkx -= 1 * trr_10x;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    double hrr_1120x = trr_22x - xjxi * trr_12x;
                    gjkx = aj2 * hrr_1120x;
                    double hrr_0110y = trr_11y - yjyi * trr_01y;
                    gjky = aj2 * hrr_0110y;
                    double hrr_0110z = trr_11z - zjzi * trr_01z;
                    gjkz = aj2 * hrr_0110z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    gjkx -= 1 * (aj2 * hrr_1100x);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache1;
                    Ix = trr_01x * dd;
                    Iy = trr_10y * dd;
                    Iz = wt * dd;
                    prod_xy = trr_01x * Iy;
                    prod_xz = trr_01x * Iz;
                    prod_yz = trr_10y * Iz;
                    gix = ai2 * trr_11x;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    giy = ai2 * trr_20y;
                    giz = ai2 * trr_10z;
                    giy -= 1 * 1;
                    gkx = ak2 * trr_02x;
                    gky = ak2 * trr_11y;
                    gkz = ak2 * trr_01z;
                    gkx -= 1 * 1;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_12x;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    giky = ai2 * trr_21y;
                    gikz = ai2 * trr_11z;
                    giky -= 1 * trr_01y;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    gikx -= 1 * (ai2 * trr_10x);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    double hrr_0110x = trr_11x - xjxi * trr_01x;
                    gjx = aj2 * hrr_0110x;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    gjy = aj2 * hrr_1100y;
                    gjz = aj2 * hrr_0100z;
                    gkx = ak2 * trr_02x;
                    gky = ak2 * trr_11y;
                    gkz = ak2 * trr_01z;
                    gkx -= 1 * 1;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    double hrr_0120x = trr_12x - xjxi * trr_02x;
                    gjkx = aj2 * hrr_0120x;
                    double hrr_1110y = trr_21y - yjyi * trr_11y;
                    gjky = aj2 * hrr_1110y;
                    gjkz = aj2 * hrr_0110z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    gjkx -= 1 * (aj2 * hrr_0100x);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache2;
                    Ix = trr_01x * dd;
                    Iy = 1 * dd;
                    Iz = trr_10z * dd;
                    prod_xy = trr_01x * Iy;
                    prod_xz = trr_01x * Iz;
                    prod_yz = 1 * Iz;
                    gix = ai2 * trr_11x;
                    giy = ai2 * trr_10y;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    giz = ai2 * trr_20z;
                    giz -= 1 * wt;
                    gkx = ak2 * trr_02x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * trr_11z;
                    gkx -= 1 * 1;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_12x;
                    giky = ai2 * trr_11y;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    gikz = ai2 * trr_21z;
                    gikz -= 1 * trr_01z;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    gikx -= 1 * (ai2 * trr_10x);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_0110x;
                    gjy = aj2 * hrr_0100y;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    gjz = aj2 * hrr_1100z;
                    gkx = ak2 * trr_02x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * trr_11z;
                    gkx -= 1 * 1;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_0120x;
                    gjky = aj2 * hrr_0110y;
                    double hrr_1110z = trr_21z - zjzi * trr_11z;
                    gjkz = aj2 * hrr_1110z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    gjkx -= 1 * (aj2 * hrr_0100x);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache3;
                    Ix = trr_10x * dd;
                    Iy = trr_01y * dd;
                    Iz = wt * dd;
                    prod_xy = trr_10x * Iy;
                    prod_xz = trr_10x * Iz;
                    prod_yz = trr_01y * Iz;
                    gix = ai2 * trr_20x;
                    giy = ai2 * trr_11y;
                    giz = ai2 * trr_10z;
                    gix -= 1 * 1;
                    gkx = ak2 * trr_11x;
                    double trr_02y = cpy * trr_01y + 1*b01 * 1;
                    gky = ak2 * trr_02y;
                    gkz = ak2 * trr_01z;
                    gky -= 1 * 1;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_21x;
                    double trr_12y = cpy * trr_11y + 1*b01 * trr_10y + 1*b00 * trr_01y;
                    giky = ai2 * trr_12y;
                    gikz = ai2 * trr_11z;
                    gikx -= 1 * trr_01x;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    giky -= 1 * (ai2 * trr_10y);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_1100x;
                    gjy = aj2 * hrr_0110y;
                    gjz = aj2 * hrr_0100z;
                    gkx = ak2 * trr_11x;
                    gky = ak2 * trr_02y;
                    gkz = ak2 * trr_01z;
                    gky -= 1 * 1;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_1110x;
                    double hrr_0120y = trr_12y - yjyi * trr_02y;
                    gjky = aj2 * hrr_0120y;
                    gjkz = aj2 * hrr_0110z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    gjky -= 1 * (aj2 * hrr_0100y);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache4;
                    Ix = 1 * dd;
                    Iy = trr_11y * dd;
                    Iz = wt * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = trr_11y * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_21y;
                    giz = ai2 * trr_10z;
                    giy -= 1 * trr_01y;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_12y;
                    gkz = ak2 * trr_01z;
                    gky -= 1 * trr_10y;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_11x;
                    double trr_22y = cpy * trr_21y + 1*b01 * trr_20y + 2*b00 * trr_11y;
                    giky = ai2 * trr_22y;
                    gikz = ai2 * trr_11z;
                    giky -= 1 * trr_02y;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    giky -= 1 * (ai2 * trr_20y - 1 * 1);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_1110y;
                    gjz = aj2 * hrr_0100z;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_12y;
                    gkz = ak2 * trr_01z;
                    gky -= 1 * trr_10y;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_0110x;
                    double hrr_1120y = trr_22y - yjyi * trr_12y;
                    gjky = aj2 * hrr_1120y;
                    gjkz = aj2 * hrr_0110z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    gjky -= 1 * (aj2 * hrr_1100y);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache5;
                    Ix = 1 * dd;
                    Iy = trr_01y * dd;
                    Iz = trr_10z * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = trr_01y * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_11y;
                    giz = ai2 * trr_20z;
                    giz -= 1 * wt;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_02y;
                    gkz = ak2 * trr_11z;
                    gky -= 1 * 1;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_11x;
                    giky = ai2 * trr_12y;
                    gikz = ai2 * trr_21z;
                    gikz -= 1 * trr_01z;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    giky -= 1 * (ai2 * trr_10y);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_0110y;
                    gjz = aj2 * hrr_1100z;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_02y;
                    gkz = ak2 * trr_11z;
                    gky -= 1 * 1;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_0110x;
                    gjky = aj2 * hrr_0120y;
                    gjkz = aj2 * hrr_1110z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    gjky -= 1 * (aj2 * hrr_0100y);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache6;
                    Ix = trr_10x * dd;
                    Iy = 1 * dd;
                    Iz = trr_01z * dd;
                    prod_xy = trr_10x * Iy;
                    prod_xz = trr_10x * Iz;
                    prod_yz = 1 * Iz;
                    gix = ai2 * trr_20x;
                    giy = ai2 * trr_10y;
                    giz = ai2 * trr_11z;
                    gix -= 1 * 1;
                    gkx = ak2 * trr_11x;
                    gky = ak2 * trr_01y;
                    double trr_02z = cpz * trr_01z + 1*b01 * wt;
                    gkz = ak2 * trr_02z;
                    gkz -= 1 * wt;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_21x;
                    giky = ai2 * trr_11y;
                    double trr_12z = cpz * trr_11z + 1*b01 * trr_10z + 1*b00 * trr_01z;
                    gikz = ai2 * trr_12z;
                    gikx -= 1 * trr_01x;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    gikz -= 1 * (ai2 * trr_10z);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_1100x;
                    gjy = aj2 * hrr_0100y;
                    gjz = aj2 * hrr_0110z;
                    gkx = ak2 * trr_11x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * trr_02z;
                    gkz -= 1 * wt;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_1110x;
                    gjky = aj2 * hrr_0110y;
                    double hrr_0120z = trr_12z - zjzi * trr_02z;
                    gjkz = aj2 * hrr_0120z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    gjkz -= 1 * (aj2 * hrr_0100z);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache7;
                    Ix = 1 * dd;
                    Iy = trr_10y * dd;
                    Iz = trr_01z * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = trr_10y * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_20y;
                    giz = ai2 * trr_11z;
                    giy -= 1 * 1;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_11y;
                    gkz = ak2 * trr_02z;
                    gkz -= 1 * wt;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_11x;
                    giky = ai2 * trr_21y;
                    gikz = ai2 * trr_12z;
                    giky -= 1 * trr_01y;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    gikz -= 1 * (ai2 * trr_10z);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_1100y;
                    gjz = aj2 * hrr_0110z;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_11y;
                    gkz = ak2 * trr_02z;
                    gkz -= 1 * wt;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_0110x;
                    gjky = aj2 * hrr_1110y;
                    gjkz = aj2 * hrr_0120z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    gjkz -= 1 * (aj2 * hrr_0100z);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache8;
                    Ix = 1 * dd;
                    Iy = 1 * dd;
                    Iz = trr_11z * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = 1 * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_10y;
                    giz = ai2 * trr_21z;
                    giz -= 1 * trr_01z;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * trr_12z;
                    gkz -= 1 * trr_10z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_11x;
                    giky = ai2 * trr_11y;
                    double trr_22z = cpz * trr_21z + 1*b01 * trr_20z + 2*b00 * trr_11z;
                    gikz = ai2 * trr_22z;
                    gikz -= 1 * trr_02z;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    gikz -= 1 * (ai2 * trr_20z - 1 * wt);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_0100y;
                    gjz = aj2 * hrr_1110z;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * trr_12z;
                    gkz -= 1 * trr_10z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_0110x;
                    gjky = aj2 * hrr_0110y;
                    double hrr_1120z = trr_22z - zjzi * trr_12z;
                    gjkz = aj2 * hrr_1120z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    gjkz -= 1 * (aj2 * hrr_1100z);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    }
                    {
                    double wt = rw[(2*irys+1)*nsq_per_block];
                    double rt = rw[ 2*irys   *nsq_per_block];
                    double rt_aa = rt / (aij + akl);
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    double b00 = .5 * rt_aa;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    dd = dd_cache0;
                    Ix = trr_11x * dd;
                    Iy = 1 * dd;
                    Iz = wt * dd;
                    prod_xy = trr_11x * Iy;
                    prod_xz = trr_11x * Iz;
                    prod_yz = 1 * Iz;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    gix = ai2 * trr_21x;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    giy = ai2 * trr_10y;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    giz = ai2 * trr_10z;
                    double trr_01x = cpx * 1;
                    gix -= 1 * trr_01x;
                    double b01 = .5/akl * (1 - rt_akl);
                    double trr_12x = cpx * trr_11x + 1*b01 * trr_10x + 1*b00 * trr_01x;
                    double hrr_1011x = trr_12x - xlxk * trr_11x;
                    glx = al2 * hrr_1011x;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    gly = al2 * hrr_0001y;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    glz = al2 * hrr_0001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    double trr_22x = cpx * trr_21x + 1*b01 * trr_20x + 2*b00 * trr_11x;
                    double hrr_2011x = trr_22x - xlxk * trr_21x;
                    gilx = ai2 * hrr_2011x;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    gily = ai2 * hrr_1001y;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    gilz = ai2 * hrr_1001z;
                    double trr_02x = cpx * trr_01x + 1*b01 * 1;
                    double hrr_0011x = trr_02x - xlxk * trr_01x;
                    gilx -= 1 * hrr_0011x;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    double hrr_1110x = trr_21x - xjxi * trr_11x;
                    gjx = aj2 * hrr_1110x;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    gjy = aj2 * hrr_0100y;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    gjz = aj2 * hrr_0100z;
                    glx = al2 * hrr_1011x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_0001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    double hrr_1111x = hrr_2011x - xjxi * hrr_1011x;
                    gjlx = aj2 * hrr_1111x;
                    double hrr_0101y = hrr_1001y - yjyi * hrr_0001y;
                    gjly = aj2 * hrr_0101y;
                    double hrr_0101z = hrr_1001z - zjzi * hrr_0001z;
                    gjlz = aj2 * hrr_0101z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache1;
                    Ix = trr_01x * dd;
                    Iy = trr_10y * dd;
                    Iz = wt * dd;
                    prod_xy = trr_01x * Iy;
                    prod_xz = trr_01x * Iz;
                    prod_yz = trr_10y * Iz;
                    gix = ai2 * trr_11x;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    giy = ai2 * trr_20y;
                    giz = ai2 * trr_10z;
                    giy -= 1 * 1;
                    glx = al2 * hrr_0011x;
                    gly = al2 * hrr_1001y;
                    glz = al2 * hrr_0001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1011x;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    double hrr_2001y = trr_21y - ylyk * trr_20y;
                    gily = ai2 * hrr_2001y;
                    gilz = ai2 * hrr_1001z;
                    gily -= 1 * hrr_0001y;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    double hrr_0110x = trr_11x - xjxi * trr_01x;
                    gjx = aj2 * hrr_0110x;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    gjy = aj2 * hrr_1100y;
                    gjz = aj2 * hrr_0100z;
                    glx = al2 * hrr_0011x;
                    gly = al2 * hrr_1001y;
                    glz = al2 * hrr_0001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    double hrr_0111x = hrr_1011x - xjxi * hrr_0011x;
                    gjlx = aj2 * hrr_0111x;
                    double hrr_1101y = hrr_2001y - yjyi * hrr_1001y;
                    gjly = aj2 * hrr_1101y;
                    gjlz = aj2 * hrr_0101z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache2;
                    Ix = trr_01x * dd;
                    Iy = 1 * dd;
                    Iz = trr_10z * dd;
                    prod_xy = trr_01x * Iy;
                    prod_xz = trr_01x * Iz;
                    prod_yz = 1 * Iz;
                    gix = ai2 * trr_11x;
                    giy = ai2 * trr_10y;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    giz = ai2 * trr_20z;
                    giz -= 1 * wt;
                    glx = al2 * hrr_0011x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_1001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1011x;
                    gily = ai2 * hrr_1001y;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    double hrr_2001z = trr_21z - zlzk * trr_20z;
                    gilz = ai2 * hrr_2001z;
                    gilz -= 1 * hrr_0001z;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_0110x;
                    gjy = aj2 * hrr_0100y;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    gjz = aj2 * hrr_1100z;
                    glx = al2 * hrr_0011x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_1001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    gjlx = aj2 * hrr_0111x;
                    gjly = aj2 * hrr_0101y;
                    double hrr_1101z = hrr_2001z - zjzi * hrr_1001z;
                    gjlz = aj2 * hrr_1101z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache3;
                    Ix = trr_10x * dd;
                    Iy = trr_01y * dd;
                    Iz = wt * dd;
                    prod_xy = trr_10x * Iy;
                    prod_xz = trr_10x * Iz;
                    prod_yz = trr_01y * Iz;
                    gix = ai2 * trr_20x;
                    giy = ai2 * trr_11y;
                    giz = ai2 * trr_10z;
                    gix -= 1 * 1;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    glx = al2 * hrr_1001x;
                    double trr_02y = cpy * trr_01y + 1*b01 * 1;
                    double hrr_0011y = trr_02y - ylyk * trr_01y;
                    gly = al2 * hrr_0011y;
                    glz = al2 * hrr_0001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    double hrr_2001x = trr_21x - xlxk * trr_20x;
                    gilx = ai2 * hrr_2001x;
                    double trr_12y = cpy * trr_11y + 1*b01 * trr_10y + 1*b00 * trr_01y;
                    double hrr_1011y = trr_12y - ylyk * trr_11y;
                    gily = ai2 * hrr_1011y;
                    gilz = ai2 * hrr_1001z;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    gilx -= 1 * hrr_0001x;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    gjx = aj2 * hrr_1100x;
                    double hrr_0110y = trr_11y - yjyi * trr_01y;
                    gjy = aj2 * hrr_0110y;
                    gjz = aj2 * hrr_0100z;
                    glx = al2 * hrr_1001x;
                    gly = al2 * hrr_0011y;
                    glz = al2 * hrr_0001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    double hrr_1101x = hrr_2001x - xjxi * hrr_1001x;
                    gjlx = aj2 * hrr_1101x;
                    double hrr_0111y = hrr_1011y - yjyi * hrr_0011y;
                    gjly = aj2 * hrr_0111y;
                    gjlz = aj2 * hrr_0101z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache4;
                    Ix = 1 * dd;
                    Iy = trr_11y * dd;
                    Iz = wt * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = trr_11y * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_21y;
                    giz = ai2 * trr_10z;
                    giy -= 1 * trr_01y;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_1011y;
                    glz = al2 * hrr_0001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1001x;
                    double trr_22y = cpy * trr_21y + 1*b01 * trr_20y + 2*b00 * trr_11y;
                    double hrr_2011y = trr_22y - ylyk * trr_21y;
                    gily = ai2 * hrr_2011y;
                    gilz = ai2 * hrr_1001z;
                    gily -= 1 * hrr_0011y;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    gjx = aj2 * hrr_0100x;
                    double hrr_1110y = trr_21y - yjyi * trr_11y;
                    gjy = aj2 * hrr_1110y;
                    gjz = aj2 * hrr_0100z;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_1011y;
                    glz = al2 * hrr_0001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    double hrr_0101x = hrr_1001x - xjxi * hrr_0001x;
                    gjlx = aj2 * hrr_0101x;
                    double hrr_1111y = hrr_2011y - yjyi * hrr_1011y;
                    gjly = aj2 * hrr_1111y;
                    gjlz = aj2 * hrr_0101z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache5;
                    Ix = 1 * dd;
                    Iy = trr_01y * dd;
                    Iz = trr_10z * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = trr_01y * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_11y;
                    giz = ai2 * trr_20z;
                    giz -= 1 * wt;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_0011y;
                    glz = al2 * hrr_1001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1001x;
                    gily = ai2 * hrr_1011y;
                    gilz = ai2 * hrr_2001z;
                    gilz -= 1 * hrr_0001z;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_0110y;
                    gjz = aj2 * hrr_1100z;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_0011y;
                    glz = al2 * hrr_1001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    gjlx = aj2 * hrr_0101x;
                    gjly = aj2 * hrr_0111y;
                    gjlz = aj2 * hrr_1101z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache6;
                    Ix = trr_10x * dd;
                    Iy = 1 * dd;
                    Iz = trr_01z * dd;
                    prod_xy = trr_10x * Iy;
                    prod_xz = trr_10x * Iz;
                    prod_yz = 1 * Iz;
                    gix = ai2 * trr_20x;
                    giy = ai2 * trr_10y;
                    giz = ai2 * trr_11z;
                    gix -= 1 * 1;
                    glx = al2 * hrr_1001x;
                    gly = al2 * hrr_0001y;
                    double trr_02z = cpz * trr_01z + 1*b01 * wt;
                    double hrr_0011z = trr_02z - zlzk * trr_01z;
                    glz = al2 * hrr_0011z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_2001x;
                    gily = ai2 * hrr_1001y;
                    double trr_12z = cpz * trr_11z + 1*b01 * trr_10z + 1*b00 * trr_01z;
                    double hrr_1011z = trr_12z - zlzk * trr_11z;
                    gilz = ai2 * hrr_1011z;
                    gilx -= 1 * hrr_0001x;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_1100x;
                    gjy = aj2 * hrr_0100y;
                    double hrr_0110z = trr_11z - zjzi * trr_01z;
                    gjz = aj2 * hrr_0110z;
                    glx = al2 * hrr_1001x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_0011z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    gjlx = aj2 * hrr_1101x;
                    gjly = aj2 * hrr_0101y;
                    double hrr_0111z = hrr_1011z - zjzi * hrr_0011z;
                    gjlz = aj2 * hrr_0111z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache7;
                    Ix = 1 * dd;
                    Iy = trr_10y * dd;
                    Iz = trr_01z * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = trr_10y * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_20y;
                    giz = ai2 * trr_11z;
                    giy -= 1 * 1;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_1001y;
                    glz = al2 * hrr_0011z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1001x;
                    gily = ai2 * hrr_2001y;
                    gilz = ai2 * hrr_1011z;
                    gily -= 1 * hrr_0001y;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_1100y;
                    gjz = aj2 * hrr_0110z;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_1001y;
                    glz = al2 * hrr_0011z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    gjlx = aj2 * hrr_0101x;
                    gjly = aj2 * hrr_1101y;
                    gjlz = aj2 * hrr_0111z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache8;
                    Ix = 1 * dd;
                    Iy = 1 * dd;
                    Iz = trr_11z * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = 1 * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_10y;
                    giz = ai2 * trr_21z;
                    giz -= 1 * trr_01z;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_1011z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1001x;
                    gily = ai2 * hrr_1001y;
                    double trr_22z = cpz * trr_21z + 1*b01 * trr_20z + 2*b00 * trr_11z;
                    double hrr_2011z = trr_22z - zlzk * trr_21z;
                    gilz = ai2 * hrr_2011z;
                    gilz -= 1 * hrr_0011z;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_0100y;
                    double hrr_1110z = trr_21z - zjzi * trr_11z;
                    gjz = aj2 * hrr_1110z;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_1011z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    gjlx = aj2 * hrr_0101x;
                    gjly = aj2 * hrr_0101y;
                    double hrr_1111z = hrr_2011z - zjzi * hrr_1011z;
                    gjlz = aj2 * hrr_1111z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            continue;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        int natm = envs.natm;
        double *ejk = jk.ejk;
        atomicAdd(ejk + (ia*natm+ka)*9 + 0, v_ixkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 1, v_ixky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 2, v_ixkz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 3, v_iykx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 4, v_iyky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 5, v_iykz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 6, v_izkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 7, v_izky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 8, v_izkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 0, v_jxkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 1, v_jxky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 2, v_jxkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 3, v_jykx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 4, v_jyky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 5, v_jykz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 6, v_jzkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 7, v_jzky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 8, v_jzkz);
        atomicAdd(ejk + (ia*natm+la)*9 + 0, v_ixlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 1, v_ixly);
        atomicAdd(ejk + (ia*natm+la)*9 + 2, v_ixlz);
        atomicAdd(ejk + (ia*natm+la)*9 + 3, v_iylx);
        atomicAdd(ejk + (ia*natm+la)*9 + 4, v_iyly);
        atomicAdd(ejk + (ia*natm+la)*9 + 5, v_iylz);
        atomicAdd(ejk + (ia*natm+la)*9 + 6, v_izlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 7, v_izly);
        atomicAdd(ejk + (ia*natm+la)*9 + 8, v_izlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 0, v_jxlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 1, v_jxly);
        atomicAdd(ejk + (ja*natm+la)*9 + 2, v_jxlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 3, v_jylx);
        atomicAdd(ejk + (ja*natm+la)*9 + 4, v_jyly);
        atomicAdd(ejk + (ja*natm+la)*9 + 5, v_jylz);
        atomicAdd(ejk + (ja*natm+la)*9 + 6, v_jzlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 7, v_jzly);
        atomicAdd(ejk + (ja*natm+la)*9 + 8, v_jzlz);
    }
}
__global__
void rys_ejk_ip2_type3_1010(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *pool, double *dd_pool, uint32_t *batch_head)
{
    int b_id = blockIdx.x;
    int t_id = threadIdx.x + blockDim.x * threadIdx.y;
    ShellQuartet *shl_quartet_idx = pool + b_id * QUEUE_DEPTH;

    double *dd_cache = dd_pool + b_id * 2304;

    __shared__ int batch_id;
    if (t_id == 0) {
        batch_id = atomicAdd(batch_head, 1);
    }
    __syncthreads();
    int nbatches_kl = (bounds.ntile_kl_pairs + TILES_IN_BATCH - 1) / TILES_IN_BATCH;
    int nbatches = bounds.ntile_ij_pairs * nbatches_kl;
    while (batch_id < nbatches) {
        int batch_ij = batch_id / nbatches_kl;
        int batch_kl = batch_id % nbatches_kl;
        int nbas = envs.nbas;
        double *env = envs.env;
        double omega = env[PTR_RANGE_OMEGA];
        int ntasks;
        if (omega >= 0) {
            ntasks = _fill_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                     batch_ij, batch_kl);
        } else {
            ntasks = _fill_sr_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                        batch_ij, batch_kl);
        }
        if (ntasks > 0) {
            int tile_ij = bounds.tile_ij_mapping[batch_ij];
            int nbas_tiles = nbas / TILE;
            int tile_i = tile_ij / nbas_tiles;
            int tile_j = tile_ij % nbas_tiles;
            int ish0 = tile_i * TILE;
            int jsh0 = tile_j * TILE;
            _rys_ejk_ip2_type3_1010(envs, jk, bounds, shl_quartet_idx, dd_cache,
                             ntasks, ish0, jsh0);
        }
        if (t_id == 0) {
            batch_id = atomicAdd(batch_head, 1);
            atomicAdd(batch_head+1, ntasks);
        }
        __syncthreads();
    }
}

__device__ static
void _rys_ejk_ip2_type3_1011(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *shl_quartet_idx, double *dd_cache,
                int ntasks, int ish0, int jsh0)
{
    int sq_id = threadIdx.x;
    int nsq_per_block = blockDim.x;
    int gout_id = threadIdx.y;
    int gout_stride = blockDim.y;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int *ao_loc = envs.ao_loc;
    int nbas = envs.nbas;
    int nao = ao_loc[nbas];
    int *bas = envs.bas;
    double *env = envs.env;
    double omega = env[PTR_RANGE_OMEGA];
    double *dm = jk.dm;
    extern __shared__ double cicj_cache[];
    double *rw = cicj_cache + iprim*jprim*TILE2 + sq_id;
    double *gx = rw + 64 * bounds.nroots;
    double *gy = gx + 1728;
    double *gz = gy + 1728;
    if (gout_id == 0) {
        gx[0] = 1.;
        gy[0] = 1.;
    }
    double s0, s1, s2;
    double Rpq[3];
    dd_cache += sq_id;
    int thread_id = nsq_per_block * gout_id + sq_id;
    int threads = nsq_per_block * gout_stride;
    for (int n = thread_id; n < iprim*jprim*TILE2; n += threads) {
        int ijp = n / TILE2;
        int sh_ij = n % TILE2;
        int ish = ish0 + sh_ij / TILE;
        int jsh = jsh0 + sh_ij % TILE;
        int ip = ijp / jprim;
        int jp = ijp % jprim;
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
        double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double theta_ij = ai * aj / aij;
        double Kab = exp(-theta_ij * (xjxi*xjxi+yjyi*yjyi+zjzi*zjzi));
        cicj_cache[n] = ci[ip] * cj[jp] * Kab;
    }

    for (int task0 = 0; task0 < ntasks; task0 += nsq_per_block) {
        __syncthreads();
        int task_id = task0 + sq_id;
        double fac_sym = PI_FAC;
        ShellQuartet sq;
        if (task_id >= ntasks) {
            // To avoid __syncthreads blocking blocking idle warps, all remaining
            // threads compute a valid shell quartet with zero normalization factor
            sq = shl_quartet_idx[0];
            fac_sym = 0.;
        } else {
            sq = shl_quartet_idx[task_id];
        }
        int ish = sq.i;
        int jsh = sq.j;
        int ksh = sq.k;
        int lsh = sq.l;
        int sh_ij = (ish % TILE) * TILE + (jsh % TILE);
        if (ish == jsh) fac_sym *= .5;
        if (ksh == lsh) fac_sym *= .5;
        if (ish*nbas+jsh == ksh*nbas+lsh) fac_sym *= .5;
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double dd;
        double Ix, Iy, Iz, prod_xy, prod_xz, prod_yz;
        double gix, giy, giz;
        double gjx, gjy, gjz;
        double gkx, gky, gkz;
        double glx, gly, glz;
        double gikx, giky, gikz;
        double gjkx, gjky, gjkz;
        double gilx, gily, gilz;
        double gjlx, gjly, gjlz;
        double v_ixkx = 0;
        double v_ixky = 0;
        double v_ixkz = 0;
        double v_iykx = 0;
        double v_iyky = 0;
        double v_iykz = 0;
        double v_izkx = 0;
        double v_izky = 0;
        double v_izkz = 0;
        double v_jxkx = 0;
        double v_jxky = 0;
        double v_jxkz = 0;
        double v_jykx = 0;
        double v_jyky = 0;
        double v_jykz = 0;
        double v_jzkx = 0;
        double v_jzky = 0;
        double v_jzkz = 0;
        double v_ixlx = 0;
        double v_ixly = 0;
        double v_ixlz = 0;
        double v_iylx = 0;
        double v_iyly = 0;
        double v_iylz = 0;
        double v_izlx = 0;
        double v_izly = 0;
        double v_izlz = 0;
        double v_jxlx = 0;
        double v_jxly = 0;
        double v_jxlz = 0;
        double v_jylx = 0;
        double v_jyly = 0;
        double v_jylz = 0;
        double v_jzlx = 0;
        double v_jzly = 0;
        double v_jzlz = 0;
        int do_j = jk.j_factor != 0.;
        int do_k = jk.k_factor != 0.;
        if (jk.n_dm == 1) {
            for (int n = gout_id; n < 27; n+=gout_stride) {
                int kl = n / 3;
                int ij = n % 3;
                int i = ij % 3;
                int j = ij / 3;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm[_jk] * dm[_il] + dm[_jl] * dm[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * dm[_ji] * dm[_lk];
                }
                dd_cache[n*nsq_per_block] = dd;
            }
        } else {
            double *dmb = dm + nao * nao;
            for (int n = gout_id; n < 27; n+=gout_stride) {
                int kl = n / 3;
                int ij = n % 3;
                int i = ij % 3;
                int j = ij / 3;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm [_jk] * dm [_il] + dm [_jl] * dm [_ik] +
                                         dmb[_jk] * dmb[_il] + dmb[_jl] * dmb[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * (dm[_ji] + dm[_ji]) * (dmb[_lk] + dmb[_lk]);
                }
                dd_cache[n*nsq_per_block] = dd;
            }
        }
        
        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = fac_sym * ck[kp] * cl[lp] * Kcd;
            double xqc = xlxk * al_akl;
            double yqc = ylyk * al_akl;
            double zqc = zlzk * al_akl;
            double xkl = rk[0] + xqc;
            double ykl = rk[1] + yqc;
            double zkl = rk[2] + zqc;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[sh_ij+ijp*TILE2];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = xjxi * aj_aij;
                double ypa = yjyi * aj_aij;
                double zpa = zjzi * aj_aij;
                double xij = ri[0] + xpa; // (ai*xi+aj*xj)/aij
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                Rpq[0] = xpq;
                Rpq[1] = ypq;
                Rpq[2] = zpq;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                double theta_rr = theta * rr;
                __syncthreads();
                if (omega == 0) {
                    rys_roots(3, theta_rr, rw, 32, gout_id, gout_stride);
                    __syncthreads();
                    for (int irys = gout_id; irys < 3; irys += gout_stride) {
                        rw[(irys*2+1)*32] *= fac;
                    }
                } else if (omega > 0) {
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(3, theta_fac*theta_rr, rw, 32, gout_id, gout_stride);
                    __syncthreads();
                    double sqrt_theta_fac = sqrt(theta_fac) * fac;
                    for (int irys = gout_id; irys < 3; irys += gout_stride) {
                        rw[ irys*2   *32] *= theta_fac;
                        rw[(irys*2+1)*32] *= sqrt_theta_fac;
                    }
                } else {
                    double *rw1 = rw + 6*32;
                    rys_roots(3, theta_rr, rw1, 32, gout_id, gout_stride);
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(3, theta_fac*theta_rr, rw, 32, gout_id, gout_stride);
                    __syncthreads();
                    double sqrt_theta_fac = -sqrt(theta_fac) * fac;
                    for (int irys = gout_id; irys < 3; irys += gout_stride) {
                        rw[ irys*2   *32] *= theta_fac;
                        rw[(irys*2+1)*32] *= sqrt_theta_fac;
                        rw1[(irys*2+1)*32] *= fac;
                    }
                }
                for (int irys = 0; irys < bounds.nroots; ++irys) {
                    __syncthreads();
                    double rt = rw[irys*64];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double rt_akl = rt_aa * aij;
                    double b00 = .5 * rt_aa;
                    double b10 = .5/aij * (1 - rt_aij);
                    double b01 = .5/akl * (1 - rt_akl);
                    for (int n = gout_id; n < 3; n += 8) {
                        if (n == 2) {
                            gz[0] = rw[irys*64+32];
                        }
                        double *_gx = gx + n * 1728;
                        double xjxi = rj[n] - ri[n];
                        double Rpa = xjxi * aj_aij;
                        double c0x = Rpa - rt_aij * Rpq[n];
                        s0 = _gx[0];
                        s1 = c0x * s0;
                        _gx[32] = s1;
                        s2 = c0x * s1 + 1 * b10 * s0;
                        _gx[64] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 2 * b10 * s0;
                        _gx[96] = s2;
                        double xlxk = rl[n] - rk[n];
                        double Rqc = xlxk * al_akl;
                        double cpx = Rqc + rt_akl * Rpq[n];
                        s0 = _gx[0];
                        s1 = cpx * s0;
                        _gx[192] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        _gx[384] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        _gx[576] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 3 * b01 *s0;
                        _gx[768] = s2;
                        s0 = _gx[32];
                        s1 = cpx * s0;
                        s1 += 1 * b00 * _gx[0];
                        _gx[224] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 1 * b00 * _gx[192];
                        _gx[416] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 1 * b00 * _gx[384];
                        _gx[608] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 3 * b01 *s0;
                        s2 += 1 * b00 * _gx[576];
                        _gx[800] = s2;
                        s0 = _gx[64];
                        s1 = cpx * s0;
                        s1 += 2 * b00 * _gx[32];
                        _gx[256] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 2 * b00 * _gx[224];
                        _gx[448] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 2 * b00 * _gx[416];
                        _gx[640] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 3 * b01 *s0;
                        s2 += 2 * b00 * _gx[608];
                        _gx[832] = s2;
                        s0 = _gx[96];
                        s1 = cpx * s0;
                        s1 += 3 * b00 * _gx[64];
                        _gx[288] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 3 * b00 * _gx[256];
                        _gx[480] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 3 * b00 * _gx[448];
                        _gx[672] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 3 * b01 *s0;
                        s2 += 3 * b00 * _gx[640];
                        _gx[864] = s2;
                        s1 = _gx[96];
                        s0 = _gx[64];
                        _gx[160] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[128] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[96] = s1 - xjxi * s0;
                        s1 = _gx[288];
                        s0 = _gx[256];
                        _gx[352] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[224];
                        _gx[320] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[192];
                        _gx[288] = s1 - xjxi * s0;
                        s1 = _gx[480];
                        s0 = _gx[448];
                        _gx[544] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[416];
                        _gx[512] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[384];
                        _gx[480] = s1 - xjxi * s0;
                        s1 = _gx[672];
                        s0 = _gx[640];
                        _gx[736] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[608];
                        _gx[704] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[576];
                        _gx[672] = s1 - xjxi * s0;
                        s1 = _gx[864];
                        s0 = _gx[832];
                        _gx[928] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[800];
                        _gx[896] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[768];
                        _gx[864] = s1 - xjxi * s0;
                        s1 = _gx[768];
                        s0 = _gx[576];
                        _gx[1152] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[384];
                        _gx[960] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[192];
                        _gx[768] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[576] = s1 - xlxk * s0;
                        s1 = _gx[1152];
                        s0 = _gx[960];
                        _gx[1536] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[768];
                        _gx[1344] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[576];
                        _gx[1152] = s1 - xlxk * s0;
                        s1 = _gx[800];
                        s0 = _gx[608];
                        _gx[1184] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[416];
                        _gx[992] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[224];
                        _gx[800] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[608] = s1 - xlxk * s0;
                        s1 = _gx[1184];
                        s0 = _gx[992];
                        _gx[1568] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[800];
                        _gx[1376] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[608];
                        _gx[1184] = s1 - xlxk * s0;
                        s1 = _gx[832];
                        s0 = _gx[640];
                        _gx[1216] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[448];
                        _gx[1024] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[256];
                        _gx[832] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[64];
                        _gx[640] = s1 - xlxk * s0;
                        s1 = _gx[1216];
                        s0 = _gx[1024];
                        _gx[1600] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[832];
                        _gx[1408] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[640];
                        _gx[1216] = s1 - xlxk * s0;
                        s1 = _gx[864];
                        s0 = _gx[672];
                        _gx[1248] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[480];
                        _gx[1056] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[288];
                        _gx[864] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[96];
                        _gx[672] = s1 - xlxk * s0;
                        s1 = _gx[1248];
                        s0 = _gx[1056];
                        _gx[1632] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[864];
                        _gx[1440] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[672];
                        _gx[1248] = s1 - xlxk * s0;
                        s1 = _gx[896];
                        s0 = _gx[704];
                        _gx[1280] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[512];
                        _gx[1088] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[320];
                        _gx[896] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[128];
                        _gx[704] = s1 - xlxk * s0;
                        s1 = _gx[1280];
                        s0 = _gx[1088];
                        _gx[1664] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[896];
                        _gx[1472] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[704];
                        _gx[1280] = s1 - xlxk * s0;
                        s1 = _gx[928];
                        s0 = _gx[736];
                        _gx[1312] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[544];
                        _gx[1120] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[352];
                        _gx[928] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[160];
                        _gx[736] = s1 - xlxk * s0;
                        s1 = _gx[1312];
                        s0 = _gx[1120];
                        _gx[1696] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[928];
                        _gx[1504] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[736];
                        _gx[1312] = s1 - xlxk * s0;
                    }
                    __syncthreads();
                    switch (gout_id) {
                    case 0:
                    dd = dd_cache[0];
                    Ix = gx[800];
                    Iy = gy[0];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[1024] - 1 * gx[960]) - 1 * (ai2 * gx[640] - 1 * gx[576]);
                    giky = ak2 * ai2 * gy[224];
                    gikz = ak2 * ai2 * gz[224];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[1088] - 1 * aj2 * gx[704];
                    gjky = ak2 * aj2 * gy[288];
                    gjkz = ak2 * aj2 * gz[288];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[1408] - 1 * gx[1344]) - 1 * (ai2 * gx[256] - 1 * gx[192]);
                    gily = al2 * ai2 * gy[608];
                    gilz = al2 * ai2 * gz[608];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1472] - 1 * aj2 * gx[320];
                    gjly = al2 * aj2 * gy[672];
                    gjlz = al2 * aj2 * gz[672];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[832] - 1 * gx[768]);
                    giy = ai2 * gy[32];
                    giz = ai2 * gz[32];
                    gjx = aj2 * gx[896];
                    gjy = aj2 * gy[96];
                    gjz = aj2 * gz[96];
                    gkx = (ak2 * gx[992] - 1 * gx[608]);
                    gky = ak2 * gy[192];
                    gkz = ak2 * gz[192];
                    glx = (al2 * gx[1376] - 1 * gx[224]);
                    gly = al2 * gy[576];
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[256];
                    Ix = gx[576];
                    Iy = gy[0];
                    Iz = gz[224];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[800];
                    giky = ak2 * ai2 * gy[224];
                    gikz = ak2 * (ai2 * gz[448] - 1 * gz[384]) - 1 * (ai2 * gz[64] - 1 * gz[0]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[864];
                    gjky = ak2 * aj2 * gy[288];
                    gjkz = ak2 * aj2 * gz[512] - 1 * aj2 * gz[128];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1184] - 1 * ai2 * gx[32];
                    gily = al2 * ai2 * gy[608];
                    gilz = al2 * (ai2 * gz[832] - 1 * gz[768]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1248] - 1 * aj2 * gx[96];
                    gjly = al2 * aj2 * gy[672];
                    gjlz = al2 * aj2 * gz[896];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[608];
                    giy = ai2 * gy[32];
                    giz = (ai2 * gz[256] - 1 * gz[192]);
                    gjx = aj2 * gx[672];
                    gjy = aj2 * gy[96];
                    gjz = aj2 * gz[320];
                    gkx = ak2 * gx[768];
                    gky = ak2 * gy[192];
                    gkz = (ak2 * gz[416] - 1 * gz[32]);
                    glx = (al2 * gx[1152] - 1 * gx[0]);
                    gly = al2 * gy[576];
                    glz = al2 * gz[800];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[512];
                    Ix = gx[0];
                    Iy = gy[608];
                    Iz = gz[192];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[224];
                    giky = ak2 * (ai2 * gy[832] - 1 * gy[768]);
                    gikz = ak2 * ai2 * gz[416] - 1 * ai2 * gz[32];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[288];
                    gjky = ak2 * aj2 * gy[896];
                    gjkz = ak2 * aj2 * gz[480] - 1 * aj2 * gz[96];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[608];
                    gily = al2 * (ai2 * gy[1216] - 1 * gy[1152]) - 1 * (ai2 * gy[64] - 1 * gy[0]);
                    gilz = al2 * ai2 * gz[800];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[672];
                    gjly = al2 * aj2 * gy[1280] - 1 * aj2 * gy[128];
                    gjlz = al2 * aj2 * gz[864];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = (ai2 * gy[640] - 1 * gy[576]);
                    giz = ai2 * gz[224];
                    gjx = aj2 * gx[96];
                    gjy = aj2 * gy[704];
                    gjz = aj2 * gz[288];
                    gkx = ak2 * gx[192];
                    gky = ak2 * gy[800];
                    gkz = (ak2 * gz[384] - 1 * gz[0]);
                    glx = al2 * gx[576];
                    gly = (al2 * gy[1184] - 1 * gy[32]);
                    glz = al2 * gz[768];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[768];
                    Ix = gx[32];
                    Iy = gy[0];
                    Iz = gz[768];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[256] - 1 * gx[192]);
                    giky = ak2 * ai2 * gy[224];
                    gikz = ak2 * ai2 * gz[992] - 1 * ai2 * gz[608];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[320];
                    gjky = ak2 * aj2 * gy[288];
                    gjkz = ak2 * aj2 * gz[1056] - 1 * aj2 * gz[672];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[640] - 1 * gx[576]);
                    gily = al2 * ai2 * gy[608];
                    gilz = al2 * ai2 * gz[1376] - 1 * ai2 * gz[224];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[704];
                    gjly = al2 * aj2 * gy[672];
                    gjlz = al2 * aj2 * gz[1440] - 1 * aj2 * gz[288];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[64] - 1 * gx[0]);
                    giy = ai2 * gy[32];
                    giz = ai2 * gz[800];
                    gjx = aj2 * gx[128];
                    gjy = aj2 * gy[96];
                    gjz = aj2 * gz[864];
                    gkx = ak2 * gx[224];
                    gky = ak2 * gy[192];
                    gkz = (ak2 * gz[960] - 1 * gz[576]);
                    glx = al2 * gx[608];
                    gly = al2 * gy[576];
                    glz = (al2 * gz[1344] - 1 * gz[192]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 1:
                    dd = dd_cache[32];
                    Ix = gx[768];
                    Iy = gy[32];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[992] - 1 * ai2 * gx[608];
                    giky = ak2 * (ai2 * gy[256] - 1 * gy[192]);
                    gikz = ak2 * ai2 * gz[224];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[1056] - 1 * aj2 * gx[672];
                    gjky = ak2 * aj2 * gy[320];
                    gjkz = ak2 * aj2 * gz[288];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1376] - 1 * ai2 * gx[224];
                    gily = al2 * (ai2 * gy[640] - 1 * gy[576]);
                    gilz = al2 * ai2 * gz[608];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1440] - 1 * aj2 * gx[288];
                    gjly = al2 * aj2 * gy[704];
                    gjlz = al2 * aj2 * gz[672];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[800];
                    giy = (ai2 * gy[64] - 1 * gy[0]);
                    giz = ai2 * gz[32];
                    gjx = aj2 * gx[864];
                    gjy = aj2 * gy[128];
                    gjz = aj2 * gz[96];
                    gkx = (ak2 * gx[960] - 1 * gx[576]);
                    gky = ak2 * gy[224];
                    gkz = ak2 * gz[192];
                    glx = (al2 * gx[1344] - 1 * gx[192]);
                    gly = al2 * gy[608];
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[288];
                    Ix = gx[224];
                    Iy = gy[576];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[448] - 1 * gx[384]) - 1 * (ai2 * gx[64] - 1 * gx[0]);
                    giky = ak2 * ai2 * gy[800];
                    gikz = ak2 * ai2 * gz[224];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[512] - 1 * aj2 * gx[128];
                    gjky = ak2 * aj2 * gy[864];
                    gjkz = ak2 * aj2 * gz[288];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[832] - 1 * gx[768]);
                    gily = al2 * ai2 * gy[1184] - 1 * ai2 * gy[32];
                    gilz = al2 * ai2 * gz[608];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[896];
                    gjly = al2 * aj2 * gy[1248] - 1 * aj2 * gy[96];
                    gjlz = al2 * aj2 * gz[672];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[256] - 1 * gx[192]);
                    giy = ai2 * gy[608];
                    giz = ai2 * gz[32];
                    gjx = aj2 * gx[320];
                    gjy = aj2 * gy[672];
                    gjz = aj2 * gz[96];
                    gkx = (ak2 * gx[416] - 1 * gx[32]);
                    gky = ak2 * gy[768];
                    gkz = ak2 * gz[192];
                    glx = al2 * gx[800];
                    gly = (al2 * gy[1152] - 1 * gy[0]);
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[544];
                    Ix = gx[0];
                    Iy = gy[576];
                    Iz = gz[224];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[224];
                    giky = ak2 * ai2 * gy[800];
                    gikz = ak2 * (ai2 * gz[448] - 1 * gz[384]) - 1 * (ai2 * gz[64] - 1 * gz[0]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[288];
                    gjky = ak2 * aj2 * gy[864];
                    gjkz = ak2 * aj2 * gz[512] - 1 * aj2 * gz[128];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[608];
                    gily = al2 * ai2 * gy[1184] - 1 * ai2 * gy[32];
                    gilz = al2 * (ai2 * gz[832] - 1 * gz[768]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[672];
                    gjly = al2 * aj2 * gy[1248] - 1 * aj2 * gy[96];
                    gjlz = al2 * aj2 * gz[896];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = ai2 * gy[608];
                    giz = (ai2 * gz[256] - 1 * gz[192]);
                    gjx = aj2 * gx[96];
                    gjy = aj2 * gy[672];
                    gjz = aj2 * gz[320];
                    gkx = ak2 * gx[192];
                    gky = ak2 * gy[768];
                    gkz = (ak2 * gz[416] - 1 * gz[32]);
                    glx = al2 * gx[576];
                    gly = (al2 * gy[1152] - 1 * gy[0]);
                    glz = al2 * gz[800];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[800];
                    Ix = gx[0];
                    Iy = gy[32];
                    Iz = gz[768];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[224];
                    giky = ak2 * (ai2 * gy[256] - 1 * gy[192]);
                    gikz = ak2 * ai2 * gz[992] - 1 * ai2 * gz[608];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[288];
                    gjky = ak2 * aj2 * gy[320];
                    gjkz = ak2 * aj2 * gz[1056] - 1 * aj2 * gz[672];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[608];
                    gily = al2 * (ai2 * gy[640] - 1 * gy[576]);
                    gilz = al2 * ai2 * gz[1376] - 1 * ai2 * gz[224];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[672];
                    gjly = al2 * aj2 * gy[704];
                    gjlz = al2 * aj2 * gz[1440] - 1 * aj2 * gz[288];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = (ai2 * gy[64] - 1 * gy[0]);
                    giz = ai2 * gz[800];
                    gjx = aj2 * gx[96];
                    gjy = aj2 * gy[128];
                    gjz = aj2 * gz[864];
                    gkx = ak2 * gx[192];
                    gky = ak2 * gy[224];
                    gkz = (ak2 * gz[960] - 1 * gz[576]);
                    glx = al2 * gx[576];
                    gly = al2 * gy[608];
                    glz = (al2 * gz[1344] - 1 * gz[192]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 2:
                    dd = dd_cache[64];
                    Ix = gx[768];
                    Iy = gy[0];
                    Iz = gz[32];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[992] - 1 * ai2 * gx[608];
                    giky = ak2 * ai2 * gy[224];
                    gikz = ak2 * (ai2 * gz[256] - 1 * gz[192]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[1056] - 1 * aj2 * gx[672];
                    gjky = ak2 * aj2 * gy[288];
                    gjkz = ak2 * aj2 * gz[320];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1376] - 1 * ai2 * gx[224];
                    gily = al2 * ai2 * gy[608];
                    gilz = al2 * (ai2 * gz[640] - 1 * gz[576]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1440] - 1 * aj2 * gx[288];
                    gjly = al2 * aj2 * gy[672];
                    gjlz = al2 * aj2 * gz[704];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[800];
                    giy = ai2 * gy[32];
                    giz = (ai2 * gz[64] - 1 * gz[0]);
                    gjx = aj2 * gx[864];
                    gjy = aj2 * gy[96];
                    gjz = aj2 * gz[128];
                    gkx = (ak2 * gx[960] - 1 * gx[576]);
                    gky = ak2 * gy[192];
                    gkz = ak2 * gz[224];
                    glx = (al2 * gx[1344] - 1 * gx[192]);
                    gly = al2 * gy[576];
                    glz = al2 * gz[608];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[320];
                    Ix = gx[192];
                    Iy = gy[608];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[416] - 1 * ai2 * gx[32];
                    giky = ak2 * (ai2 * gy[832] - 1 * gy[768]);
                    gikz = ak2 * ai2 * gz[224];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[480] - 1 * aj2 * gx[96];
                    gjky = ak2 * aj2 * gy[896];
                    gjkz = ak2 * aj2 * gz[288];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[800];
                    gily = al2 * (ai2 * gy[1216] - 1 * gy[1152]) - 1 * (ai2 * gy[64] - 1 * gy[0]);
                    gilz = al2 * ai2 * gz[608];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[864];
                    gjly = al2 * aj2 * gy[1280] - 1 * aj2 * gy[128];
                    gjlz = al2 * aj2 * gz[672];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[224];
                    giy = (ai2 * gy[640] - 1 * gy[576]);
                    giz = ai2 * gz[32];
                    gjx = aj2 * gx[288];
                    gjy = aj2 * gy[704];
                    gjz = aj2 * gz[96];
                    gkx = (ak2 * gx[384] - 1 * gx[0]);
                    gky = ak2 * gy[800];
                    gkz = ak2 * gz[192];
                    glx = al2 * gx[768];
                    gly = (al2 * gy[1184] - 1 * gy[32]);
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[576];
                    Ix = gx[224];
                    Iy = gy[0];
                    Iz = gz[576];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[448] - 1 * gx[384]) - 1 * (ai2 * gx[64] - 1 * gx[0]);
                    giky = ak2 * ai2 * gy[224];
                    gikz = ak2 * ai2 * gz[800];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[512] - 1 * aj2 * gx[128];
                    gjky = ak2 * aj2 * gy[288];
                    gjkz = ak2 * aj2 * gz[864];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[832] - 1 * gx[768]);
                    gily = al2 * ai2 * gy[608];
                    gilz = al2 * ai2 * gz[1184] - 1 * ai2 * gz[32];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[896];
                    gjly = al2 * aj2 * gy[672];
                    gjlz = al2 * aj2 * gz[1248] - 1 * aj2 * gz[96];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[256] - 1 * gx[192]);
                    giy = ai2 * gy[32];
                    giz = ai2 * gz[608];
                    gjx = aj2 * gx[320];
                    gjy = aj2 * gy[96];
                    gjz = aj2 * gz[672];
                    gkx = (ak2 * gx[416] - 1 * gx[32]);
                    gky = ak2 * gy[192];
                    gkz = ak2 * gz[768];
                    glx = al2 * gx[800];
                    gly = al2 * gy[576];
                    glz = (al2 * gz[1152] - 1 * gz[0]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[832];
                    Ix = gx[0];
                    Iy = gy[0];
                    Iz = gz[800];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[224];
                    giky = ak2 * ai2 * gy[224];
                    gikz = ak2 * (ai2 * gz[1024] - 1 * gz[960]) - 1 * (ai2 * gz[640] - 1 * gz[576]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[288];
                    gjky = ak2 * aj2 * gy[288];
                    gjkz = ak2 * aj2 * gz[1088] - 1 * aj2 * gz[704];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[608];
                    gily = al2 * ai2 * gy[608];
                    gilz = al2 * (ai2 * gz[1408] - 1 * gz[1344]) - 1 * (ai2 * gz[256] - 1 * gz[192]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[672];
                    gjly = al2 * aj2 * gy[672];
                    gjlz = al2 * aj2 * gz[1472] - 1 * aj2 * gz[320];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = ai2 * gy[32];
                    giz = (ai2 * gz[832] - 1 * gz[768]);
                    gjx = aj2 * gx[96];
                    gjy = aj2 * gy[96];
                    gjz = aj2 * gz[896];
                    gkx = ak2 * gx[192];
                    gky = ak2 * gy[192];
                    gkz = (ak2 * gz[992] - 1 * gz[608]);
                    glx = al2 * gx[576];
                    gly = al2 * gy[576];
                    glz = (al2 * gz[1376] - 1 * gz[224]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 3:
                    dd = dd_cache[96];
                    Ix = gx[608];
                    Iy = gy[192];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[832] - 1 * gx[768]);
                    giky = ak2 * ai2 * gy[416] - 1 * ai2 * gy[32];
                    gikz = ak2 * ai2 * gz[224];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[896];
                    gjky = ak2 * aj2 * gy[480] - 1 * aj2 * gy[96];
                    gjkz = ak2 * aj2 * gz[288];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[1216] - 1 * gx[1152]) - 1 * (ai2 * gx[64] - 1 * gx[0]);
                    gily = al2 * ai2 * gy[800];
                    gilz = al2 * ai2 * gz[608];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1280] - 1 * aj2 * gx[128];
                    gjly = al2 * aj2 * gy[864];
                    gjlz = al2 * aj2 * gz[672];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[640] - 1 * gx[576]);
                    giy = ai2 * gy[224];
                    giz = ai2 * gz[32];
                    gjx = aj2 * gx[704];
                    gjy = aj2 * gy[288];
                    gjz = aj2 * gz[96];
                    gkx = ak2 * gx[800];
                    gky = (ak2 * gy[384] - 1 * gy[0]);
                    gkz = ak2 * gz[192];
                    glx = (al2 * gx[1184] - 1 * gx[32]);
                    gly = al2 * gy[768];
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[352];
                    Ix = gx[192];
                    Iy = gy[576];
                    Iz = gz[32];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[416] - 1 * ai2 * gx[32];
                    giky = ak2 * ai2 * gy[800];
                    gikz = ak2 * (ai2 * gz[256] - 1 * gz[192]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[480] - 1 * aj2 * gx[96];
                    gjky = ak2 * aj2 * gy[864];
                    gjkz = ak2 * aj2 * gz[320];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[800];
                    gily = al2 * ai2 * gy[1184] - 1 * ai2 * gy[32];
                    gilz = al2 * (ai2 * gz[640] - 1 * gz[576]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[864];
                    gjly = al2 * aj2 * gy[1248] - 1 * aj2 * gy[96];
                    gjlz = al2 * aj2 * gz[704];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[224];
                    giy = ai2 * gy[608];
                    giz = (ai2 * gz[64] - 1 * gz[0]);
                    gjx = aj2 * gx[288];
                    gjy = aj2 * gy[672];
                    gjz = aj2 * gz[128];
                    gkx = (ak2 * gx[384] - 1 * gx[0]);
                    gky = ak2 * gy[768];
                    gkz = ak2 * gz[224];
                    glx = al2 * gx[768];
                    gly = (al2 * gy[1152] - 1 * gy[0]);
                    glz = al2 * gz[608];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[608];
                    Ix = gx[192];
                    Iy = gy[32];
                    Iz = gz[576];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[416] - 1 * ai2 * gx[32];
                    giky = ak2 * (ai2 * gy[256] - 1 * gy[192]);
                    gikz = ak2 * ai2 * gz[800];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[480] - 1 * aj2 * gx[96];
                    gjky = ak2 * aj2 * gy[320];
                    gjkz = ak2 * aj2 * gz[864];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[800];
                    gily = al2 * (ai2 * gy[640] - 1 * gy[576]);
                    gilz = al2 * ai2 * gz[1184] - 1 * ai2 * gz[32];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[864];
                    gjly = al2 * aj2 * gy[704];
                    gjlz = al2 * aj2 * gz[1248] - 1 * aj2 * gz[96];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[224];
                    giy = (ai2 * gy[64] - 1 * gy[0]);
                    giz = ai2 * gz[608];
                    gjx = aj2 * gx[288];
                    gjy = aj2 * gy[128];
                    gjz = aj2 * gz[672];
                    gkx = (ak2 * gx[384] - 1 * gx[0]);
                    gky = ak2 * gy[224];
                    gkz = ak2 * gz[768];
                    glx = al2 * gx[768];
                    gly = al2 * gy[608];
                    glz = (al2 * gz[1152] - 1 * gz[0]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 4:
                    dd = dd_cache[128];
                    Ix = gx[576];
                    Iy = gy[224];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[800];
                    giky = ak2 * (ai2 * gy[448] - 1 * gy[384]) - 1 * (ai2 * gy[64] - 1 * gy[0]);
                    gikz = ak2 * ai2 * gz[224];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[864];
                    gjky = ak2 * aj2 * gy[512] - 1 * aj2 * gy[128];
                    gjkz = ak2 * aj2 * gz[288];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1184] - 1 * ai2 * gx[32];
                    gily = al2 * (ai2 * gy[832] - 1 * gy[768]);
                    gilz = al2 * ai2 * gz[608];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1248] - 1 * aj2 * gx[96];
                    gjly = al2 * aj2 * gy[896];
                    gjlz = al2 * aj2 * gz[672];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[608];
                    giy = (ai2 * gy[256] - 1 * gy[192]);
                    giz = ai2 * gz[32];
                    gjx = aj2 * gx[672];
                    gjy = aj2 * gy[320];
                    gjz = aj2 * gz[96];
                    gkx = ak2 * gx[768];
                    gky = (ak2 * gy[416] - 1 * gy[32]);
                    gkz = ak2 * gz[192];
                    glx = (al2 * gx[1152] - 1 * gx[0]);
                    gly = al2 * gy[800];
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[384];
                    Ix = gx[32];
                    Iy = gy[768];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[256] - 1 * gx[192]);
                    giky = ak2 * ai2 * gy[992] - 1 * ai2 * gy[608];
                    gikz = ak2 * ai2 * gz[224];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[320];
                    gjky = ak2 * aj2 * gy[1056] - 1 * aj2 * gy[672];
                    gjkz = ak2 * aj2 * gz[288];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[640] - 1 * gx[576]);
                    gily = al2 * ai2 * gy[1376] - 1 * ai2 * gy[224];
                    gilz = al2 * ai2 * gz[608];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[704];
                    gjly = al2 * aj2 * gy[1440] - 1 * aj2 * gy[288];
                    gjlz = al2 * aj2 * gz[672];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[64] - 1 * gx[0]);
                    giy = ai2 * gy[800];
                    giz = ai2 * gz[32];
                    gjx = aj2 * gx[128];
                    gjy = aj2 * gy[864];
                    gjz = aj2 * gz[96];
                    gkx = ak2 * gx[224];
                    gky = (ak2 * gy[960] - 1 * gy[576]);
                    gkz = ak2 * gz[192];
                    glx = al2 * gx[608];
                    gly = (al2 * gy[1344] - 1 * gy[192]);
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[640];
                    Ix = gx[192];
                    Iy = gy[0];
                    Iz = gz[608];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[416] - 1 * ai2 * gx[32];
                    giky = ak2 * ai2 * gy[224];
                    gikz = ak2 * (ai2 * gz[832] - 1 * gz[768]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[480] - 1 * aj2 * gx[96];
                    gjky = ak2 * aj2 * gy[288];
                    gjkz = ak2 * aj2 * gz[896];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[800];
                    gily = al2 * ai2 * gy[608];
                    gilz = al2 * (ai2 * gz[1216] - 1 * gz[1152]) - 1 * (ai2 * gz[64] - 1 * gz[0]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[864];
                    gjly = al2 * aj2 * gy[672];
                    gjlz = al2 * aj2 * gz[1280] - 1 * aj2 * gz[128];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[224];
                    giy = ai2 * gy[32];
                    giz = (ai2 * gz[640] - 1 * gz[576]);
                    gjx = aj2 * gx[288];
                    gjy = aj2 * gy[96];
                    gjz = aj2 * gz[704];
                    gkx = (ak2 * gx[384] - 1 * gx[0]);
                    gky = ak2 * gy[192];
                    gkz = ak2 * gz[800];
                    glx = al2 * gx[768];
                    gly = al2 * gy[576];
                    glz = (al2 * gz[1184] - 1 * gz[32]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 5:
                    dd = dd_cache[160];
                    Ix = gx[576];
                    Iy = gy[192];
                    Iz = gz[32];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[800];
                    giky = ak2 * ai2 * gy[416] - 1 * ai2 * gy[32];
                    gikz = ak2 * (ai2 * gz[256] - 1 * gz[192]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[864];
                    gjky = ak2 * aj2 * gy[480] - 1 * aj2 * gy[96];
                    gjkz = ak2 * aj2 * gz[320];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1184] - 1 * ai2 * gx[32];
                    gily = al2 * ai2 * gy[800];
                    gilz = al2 * (ai2 * gz[640] - 1 * gz[576]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1248] - 1 * aj2 * gx[96];
                    gjly = al2 * aj2 * gy[864];
                    gjlz = al2 * aj2 * gz[704];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[608];
                    giy = ai2 * gy[224];
                    giz = (ai2 * gz[64] - 1 * gz[0]);
                    gjx = aj2 * gx[672];
                    gjy = aj2 * gy[288];
                    gjz = aj2 * gz[128];
                    gkx = ak2 * gx[768];
                    gky = (ak2 * gy[384] - 1 * gy[0]);
                    gkz = ak2 * gz[224];
                    glx = (al2 * gx[1152] - 1 * gx[0]);
                    gly = al2 * gy[768];
                    glz = al2 * gz[608];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[416];
                    Ix = gx[0];
                    Iy = gy[800];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[224];
                    giky = ak2 * (ai2 * gy[1024] - 1 * gy[960]) - 1 * (ai2 * gy[640] - 1 * gy[576]);
                    gikz = ak2 * ai2 * gz[224];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[288];
                    gjky = ak2 * aj2 * gy[1088] - 1 * aj2 * gy[704];
                    gjkz = ak2 * aj2 * gz[288];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[608];
                    gily = al2 * (ai2 * gy[1408] - 1 * gy[1344]) - 1 * (ai2 * gy[256] - 1 * gy[192]);
                    gilz = al2 * ai2 * gz[608];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[672];
                    gjly = al2 * aj2 * gy[1472] - 1 * aj2 * gy[320];
                    gjlz = al2 * aj2 * gz[672];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = (ai2 * gy[832] - 1 * gy[768]);
                    giz = ai2 * gz[32];
                    gjx = aj2 * gx[96];
                    gjy = aj2 * gy[896];
                    gjz = aj2 * gz[96];
                    gkx = ak2 * gx[192];
                    gky = (ak2 * gy[992] - 1 * gy[608]);
                    gkz = ak2 * gz[192];
                    glx = al2 * gx[576];
                    gly = (al2 * gy[1376] - 1 * gy[224]);
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[672];
                    Ix = gx[32];
                    Iy = gy[192];
                    Iz = gz[576];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[256] - 1 * gx[192]);
                    giky = ak2 * ai2 * gy[416] - 1 * ai2 * gy[32];
                    gikz = ak2 * ai2 * gz[800];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[320];
                    gjky = ak2 * aj2 * gy[480] - 1 * aj2 * gy[96];
                    gjkz = ak2 * aj2 * gz[864];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[640] - 1 * gx[576]);
                    gily = al2 * ai2 * gy[800];
                    gilz = al2 * ai2 * gz[1184] - 1 * ai2 * gz[32];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[704];
                    gjly = al2 * aj2 * gy[864];
                    gjlz = al2 * aj2 * gz[1248] - 1 * aj2 * gz[96];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[64] - 1 * gx[0]);
                    giy = ai2 * gy[224];
                    giz = ai2 * gz[608];
                    gjx = aj2 * gx[128];
                    gjy = aj2 * gy[288];
                    gjz = aj2 * gz[672];
                    gkx = ak2 * gx[224];
                    gky = (ak2 * gy[384] - 1 * gy[0]);
                    gkz = ak2 * gz[768];
                    glx = al2 * gx[608];
                    gly = al2 * gy[768];
                    glz = (al2 * gz[1152] - 1 * gz[0]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 6:
                    dd = dd_cache[192];
                    Ix = gx[608];
                    Iy = gy[0];
                    Iz = gz[192];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[832] - 1 * gx[768]);
                    giky = ak2 * ai2 * gy[224];
                    gikz = ak2 * ai2 * gz[416] - 1 * ai2 * gz[32];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[896];
                    gjky = ak2 * aj2 * gy[288];
                    gjkz = ak2 * aj2 * gz[480] - 1 * aj2 * gz[96];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[1216] - 1 * gx[1152]) - 1 * (ai2 * gx[64] - 1 * gx[0]);
                    gily = al2 * ai2 * gy[608];
                    gilz = al2 * ai2 * gz[800];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1280] - 1 * aj2 * gx[128];
                    gjly = al2 * aj2 * gy[672];
                    gjlz = al2 * aj2 * gz[864];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[640] - 1 * gx[576]);
                    giy = ai2 * gy[32];
                    giz = ai2 * gz[224];
                    gjx = aj2 * gx[704];
                    gjy = aj2 * gy[96];
                    gjz = aj2 * gz[288];
                    gkx = ak2 * gx[800];
                    gky = ak2 * gy[192];
                    gkz = (ak2 * gz[384] - 1 * gz[0]);
                    glx = (al2 * gx[1184] - 1 * gx[32]);
                    gly = al2 * gy[576];
                    glz = al2 * gz[768];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[448];
                    Ix = gx[0];
                    Iy = gy[768];
                    Iz = gz[32];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[224];
                    giky = ak2 * ai2 * gy[992] - 1 * ai2 * gy[608];
                    gikz = ak2 * (ai2 * gz[256] - 1 * gz[192]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[288];
                    gjky = ak2 * aj2 * gy[1056] - 1 * aj2 * gy[672];
                    gjkz = ak2 * aj2 * gz[320];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[608];
                    gily = al2 * ai2 * gy[1376] - 1 * ai2 * gy[224];
                    gilz = al2 * (ai2 * gz[640] - 1 * gz[576]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[672];
                    gjly = al2 * aj2 * gy[1440] - 1 * aj2 * gy[288];
                    gjlz = al2 * aj2 * gz[704];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = ai2 * gy[800];
                    giz = (ai2 * gz[64] - 1 * gz[0]);
                    gjx = aj2 * gx[96];
                    gjy = aj2 * gy[864];
                    gjz = aj2 * gz[128];
                    gkx = ak2 * gx[192];
                    gky = (ak2 * gy[960] - 1 * gy[576]);
                    gkz = ak2 * gz[224];
                    glx = al2 * gx[576];
                    gly = (al2 * gy[1344] - 1 * gy[192]);
                    glz = al2 * gz[608];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[704];
                    Ix = gx[0];
                    Iy = gy[224];
                    Iz = gz[576];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[224];
                    giky = ak2 * (ai2 * gy[448] - 1 * gy[384]) - 1 * (ai2 * gy[64] - 1 * gy[0]);
                    gikz = ak2 * ai2 * gz[800];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[288];
                    gjky = ak2 * aj2 * gy[512] - 1 * aj2 * gy[128];
                    gjkz = ak2 * aj2 * gz[864];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[608];
                    gily = al2 * (ai2 * gy[832] - 1 * gy[768]);
                    gilz = al2 * ai2 * gz[1184] - 1 * ai2 * gz[32];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[672];
                    gjly = al2 * aj2 * gy[896];
                    gjlz = al2 * aj2 * gz[1248] - 1 * aj2 * gz[96];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = (ai2 * gy[256] - 1 * gy[192]);
                    giz = ai2 * gz[608];
                    gjx = aj2 * gx[96];
                    gjy = aj2 * gy[320];
                    gjz = aj2 * gz[672];
                    gkx = ak2 * gx[192];
                    gky = (ak2 * gy[416] - 1 * gy[32]);
                    gkz = ak2 * gz[768];
                    glx = al2 * gx[576];
                    gly = al2 * gy[800];
                    glz = (al2 * gz[1152] - 1 * gz[0]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 7:
                    dd = dd_cache[224];
                    Ix = gx[576];
                    Iy = gy[32];
                    Iz = gz[192];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[800];
                    giky = ak2 * (ai2 * gy[256] - 1 * gy[192]);
                    gikz = ak2 * ai2 * gz[416] - 1 * ai2 * gz[32];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[864];
                    gjky = ak2 * aj2 * gy[320];
                    gjkz = ak2 * aj2 * gz[480] - 1 * aj2 * gz[96];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1184] - 1 * ai2 * gx[32];
                    gily = al2 * (ai2 * gy[640] - 1 * gy[576]);
                    gilz = al2 * ai2 * gz[800];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1248] - 1 * aj2 * gx[96];
                    gjly = al2 * aj2 * gy[704];
                    gjlz = al2 * aj2 * gz[864];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[608];
                    giy = (ai2 * gy[64] - 1 * gy[0]);
                    giz = ai2 * gz[224];
                    gjx = aj2 * gx[672];
                    gjy = aj2 * gy[128];
                    gjz = aj2 * gz[288];
                    gkx = ak2 * gx[768];
                    gky = ak2 * gy[224];
                    gkz = (ak2 * gz[384] - 1 * gz[0]);
                    glx = (al2 * gx[1152] - 1 * gx[0]);
                    gly = al2 * gy[608];
                    glz = al2 * gz[768];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[480];
                    Ix = gx[32];
                    Iy = gy[576];
                    Iz = gz[192];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[256] - 1 * gx[192]);
                    giky = ak2 * ai2 * gy[800];
                    gikz = ak2 * ai2 * gz[416] - 1 * ai2 * gz[32];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[320];
                    gjky = ak2 * aj2 * gy[864];
                    gjkz = ak2 * aj2 * gz[480] - 1 * aj2 * gz[96];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[640] - 1 * gx[576]);
                    gily = al2 * ai2 * gy[1184] - 1 * ai2 * gy[32];
                    gilz = al2 * ai2 * gz[800];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[704];
                    gjly = al2 * aj2 * gy[1248] - 1 * aj2 * gy[96];
                    gjlz = al2 * aj2 * gz[864];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[64] - 1 * gx[0]);
                    giy = ai2 * gy[608];
                    giz = ai2 * gz[224];
                    gjx = aj2 * gx[128];
                    gjy = aj2 * gy[672];
                    gjz = aj2 * gz[288];
                    gkx = ak2 * gx[224];
                    gky = ak2 * gy[768];
                    gkz = (ak2 * gz[384] - 1 * gz[0]);
                    glx = al2 * gx[608];
                    gly = (al2 * gy[1152] - 1 * gy[0]);
                    glz = al2 * gz[768];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[736];
                    Ix = gx[0];
                    Iy = gy[192];
                    Iz = gz[608];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[224];
                    giky = ak2 * ai2 * gy[416] - 1 * ai2 * gy[32];
                    gikz = ak2 * (ai2 * gz[832] - 1 * gz[768]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[288];
                    gjky = ak2 * aj2 * gy[480] - 1 * aj2 * gy[96];
                    gjkz = ak2 * aj2 * gz[896];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[608];
                    gily = al2 * ai2 * gy[800];
                    gilz = al2 * (ai2 * gz[1216] - 1 * gz[1152]) - 1 * (ai2 * gz[64] - 1 * gz[0]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[672];
                    gjly = al2 * aj2 * gy[864];
                    gjlz = al2 * aj2 * gz[1280] - 1 * aj2 * gz[128];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = ai2 * gy[224];
                    giz = (ai2 * gz[640] - 1 * gz[576]);
                    gjx = aj2 * gx[96];
                    gjy = aj2 * gy[288];
                    gjz = aj2 * gz[704];
                    gkx = ak2 * gx[192];
                    gky = (ak2 * gy[384] - 1 * gy[0]);
                    gkz = ak2 * gz[800];
                    glx = al2 * gx[576];
                    gly = al2 * gy[768];
                    glz = (al2 * gz[1184] - 1 * gz[32]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            continue;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        int natm = envs.natm;
        double *ejk = jk.ejk;
        atomicAdd(ejk + (ia*natm+ka)*9 + 0, v_ixkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 1, v_ixky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 2, v_ixkz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 3, v_iykx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 4, v_iyky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 5, v_iykz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 6, v_izkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 7, v_izky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 8, v_izkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 0, v_jxkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 1, v_jxky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 2, v_jxkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 3, v_jykx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 4, v_jyky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 5, v_jykz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 6, v_jzkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 7, v_jzky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 8, v_jzkz);
        atomicAdd(ejk + (ia*natm+la)*9 + 0, v_ixlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 1, v_ixly);
        atomicAdd(ejk + (ia*natm+la)*9 + 2, v_ixlz);
        atomicAdd(ejk + (ia*natm+la)*9 + 3, v_iylx);
        atomicAdd(ejk + (ia*natm+la)*9 + 4, v_iyly);
        atomicAdd(ejk + (ia*natm+la)*9 + 5, v_iylz);
        atomicAdd(ejk + (ia*natm+la)*9 + 6, v_izlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 7, v_izly);
        atomicAdd(ejk + (ia*natm+la)*9 + 8, v_izlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 0, v_jxlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 1, v_jxly);
        atomicAdd(ejk + (ja*natm+la)*9 + 2, v_jxlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 3, v_jylx);
        atomicAdd(ejk + (ja*natm+la)*9 + 4, v_jyly);
        atomicAdd(ejk + (ja*natm+la)*9 + 5, v_jylz);
        atomicAdd(ejk + (ja*natm+la)*9 + 6, v_jzlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 7, v_jzly);
        atomicAdd(ejk + (ja*natm+la)*9 + 8, v_jzlz);
    }
}
__global__
void rys_ejk_ip2_type3_1011(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *pool, double *dd_pool, uint32_t *batch_head)
{
    int b_id = blockIdx.x;
    int t_id = threadIdx.x + blockDim.x * threadIdx.y;
    ShellQuartet *shl_quartet_idx = pool + b_id * QUEUE_DEPTH;

    double *dd_cache = dd_pool + b_id * 864;

    __shared__ int batch_id;
    if (t_id == 0) {
        batch_id = atomicAdd(batch_head, 1);
    }
    __syncthreads();
    int nbatches_kl = (bounds.ntile_kl_pairs + TILES_IN_BATCH - 1) / TILES_IN_BATCH;
    int nbatches = bounds.ntile_ij_pairs * nbatches_kl;
    while (batch_id < nbatches) {
        int batch_ij = batch_id / nbatches_kl;
        int batch_kl = batch_id % nbatches_kl;
        int nbas = envs.nbas;
        double *env = envs.env;
        double omega = env[PTR_RANGE_OMEGA];
        int ntasks;
        if (omega >= 0) {
            ntasks = _fill_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                     batch_ij, batch_kl);
        } else {
            ntasks = _fill_sr_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                        batch_ij, batch_kl);
        }
        if (ntasks > 0) {
            int tile_ij = bounds.tile_ij_mapping[batch_ij];
            int nbas_tiles = nbas / TILE;
            int tile_i = tile_ij / nbas_tiles;
            int tile_j = tile_ij % nbas_tiles;
            int ish0 = tile_i * TILE;
            int jsh0 = tile_j * TILE;
            _rys_ejk_ip2_type3_1011(envs, jk, bounds, shl_quartet_idx, dd_cache,
                             ntasks, ish0, jsh0);
        }
        if (t_id == 0) {
            batch_id = atomicAdd(batch_head, 1);
            atomicAdd(batch_head+1, ntasks);
        }
        __syncthreads();
    }
}

__device__ static
void _rys_ejk_ip2_type3_1100(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *shl_quartet_idx, double *dd_cache,
                int ntasks, int ish0, int jsh0)
{
    int sq_id = threadIdx.x;
    int nsq_per_block = blockDim.x;
    int gout_id = threadIdx.y;
    int gout_stride = blockDim.y;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int *ao_loc = envs.ao_loc;
    int nbas = envs.nbas;
    int nao = ao_loc[nbas];
    int *bas = envs.bas;
    double *env = envs.env;
    double omega = env[PTR_RANGE_OMEGA];
    double *dm = jk.dm;
    extern __shared__ double cicj_cache[];
    double *rw = cicj_cache + iprim*jprim*TILE2 + sq_id;
    dd_cache += sq_id;
    int thread_id = nsq_per_block * gout_id + sq_id;
    int threads = nsq_per_block * gout_stride;
    for (int n = thread_id; n < iprim*jprim*TILE2; n += threads) {
        int ijp = n / TILE2;
        int sh_ij = n % TILE2;
        int ish = ish0 + sh_ij / TILE;
        int jsh = jsh0 + sh_ij % TILE;
        int ip = ijp / jprim;
        int jp = ijp % jprim;
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
        double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double theta_ij = ai * aj / aij;
        double Kab = exp(-theta_ij * (xjxi*xjxi+yjyi*yjyi+zjzi*zjzi));
        cicj_cache[n] = ci[ip] * cj[jp] * Kab;
    }

    for (int task0 = 0; task0 < ntasks; task0 += nsq_per_block) {
        __syncthreads();
        int task_id = task0 + sq_id;
        double fac_sym = PI_FAC;
        ShellQuartet sq;
        if (task_id >= ntasks) {
            // To avoid __syncthreads blocking blocking idle warps, all remaining
            // threads compute a valid shell quartet with zero normalization factor
            sq = shl_quartet_idx[0];
            fac_sym = 0.;
        } else {
            sq = shl_quartet_idx[task_id];
        }
        int ish = sq.i;
        int jsh = sq.j;
        int ksh = sq.k;
        int lsh = sq.l;
        int sh_ij = (ish % TILE) * TILE + (jsh % TILE);
        if (ish == jsh) fac_sym *= .5;
        if (ksh == lsh) fac_sym *= .5;
        if (ish*nbas+jsh == ksh*nbas+lsh) fac_sym *= .5;
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double dd;
        double Ix, Iy, Iz, prod_xy, prod_xz, prod_yz;
        double gix, giy, giz;
        double gjx, gjy, gjz;
        double gkx, gky, gkz;
        double glx, gly, glz;
        double gikx, giky, gikz;
        double gjkx, gjky, gjkz;
        double gilx, gily, gilz;
        double gjlx, gjly, gjlz;
        double v_ixkx = 0;
        double v_ixky = 0;
        double v_ixkz = 0;
        double v_iykx = 0;
        double v_iyky = 0;
        double v_iykz = 0;
        double v_izkx = 0;
        double v_izky = 0;
        double v_izkz = 0;
        double v_jxkx = 0;
        double v_jxky = 0;
        double v_jxkz = 0;
        double v_jykx = 0;
        double v_jyky = 0;
        double v_jykz = 0;
        double v_jzkx = 0;
        double v_jzky = 0;
        double v_jzkz = 0;
        double v_ixlx = 0;
        double v_ixly = 0;
        double v_ixlz = 0;
        double v_iylx = 0;
        double v_iyly = 0;
        double v_iylz = 0;
        double v_izlx = 0;
        double v_izly = 0;
        double v_izlz = 0;
        double v_jxlx = 0;
        double v_jxly = 0;
        double v_jxlz = 0;
        double v_jylx = 0;
        double v_jyly = 0;
        double v_jylz = 0;
        double v_jzlx = 0;
        double v_jzly = 0;
        double v_jzlz = 0;
        double dd_cache0 = 0.;
        double dd_cache1 = 0.;
        double dd_cache2 = 0.;
        double dd_cache3 = 0.;
        double dd_cache4 = 0.;
        double dd_cache5 = 0.;
        double dd_cache6 = 0.;
        double dd_cache7 = 0.;
        double dd_cache8 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                dd_cache0 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache1 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache2 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache3 += jk.k_factor * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache4 += jk.k_factor * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache5 += jk.k_factor * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache6 += jk.k_factor * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache7 += jk.k_factor * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache8 += jk.k_factor * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                dd_cache0 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache1 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache2 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache3 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+0)];
                dd_cache4 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+1)];
                dd_cache5 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+2)];
                dd_cache6 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+0)];
                dd_cache7 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+1)];
                dd_cache8 += jk.j_factor * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+2)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                dd_cache0 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache1 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache2 += jk.k_factor * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache3 += jk.k_factor * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache4 += jk.k_factor * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache5 += jk.k_factor * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache6 += jk.k_factor * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache7 += jk.k_factor * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache8 += jk.k_factor * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                dd_cache0 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache1 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache2 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache3 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+0)]+dmb[(j0+1)*nao+(i0+0)]);
                dd_cache4 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+1)]+dmb[(j0+1)*nao+(i0+1)]);
                dd_cache5 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+2)]+dmb[(j0+1)*nao+(i0+2)]);
                dd_cache6 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+0)]+dmb[(j0+2)*nao+(i0+0)]);
                dd_cache7 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+1)]+dmb[(j0+2)*nao+(i0+1)]);
                dd_cache8 += jk.j_factor * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+2)]+dmb[(j0+2)*nao+(i0+2)]);
            }
        }
        
        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = fac_sym * ck[kp] * cl[lp] * Kcd;
            double xqc = xlxk * al_akl;
            double yqc = ylyk * al_akl;
            double zqc = zlzk * al_akl;
            double xkl = rk[0] + xqc;
            double ykl = rk[1] + yqc;
            double zkl = rk[2] + zqc;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[sh_ij+ijp*TILE2];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = xjxi * aj_aij;
                double ypa = yjyi * aj_aij;
                double zpa = zjzi * aj_aij;
                double xij = ri[0] + xpa; // (ai*xi+aj*xj)/aij
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                double theta_rr = theta * rr;
                if (omega == 0) {
                    rys_roots(3, theta_rr, rw, nsq_per_block, 0, 1);
                    for (int irys = 0; irys < 3; ++irys) {
                        rw[(irys*2+1)*nsq_per_block] *= fac;
                    }
                } else if (omega > 0) {
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(3, theta_fac*theta_rr, rw, nsq_per_block, 0, 1);
                    double sqrt_theta_fac = sqrt(theta_fac) * fac;
                    for (int irys = 0; irys < 3; ++irys) {
                        rw[ irys*2   *nsq_per_block] *= theta_fac;
                        rw[(irys*2+1)*nsq_per_block] *= sqrt_theta_fac;
                    }
                } else {
                    double *rw1 = rw + 6*nsq_per_block;
                    rys_roots(3, theta_rr, rw1, nsq_per_block, 0, 1);
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(3, theta_fac*theta_rr, rw, nsq_per_block, 0, 1);
                    double sqrt_theta_fac = -sqrt(theta_fac) * fac;
                    for (int irys = 0; irys < 3; ++irys) {
                        rw[ irys*2   *nsq_per_block] *= theta_fac;
                        rw[(irys*2+1)*nsq_per_block] *= sqrt_theta_fac;
                        rw1[(irys*2+1)*nsq_per_block] *= fac;
                    }
                }
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < bounds.nroots; ++irys) {
                    {
                    double wt = rw[(2*irys+1)*nsq_per_block];
                    double rt = rw[ 2*irys   *nsq_per_block];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    dd = dd_cache0;
                    Ix = hrr_1100x * dd;
                    Iy = 1 * dd;
                    Iz = wt * dd;
                    prod_xy = hrr_1100x * Iy;
                    prod_xz = hrr_1100x * Iz;
                    prod_yz = 1 * Iz;
                    double trr_30x = c0x * trr_20x + 2*b10 * trr_10x;
                    double hrr_2100x = trr_30x - xjxi * trr_20x;
                    gix = ai2 * hrr_2100x;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    giy = ai2 * trr_10y;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    giz = ai2 * trr_10z;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    gix -= 1 * hrr_0100x;
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double b00 = .5 * rt_aa;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    double hrr_1110x = trr_21x - xjxi * trr_11x;
                    gkx = ak2 * hrr_1110x;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    gky = ak2 * trr_01y;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    gkz = ak2 * trr_01z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    double trr_31x = cpx * trr_30x + 3*b00 * trr_20x;
                    double hrr_2110x = trr_31x - xjxi * trr_21x;
                    gikx = ai2 * hrr_2110x;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    giky = ai2 * trr_11y;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    gikz = ai2 * trr_11z;
                    double trr_01x = cpx * 1;
                    double hrr_0110x = trr_11x - xjxi * trr_01x;
                    gikx -= 1 * hrr_0110x;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    double hrr_1200x = hrr_2100x - xjxi * hrr_1100x;
                    gjx = aj2 * hrr_1200x;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    gjy = aj2 * hrr_0100y;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    gjz = aj2 * hrr_0100z;
                    gjx -= 1 * trr_10x;
                    gkx = ak2 * hrr_1110x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * trr_01z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    double hrr_1210x = hrr_2110x - xjxi * hrr_1110x;
                    gjkx = aj2 * hrr_1210x;
                    double hrr_0110y = trr_11y - yjyi * trr_01y;
                    gjky = aj2 * hrr_0110y;
                    double hrr_0110z = trr_11z - zjzi * trr_01z;
                    gjkz = aj2 * hrr_0110z;
                    gjkx -= 1 * trr_11x;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache1;
                    Ix = hrr_0100x * dd;
                    Iy = trr_10y * dd;
                    Iz = wt * dd;
                    prod_xy = hrr_0100x * Iy;
                    prod_xz = hrr_0100x * Iz;
                    prod_yz = trr_10y * Iz;
                    gix = ai2 * hrr_1100x;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    giy = ai2 * trr_20y;
                    giz = ai2 * trr_10z;
                    giy -= 1 * 1;
                    gkx = ak2 * hrr_0110x;
                    gky = ak2 * trr_11y;
                    gkz = ak2 * trr_01z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * hrr_1110x;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    giky = ai2 * trr_21y;
                    gikz = ai2 * trr_11z;
                    giky -= 1 * trr_01y;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    double hrr_0200x = hrr_1100x - xjxi * hrr_0100x;
                    gjx = aj2 * hrr_0200x;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    gjy = aj2 * hrr_1100y;
                    gjz = aj2 * hrr_0100z;
                    gjx -= 1 * 1;
                    gkx = ak2 * hrr_0110x;
                    gky = ak2 * trr_11y;
                    gkz = ak2 * trr_01z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    double hrr_0210x = hrr_1110x - xjxi * hrr_0110x;
                    gjkx = aj2 * hrr_0210x;
                    double hrr_1110y = trr_21y - yjyi * trr_11y;
                    gjky = aj2 * hrr_1110y;
                    gjkz = aj2 * hrr_0110z;
                    gjkx -= 1 * trr_01x;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache2;
                    Ix = hrr_0100x * dd;
                    Iy = 1 * dd;
                    Iz = trr_10z * dd;
                    prod_xy = hrr_0100x * Iy;
                    prod_xz = hrr_0100x * Iz;
                    prod_yz = 1 * Iz;
                    gix = ai2 * hrr_1100x;
                    giy = ai2 * trr_10y;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    giz = ai2 * trr_20z;
                    giz -= 1 * wt;
                    gkx = ak2 * hrr_0110x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * trr_11z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * hrr_1110x;
                    giky = ai2 * trr_11y;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    gikz = ai2 * trr_21z;
                    gikz -= 1 * trr_01z;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_0200x;
                    gjy = aj2 * hrr_0100y;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    gjz = aj2 * hrr_1100z;
                    gjx -= 1 * 1;
                    gkx = ak2 * hrr_0110x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * trr_11z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_0210x;
                    gjky = aj2 * hrr_0110y;
                    double hrr_1110z = trr_21z - zjzi * trr_11z;
                    gjkz = aj2 * hrr_1110z;
                    gjkx -= 1 * trr_01x;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache3;
                    Ix = trr_10x * dd;
                    Iy = hrr_0100y * dd;
                    Iz = wt * dd;
                    prod_xy = trr_10x * Iy;
                    prod_xz = trr_10x * Iz;
                    prod_yz = hrr_0100y * Iz;
                    gix = ai2 * trr_20x;
                    giy = ai2 * hrr_1100y;
                    giz = ai2 * trr_10z;
                    gix -= 1 * 1;
                    gkx = ak2 * trr_11x;
                    gky = ak2 * hrr_0110y;
                    gkz = ak2 * trr_01z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_21x;
                    giky = ai2 * hrr_1110y;
                    gikz = ai2 * trr_11z;
                    gikx -= 1 * trr_01x;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_1100x;
                    double hrr_0200y = hrr_1100y - yjyi * hrr_0100y;
                    gjy = aj2 * hrr_0200y;
                    gjz = aj2 * hrr_0100z;
                    gjy -= 1 * 1;
                    gkx = ak2 * trr_11x;
                    gky = ak2 * hrr_0110y;
                    gkz = ak2 * trr_01z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_1110x;
                    double hrr_0210y = hrr_1110y - yjyi * hrr_0110y;
                    gjky = aj2 * hrr_0210y;
                    gjkz = aj2 * hrr_0110z;
                    gjky -= 1 * trr_01y;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache4;
                    Ix = 1 * dd;
                    Iy = hrr_1100y * dd;
                    Iz = wt * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = hrr_1100y * Iz;
                    gix = ai2 * trr_10x;
                    double trr_30y = c0y * trr_20y + 2*b10 * trr_10y;
                    double hrr_2100y = trr_30y - yjyi * trr_20y;
                    giy = ai2 * hrr_2100y;
                    giz = ai2 * trr_10z;
                    giy -= 1 * hrr_0100y;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * hrr_1110y;
                    gkz = ak2 * trr_01z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_11x;
                    double trr_31y = cpy * trr_30y + 3*b00 * trr_20y;
                    double hrr_2110y = trr_31y - yjyi * trr_21y;
                    giky = ai2 * hrr_2110y;
                    gikz = ai2 * trr_11z;
                    giky -= 1 * hrr_0110y;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    double hrr_1200y = hrr_2100y - yjyi * hrr_1100y;
                    gjy = aj2 * hrr_1200y;
                    gjz = aj2 * hrr_0100z;
                    gjy -= 1 * trr_10y;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * hrr_1110y;
                    gkz = ak2 * trr_01z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_0110x;
                    double hrr_1210y = hrr_2110y - yjyi * hrr_1110y;
                    gjky = aj2 * hrr_1210y;
                    gjkz = aj2 * hrr_0110z;
                    gjky -= 1 * trr_11y;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache5;
                    Ix = 1 * dd;
                    Iy = hrr_0100y * dd;
                    Iz = trr_10z * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = hrr_0100y * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * hrr_1100y;
                    giz = ai2 * trr_20z;
                    giz -= 1 * wt;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * hrr_0110y;
                    gkz = ak2 * trr_11z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_11x;
                    giky = ai2 * hrr_1110y;
                    gikz = ai2 * trr_21z;
                    gikz -= 1 * trr_01z;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_0200y;
                    gjz = aj2 * hrr_1100z;
                    gjy -= 1 * 1;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * hrr_0110y;
                    gkz = ak2 * trr_11z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_0110x;
                    gjky = aj2 * hrr_0210y;
                    gjkz = aj2 * hrr_1110z;
                    gjky -= 1 * trr_01y;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache6;
                    Ix = trr_10x * dd;
                    Iy = 1 * dd;
                    Iz = hrr_0100z * dd;
                    prod_xy = trr_10x * Iy;
                    prod_xz = trr_10x * Iz;
                    prod_yz = 1 * Iz;
                    gix = ai2 * trr_20x;
                    giy = ai2 * trr_10y;
                    giz = ai2 * hrr_1100z;
                    gix -= 1 * 1;
                    gkx = ak2 * trr_11x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * hrr_0110z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_21x;
                    giky = ai2 * trr_11y;
                    gikz = ai2 * hrr_1110z;
                    gikx -= 1 * trr_01x;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_1100x;
                    gjy = aj2 * hrr_0100y;
                    double hrr_0200z = hrr_1100z - zjzi * hrr_0100z;
                    gjz = aj2 * hrr_0200z;
                    gjz -= 1 * wt;
                    gkx = ak2 * trr_11x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * hrr_0110z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_1110x;
                    gjky = aj2 * hrr_0110y;
                    double hrr_0210z = hrr_1110z - zjzi * hrr_0110z;
                    gjkz = aj2 * hrr_0210z;
                    gjkz -= 1 * trr_01z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache7;
                    Ix = 1 * dd;
                    Iy = trr_10y * dd;
                    Iz = hrr_0100z * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = trr_10y * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_20y;
                    giz = ai2 * hrr_1100z;
                    giy -= 1 * 1;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_11y;
                    gkz = ak2 * hrr_0110z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_11x;
                    giky = ai2 * trr_21y;
                    gikz = ai2 * hrr_1110z;
                    giky -= 1 * trr_01y;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_1100y;
                    gjz = aj2 * hrr_0200z;
                    gjz -= 1 * wt;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_11y;
                    gkz = ak2 * hrr_0110z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_0110x;
                    gjky = aj2 * hrr_1110y;
                    gjkz = aj2 * hrr_0210z;
                    gjkz -= 1 * trr_01z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    dd = dd_cache8;
                    Ix = 1 * dd;
                    Iy = 1 * dd;
                    Iz = hrr_1100z * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = 1 * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_10y;
                    double trr_30z = c0z * trr_20z + 2*b10 * trr_10z;
                    double hrr_2100z = trr_30z - zjzi * trr_20z;
                    giz = ai2 * hrr_2100z;
                    giz -= 1 * hrr_0100z;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * hrr_1110z;
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    gikx = ai2 * trr_11x;
                    giky = ai2 * trr_11y;
                    double trr_31z = cpz * trr_30z + 3*b00 * trr_20z;
                    double hrr_2110z = trr_31z - zjzi * trr_21z;
                    gikz = ai2 * hrr_2110z;
                    gikz -= 1 * hrr_0110z;
                    gikx *= ak2;
                    giky *= ak2;
                    gikz *= ak2;
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_0100y;
                    double hrr_1200z = hrr_2100z - zjzi * hrr_1100z;
                    gjz = aj2 * hrr_1200z;
                    gjz -= 1 * trr_10z;
                    gkx = ak2 * trr_01x;
                    gky = ak2 * trr_01y;
                    gkz = ak2 * hrr_1110z;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    gjkx = aj2 * hrr_0110x;
                    gjky = aj2 * hrr_0110y;
                    double hrr_1210z = hrr_2110z - zjzi * hrr_1110z;
                    gjkz = aj2 * hrr_1210z;
                    gjkz -= 1 * trr_11z;
                    gjkx *= ak2;
                    gjky *= ak2;
                    gjkz *= ak2;
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    }
                    {
                    double wt = rw[(2*irys+1)*nsq_per_block];
                    double rt = rw[ 2*irys   *nsq_per_block];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    dd = dd_cache0;
                    Ix = hrr_1100x * dd;
                    Iy = 1 * dd;
                    Iz = wt * dd;
                    prod_xy = hrr_1100x * Iy;
                    prod_xz = hrr_1100x * Iz;
                    prod_yz = 1 * Iz;
                    double trr_30x = c0x * trr_20x + 2*b10 * trr_10x;
                    double hrr_2100x = trr_30x - xjxi * trr_20x;
                    gix = ai2 * hrr_2100x;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    giy = ai2 * trr_10y;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    giz = ai2 * trr_10z;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    gix -= 1 * hrr_0100x;
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double b00 = .5 * rt_aa;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    double hrr_2001x = trr_21x - xlxk * trr_20x;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    double hrr_1101x = hrr_2001x - xjxi * hrr_1001x;
                    glx = al2 * hrr_1101x;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    gly = al2 * hrr_0001y;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    glz = al2 * hrr_0001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    double trr_31x = cpx * trr_30x + 3*b00 * trr_20x;
                    double hrr_3001x = trr_31x - xlxk * trr_30x;
                    double hrr_2101x = hrr_3001x - xjxi * hrr_2001x;
                    gilx = ai2 * hrr_2101x;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    gily = ai2 * hrr_1001y;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    gilz = ai2 * hrr_1001z;
                    double trr_01x = cpx * 1;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    double hrr_0101x = hrr_1001x - xjxi * hrr_0001x;
                    gilx -= 1 * hrr_0101x;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    double hrr_1200x = hrr_2100x - xjxi * hrr_1100x;
                    gjx = aj2 * hrr_1200x;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    gjy = aj2 * hrr_0100y;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    gjz = aj2 * hrr_0100z;
                    gjx -= 1 * trr_10x;
                    glx = al2 * hrr_1101x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_0001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    double hrr_1201x = hrr_2101x - xjxi * hrr_1101x;
                    gjlx = aj2 * hrr_1201x;
                    double hrr_0101y = hrr_1001y - yjyi * hrr_0001y;
                    gjly = aj2 * hrr_0101y;
                    double hrr_0101z = hrr_1001z - zjzi * hrr_0001z;
                    gjlz = aj2 * hrr_0101z;
                    gjlx -= 1 * hrr_1001x;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache1;
                    Ix = hrr_0100x * dd;
                    Iy = trr_10y * dd;
                    Iz = wt * dd;
                    prod_xy = hrr_0100x * Iy;
                    prod_xz = hrr_0100x * Iz;
                    prod_yz = trr_10y * Iz;
                    gix = ai2 * hrr_1100x;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    giy = ai2 * trr_20y;
                    giz = ai2 * trr_10z;
                    giy -= 1 * 1;
                    glx = al2 * hrr_0101x;
                    gly = al2 * hrr_1001y;
                    glz = al2 * hrr_0001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1101x;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    double hrr_2001y = trr_21y - ylyk * trr_20y;
                    gily = ai2 * hrr_2001y;
                    gilz = ai2 * hrr_1001z;
                    gily -= 1 * hrr_0001y;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    double hrr_0200x = hrr_1100x - xjxi * hrr_0100x;
                    gjx = aj2 * hrr_0200x;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    gjy = aj2 * hrr_1100y;
                    gjz = aj2 * hrr_0100z;
                    gjx -= 1 * 1;
                    glx = al2 * hrr_0101x;
                    gly = al2 * hrr_1001y;
                    glz = al2 * hrr_0001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    double hrr_0201x = hrr_1101x - xjxi * hrr_0101x;
                    gjlx = aj2 * hrr_0201x;
                    double hrr_1101y = hrr_2001y - yjyi * hrr_1001y;
                    gjly = aj2 * hrr_1101y;
                    gjlz = aj2 * hrr_0101z;
                    gjlx -= 1 * hrr_0001x;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache2;
                    Ix = hrr_0100x * dd;
                    Iy = 1 * dd;
                    Iz = trr_10z * dd;
                    prod_xy = hrr_0100x * Iy;
                    prod_xz = hrr_0100x * Iz;
                    prod_yz = 1 * Iz;
                    gix = ai2 * hrr_1100x;
                    giy = ai2 * trr_10y;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    giz = ai2 * trr_20z;
                    giz -= 1 * wt;
                    glx = al2 * hrr_0101x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_1001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1101x;
                    gily = ai2 * hrr_1001y;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    double hrr_2001z = trr_21z - zlzk * trr_20z;
                    gilz = ai2 * hrr_2001z;
                    gilz -= 1 * hrr_0001z;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_0200x;
                    gjy = aj2 * hrr_0100y;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    gjz = aj2 * hrr_1100z;
                    gjx -= 1 * 1;
                    glx = al2 * hrr_0101x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_1001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    gjlx = aj2 * hrr_0201x;
                    gjly = aj2 * hrr_0101y;
                    double hrr_1101z = hrr_2001z - zjzi * hrr_1001z;
                    gjlz = aj2 * hrr_1101z;
                    gjlx -= 1 * hrr_0001x;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache3;
                    Ix = trr_10x * dd;
                    Iy = hrr_0100y * dd;
                    Iz = wt * dd;
                    prod_xy = trr_10x * Iy;
                    prod_xz = trr_10x * Iz;
                    prod_yz = hrr_0100y * Iz;
                    gix = ai2 * trr_20x;
                    giy = ai2 * hrr_1100y;
                    giz = ai2 * trr_10z;
                    gix -= 1 * 1;
                    glx = al2 * hrr_1001x;
                    gly = al2 * hrr_0101y;
                    glz = al2 * hrr_0001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_2001x;
                    gily = ai2 * hrr_1101y;
                    gilz = ai2 * hrr_1001z;
                    gilx -= 1 * hrr_0001x;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_1100x;
                    double hrr_0200y = hrr_1100y - yjyi * hrr_0100y;
                    gjy = aj2 * hrr_0200y;
                    gjz = aj2 * hrr_0100z;
                    gjy -= 1 * 1;
                    glx = al2 * hrr_1001x;
                    gly = al2 * hrr_0101y;
                    glz = al2 * hrr_0001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    gjlx = aj2 * hrr_1101x;
                    double hrr_0201y = hrr_1101y - yjyi * hrr_0101y;
                    gjly = aj2 * hrr_0201y;
                    gjlz = aj2 * hrr_0101z;
                    gjly -= 1 * hrr_0001y;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache4;
                    Ix = 1 * dd;
                    Iy = hrr_1100y * dd;
                    Iz = wt * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = hrr_1100y * Iz;
                    gix = ai2 * trr_10x;
                    double trr_30y = c0y * trr_20y + 2*b10 * trr_10y;
                    double hrr_2100y = trr_30y - yjyi * trr_20y;
                    giy = ai2 * hrr_2100y;
                    giz = ai2 * trr_10z;
                    giy -= 1 * hrr_0100y;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_1101y;
                    glz = al2 * hrr_0001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1001x;
                    double trr_31y = cpy * trr_30y + 3*b00 * trr_20y;
                    double hrr_3001y = trr_31y - ylyk * trr_30y;
                    double hrr_2101y = hrr_3001y - yjyi * hrr_2001y;
                    gily = ai2 * hrr_2101y;
                    gilz = ai2 * hrr_1001z;
                    gily -= 1 * hrr_0101y;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    double hrr_1200y = hrr_2100y - yjyi * hrr_1100y;
                    gjy = aj2 * hrr_1200y;
                    gjz = aj2 * hrr_0100z;
                    gjy -= 1 * trr_10y;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_1101y;
                    glz = al2 * hrr_0001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    gjlx = aj2 * hrr_0101x;
                    double hrr_1201y = hrr_2101y - yjyi * hrr_1101y;
                    gjly = aj2 * hrr_1201y;
                    gjlz = aj2 * hrr_0101z;
                    gjly -= 1 * hrr_1001y;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache5;
                    Ix = 1 * dd;
                    Iy = hrr_0100y * dd;
                    Iz = trr_10z * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = hrr_0100y * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * hrr_1100y;
                    giz = ai2 * trr_20z;
                    giz -= 1 * wt;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_0101y;
                    glz = al2 * hrr_1001z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1001x;
                    gily = ai2 * hrr_1101y;
                    gilz = ai2 * hrr_2001z;
                    gilz -= 1 * hrr_0001z;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_0200y;
                    gjz = aj2 * hrr_1100z;
                    gjy -= 1 * 1;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_0101y;
                    glz = al2 * hrr_1001z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    gjlx = aj2 * hrr_0101x;
                    gjly = aj2 * hrr_0201y;
                    gjlz = aj2 * hrr_1101z;
                    gjly -= 1 * hrr_0001y;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache6;
                    Ix = trr_10x * dd;
                    Iy = 1 * dd;
                    Iz = hrr_0100z * dd;
                    prod_xy = trr_10x * Iy;
                    prod_xz = trr_10x * Iz;
                    prod_yz = 1 * Iz;
                    gix = ai2 * trr_20x;
                    giy = ai2 * trr_10y;
                    giz = ai2 * hrr_1100z;
                    gix -= 1 * 1;
                    glx = al2 * hrr_1001x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_0101z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_2001x;
                    gily = ai2 * hrr_1001y;
                    gilz = ai2 * hrr_1101z;
                    gilx -= 1 * hrr_0001x;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_1100x;
                    gjy = aj2 * hrr_0100y;
                    double hrr_0200z = hrr_1100z - zjzi * hrr_0100z;
                    gjz = aj2 * hrr_0200z;
                    gjz -= 1 * wt;
                    glx = al2 * hrr_1001x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_0101z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    gjlx = aj2 * hrr_1101x;
                    gjly = aj2 * hrr_0101y;
                    double hrr_0201z = hrr_1101z - zjzi * hrr_0101z;
                    gjlz = aj2 * hrr_0201z;
                    gjlz -= 1 * hrr_0001z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache7;
                    Ix = 1 * dd;
                    Iy = trr_10y * dd;
                    Iz = hrr_0100z * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = trr_10y * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_20y;
                    giz = ai2 * hrr_1100z;
                    giy -= 1 * 1;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_1001y;
                    glz = al2 * hrr_0101z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1001x;
                    gily = ai2 * hrr_2001y;
                    gilz = ai2 * hrr_1101z;
                    gily -= 1 * hrr_0001y;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_1100y;
                    gjz = aj2 * hrr_0200z;
                    gjz -= 1 * wt;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_1001y;
                    glz = al2 * hrr_0101z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    gjlx = aj2 * hrr_0101x;
                    gjly = aj2 * hrr_1101y;
                    gjlz = aj2 * hrr_0201z;
                    gjlz -= 1 * hrr_0001z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    dd = dd_cache8;
                    Ix = 1 * dd;
                    Iy = 1 * dd;
                    Iz = hrr_1100z * dd;
                    prod_xy = 1 * Iy;
                    prod_xz = 1 * Iz;
                    prod_yz = 1 * Iz;
                    gix = ai2 * trr_10x;
                    giy = ai2 * trr_10y;
                    double trr_30z = c0z * trr_20z + 2*b10 * trr_10z;
                    double hrr_2100z = trr_30z - zjzi * trr_20z;
                    giz = ai2 * hrr_2100z;
                    giz -= 1 * hrr_0100z;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_1101z;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    gilx = ai2 * hrr_1001x;
                    gily = ai2 * hrr_1001y;
                    double trr_31z = cpz * trr_30z + 3*b00 * trr_20z;
                    double hrr_3001z = trr_31z - zlzk * trr_30z;
                    double hrr_2101z = hrr_3001z - zjzi * hrr_2001z;
                    gilz = ai2 * hrr_2101z;
                    gilz -= 1 * hrr_0101z;
                    gilx *= al2;
                    gily *= al2;
                    gilz *= al2;
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjx = aj2 * hrr_0100x;
                    gjy = aj2 * hrr_0100y;
                    double hrr_1200z = hrr_2100z - zjzi * hrr_1100z;
                    gjz = aj2 * hrr_1200z;
                    gjz -= 1 * trr_10z;
                    glx = al2 * hrr_0001x;
                    gly = al2 * hrr_0001y;
                    glz = al2 * hrr_1101z;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    gjlx = aj2 * hrr_0101x;
                    gjly = aj2 * hrr_0101y;
                    double hrr_1201z = hrr_2101z - zjzi * hrr_1101z;
                    gjlz = aj2 * hrr_1201z;
                    gjlz -= 1 * hrr_1001z;
                    gjlx *= al2;
                    gjly *= al2;
                    gjlz *= al2;
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            continue;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        int natm = envs.natm;
        double *ejk = jk.ejk;
        atomicAdd(ejk + (ia*natm+ka)*9 + 0, v_ixkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 1, v_ixky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 2, v_ixkz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 3, v_iykx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 4, v_iyky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 5, v_iykz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 6, v_izkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 7, v_izky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 8, v_izkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 0, v_jxkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 1, v_jxky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 2, v_jxkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 3, v_jykx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 4, v_jyky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 5, v_jykz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 6, v_jzkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 7, v_jzky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 8, v_jzkz);
        atomicAdd(ejk + (ia*natm+la)*9 + 0, v_ixlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 1, v_ixly);
        atomicAdd(ejk + (ia*natm+la)*9 + 2, v_ixlz);
        atomicAdd(ejk + (ia*natm+la)*9 + 3, v_iylx);
        atomicAdd(ejk + (ia*natm+la)*9 + 4, v_iyly);
        atomicAdd(ejk + (ia*natm+la)*9 + 5, v_iylz);
        atomicAdd(ejk + (ia*natm+la)*9 + 6, v_izlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 7, v_izly);
        atomicAdd(ejk + (ia*natm+la)*9 + 8, v_izlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 0, v_jxlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 1, v_jxly);
        atomicAdd(ejk + (ja*natm+la)*9 + 2, v_jxlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 3, v_jylx);
        atomicAdd(ejk + (ja*natm+la)*9 + 4, v_jyly);
        atomicAdd(ejk + (ja*natm+la)*9 + 5, v_jylz);
        atomicAdd(ejk + (ja*natm+la)*9 + 6, v_jzlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 7, v_jzly);
        atomicAdd(ejk + (ja*natm+la)*9 + 8, v_jzlz);
    }
}
__global__
void rys_ejk_ip2_type3_1100(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *pool, double *dd_pool, uint32_t *batch_head)
{
    int b_id = blockIdx.x;
    int t_id = threadIdx.x + blockDim.x * threadIdx.y;
    ShellQuartet *shl_quartet_idx = pool + b_id * QUEUE_DEPTH;

    double *dd_cache = dd_pool + b_id * 2304;

    __shared__ int batch_id;
    if (t_id == 0) {
        batch_id = atomicAdd(batch_head, 1);
    }
    __syncthreads();
    int nbatches_kl = (bounds.ntile_kl_pairs + TILES_IN_BATCH - 1) / TILES_IN_BATCH;
    int nbatches = bounds.ntile_ij_pairs * nbatches_kl;
    while (batch_id < nbatches) {
        int batch_ij = batch_id / nbatches_kl;
        int batch_kl = batch_id % nbatches_kl;
        int nbas = envs.nbas;
        double *env = envs.env;
        double omega = env[PTR_RANGE_OMEGA];
        int ntasks;
        if (omega >= 0) {
            ntasks = _fill_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                     batch_ij, batch_kl);
        } else {
            ntasks = _fill_sr_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                        batch_ij, batch_kl);
        }
        if (ntasks > 0) {
            int tile_ij = bounds.tile_ij_mapping[batch_ij];
            int nbas_tiles = nbas / TILE;
            int tile_i = tile_ij / nbas_tiles;
            int tile_j = tile_ij % nbas_tiles;
            int ish0 = tile_i * TILE;
            int jsh0 = tile_j * TILE;
            _rys_ejk_ip2_type3_1100(envs, jk, bounds, shl_quartet_idx, dd_cache,
                             ntasks, ish0, jsh0);
        }
        if (t_id == 0) {
            batch_id = atomicAdd(batch_head, 1);
            atomicAdd(batch_head+1, ntasks);
        }
        __syncthreads();
    }
}

__device__ static
void _rys_ejk_ip2_type3_1110(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *shl_quartet_idx, double *dd_cache,
                int ntasks, int ish0, int jsh0)
{
    int sq_id = threadIdx.x;
    int nsq_per_block = blockDim.x;
    int gout_id = threadIdx.y;
    int gout_stride = blockDim.y;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int *ao_loc = envs.ao_loc;
    int nbas = envs.nbas;
    int nao = ao_loc[nbas];
    int *bas = envs.bas;
    double *env = envs.env;
    double omega = env[PTR_RANGE_OMEGA];
    double *dm = jk.dm;
    extern __shared__ double cicj_cache[];
    double *rw = cicj_cache + iprim*jprim*TILE2 + sq_id;
    double *gx = rw + 64 * bounds.nroots;
    double *gy = gx + 1728;
    double *gz = gy + 1728;
    if (gout_id == 0) {
        gx[0] = 1.;
        gy[0] = 1.;
    }
    double s0, s1, s2;
    double Rpq[3];
    dd_cache += sq_id;
    int thread_id = nsq_per_block * gout_id + sq_id;
    int threads = nsq_per_block * gout_stride;
    for (int n = thread_id; n < iprim*jprim*TILE2; n += threads) {
        int ijp = n / TILE2;
        int sh_ij = n % TILE2;
        int ish = ish0 + sh_ij / TILE;
        int jsh = jsh0 + sh_ij % TILE;
        int ip = ijp / jprim;
        int jp = ijp % jprim;
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
        double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double theta_ij = ai * aj / aij;
        double Kab = exp(-theta_ij * (xjxi*xjxi+yjyi*yjyi+zjzi*zjzi));
        cicj_cache[n] = ci[ip] * cj[jp] * Kab;
    }

    for (int task0 = 0; task0 < ntasks; task0 += nsq_per_block) {
        __syncthreads();
        int task_id = task0 + sq_id;
        double fac_sym = PI_FAC;
        ShellQuartet sq;
        if (task_id >= ntasks) {
            // To avoid __syncthreads blocking blocking idle warps, all remaining
            // threads compute a valid shell quartet with zero normalization factor
            sq = shl_quartet_idx[0];
            fac_sym = 0.;
        } else {
            sq = shl_quartet_idx[task_id];
        }
        int ish = sq.i;
        int jsh = sq.j;
        int ksh = sq.k;
        int lsh = sq.l;
        int sh_ij = (ish % TILE) * TILE + (jsh % TILE);
        if (ish == jsh) fac_sym *= .5;
        if (ksh == lsh) fac_sym *= .5;
        if (ish*nbas+jsh == ksh*nbas+lsh) fac_sym *= .5;
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double dd;
        double Ix, Iy, Iz, prod_xy, prod_xz, prod_yz;
        double gix, giy, giz;
        double gjx, gjy, gjz;
        double gkx, gky, gkz;
        double glx, gly, glz;
        double gikx, giky, gikz;
        double gjkx, gjky, gjkz;
        double gilx, gily, gilz;
        double gjlx, gjly, gjlz;
        double v_ixkx = 0;
        double v_ixky = 0;
        double v_ixkz = 0;
        double v_iykx = 0;
        double v_iyky = 0;
        double v_iykz = 0;
        double v_izkx = 0;
        double v_izky = 0;
        double v_izkz = 0;
        double v_jxkx = 0;
        double v_jxky = 0;
        double v_jxkz = 0;
        double v_jykx = 0;
        double v_jyky = 0;
        double v_jykz = 0;
        double v_jzkx = 0;
        double v_jzky = 0;
        double v_jzkz = 0;
        double v_ixlx = 0;
        double v_ixly = 0;
        double v_ixlz = 0;
        double v_iylx = 0;
        double v_iyly = 0;
        double v_iylz = 0;
        double v_izlx = 0;
        double v_izly = 0;
        double v_izlz = 0;
        double v_jxlx = 0;
        double v_jxly = 0;
        double v_jxlz = 0;
        double v_jylx = 0;
        double v_jyly = 0;
        double v_jylz = 0;
        double v_jzlx = 0;
        double v_jzly = 0;
        double v_jzlz = 0;
        int do_j = jk.j_factor != 0.;
        int do_k = jk.k_factor != 0.;
        if (jk.n_dm == 1) {
            for (int n = gout_id; n < 27; n+=gout_stride) {
                int kl = n / 9;
                int ij = n % 9;
                int i = ij % 3;
                int j = ij / 3;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm[_jk] * dm[_il] + dm[_jl] * dm[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * dm[_ji] * dm[_lk];
                }
                dd_cache[n*nsq_per_block] = dd;
            }
        } else {
            double *dmb = dm + nao * nao;
            for (int n = gout_id; n < 27; n+=gout_stride) {
                int kl = n / 9;
                int ij = n % 9;
                int i = ij % 3;
                int j = ij / 3;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm [_jk] * dm [_il] + dm [_jl] * dm [_ik] +
                                         dmb[_jk] * dmb[_il] + dmb[_jl] * dmb[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * (dm[_ji] + dm[_ji]) * (dmb[_lk] + dmb[_lk]);
                }
                dd_cache[n*nsq_per_block] = dd;
            }
        }
        
        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = fac_sym * ck[kp] * cl[lp] * Kcd;
            double xqc = xlxk * al_akl;
            double yqc = ylyk * al_akl;
            double zqc = zlzk * al_akl;
            double xkl = rk[0] + xqc;
            double ykl = rk[1] + yqc;
            double zkl = rk[2] + zqc;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[sh_ij+ijp*TILE2];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = xjxi * aj_aij;
                double ypa = yjyi * aj_aij;
                double zpa = zjzi * aj_aij;
                double xij = ri[0] + xpa; // (ai*xi+aj*xj)/aij
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                Rpq[0] = xpq;
                Rpq[1] = ypq;
                Rpq[2] = zpq;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                double theta_rr = theta * rr;
                __syncthreads();
                if (omega == 0) {
                    rys_roots(3, theta_rr, rw, 32, gout_id, gout_stride);
                    __syncthreads();
                    for (int irys = gout_id; irys < 3; irys += gout_stride) {
                        rw[(irys*2+1)*32] *= fac;
                    }
                } else if (omega > 0) {
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(3, theta_fac*theta_rr, rw, 32, gout_id, gout_stride);
                    __syncthreads();
                    double sqrt_theta_fac = sqrt(theta_fac) * fac;
                    for (int irys = gout_id; irys < 3; irys += gout_stride) {
                        rw[ irys*2   *32] *= theta_fac;
                        rw[(irys*2+1)*32] *= sqrt_theta_fac;
                    }
                } else {
                    double *rw1 = rw + 6*32;
                    rys_roots(3, theta_rr, rw1, 32, gout_id, gout_stride);
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(3, theta_fac*theta_rr, rw, 32, gout_id, gout_stride);
                    __syncthreads();
                    double sqrt_theta_fac = -sqrt(theta_fac) * fac;
                    for (int irys = gout_id; irys < 3; irys += gout_stride) {
                        rw[ irys*2   *32] *= theta_fac;
                        rw[(irys*2+1)*32] *= sqrt_theta_fac;
                        rw1[(irys*2+1)*32] *= fac;
                    }
                }
                for (int irys = 0; irys < bounds.nroots; ++irys) {
                    __syncthreads();
                    double rt = rw[irys*64];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double rt_akl = rt_aa * aij;
                    double b00 = .5 * rt_aa;
                    double b10 = .5/aij * (1 - rt_aij);
                    double b01 = .5/akl * (1 - rt_akl);
                    for (int n = gout_id; n < 3; n += 8) {
                        if (n == 2) {
                            gz[0] = rw[irys*64+32];
                        }
                        double *_gx = gx + n * 1728;
                        double xjxi = rj[n] - ri[n];
                        double Rpa = xjxi * aj_aij;
                        double c0x = Rpa - rt_aij * Rpq[n];
                        s0 = _gx[0];
                        s1 = c0x * s0;
                        _gx[32] = s1;
                        s2 = c0x * s1 + 1 * b10 * s0;
                        _gx[64] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 2 * b10 * s0;
                        _gx[96] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 3 * b10 * s0;
                        _gx[128] = s2;
                        double xlxk = rl[n] - rk[n];
                        double Rqc = xlxk * al_akl;
                        double cpx = Rqc + rt_akl * Rpq[n];
                        s0 = _gx[0];
                        s1 = cpx * s0;
                        _gx[288] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        _gx[576] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        _gx[864] = s2;
                        s0 = _gx[32];
                        s1 = cpx * s0;
                        s1 += 1 * b00 * _gx[0];
                        _gx[320] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 1 * b00 * _gx[288];
                        _gx[608] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 1 * b00 * _gx[576];
                        _gx[896] = s2;
                        s0 = _gx[64];
                        s1 = cpx * s0;
                        s1 += 2 * b00 * _gx[32];
                        _gx[352] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 2 * b00 * _gx[320];
                        _gx[640] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 2 * b00 * _gx[608];
                        _gx[928] = s2;
                        s0 = _gx[96];
                        s1 = cpx * s0;
                        s1 += 3 * b00 * _gx[64];
                        _gx[384] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 3 * b00 * _gx[352];
                        _gx[672] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 3 * b00 * _gx[640];
                        _gx[960] = s2;
                        s0 = _gx[128];
                        s1 = cpx * s0;
                        s1 += 4 * b00 * _gx[96];
                        _gx[416] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 4 * b00 * _gx[384];
                        _gx[704] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 4 * b00 * _gx[672];
                        _gx[992] = s2;
                        s1 = _gx[128];
                        s0 = _gx[96];
                        _gx[192] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[64];
                        _gx[160] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[128] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[96] = s1 - xjxi * s0;
                        s1 = _gx[192];
                        s0 = _gx[160];
                        _gx[256] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[128];
                        _gx[224] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[96];
                        _gx[192] = s1 - xjxi * s0;
                        s1 = _gx[416];
                        s0 = _gx[384];
                        _gx[480] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[352];
                        _gx[448] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[320];
                        _gx[416] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[288];
                        _gx[384] = s1 - xjxi * s0;
                        s1 = _gx[480];
                        s0 = _gx[448];
                        _gx[544] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[416];
                        _gx[512] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[384];
                        _gx[480] = s1 - xjxi * s0;
                        s1 = _gx[704];
                        s0 = _gx[672];
                        _gx[768] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[640];
                        _gx[736] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[608];
                        _gx[704] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[576];
                        _gx[672] = s1 - xjxi * s0;
                        s1 = _gx[768];
                        s0 = _gx[736];
                        _gx[832] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[704];
                        _gx[800] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[672];
                        _gx[768] = s1 - xjxi * s0;
                        s1 = _gx[992];
                        s0 = _gx[960];
                        _gx[1056] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[928];
                        _gx[1024] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[896];
                        _gx[992] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[864];
                        _gx[960] = s1 - xjxi * s0;
                        s1 = _gx[1056];
                        s0 = _gx[1024];
                        _gx[1120] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[992];
                        _gx[1088] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[960];
                        _gx[1056] = s1 - xjxi * s0;
                        s1 = _gx[864];
                        s0 = _gx[576];
                        _gx[1440] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[288];
                        _gx[1152] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[864] = s1 - xlxk * s0;
                        s1 = _gx[896];
                        s0 = _gx[608];
                        _gx[1472] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[320];
                        _gx[1184] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[896] = s1 - xlxk * s0;
                        s1 = _gx[928];
                        s0 = _gx[640];
                        _gx[1504] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[352];
                        _gx[1216] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[64];
                        _gx[928] = s1 - xlxk * s0;
                        s1 = _gx[960];
                        s0 = _gx[672];
                        _gx[1536] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[384];
                        _gx[1248] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[96];
                        _gx[960] = s1 - xlxk * s0;
                        s1 = _gx[992];
                        s0 = _gx[704];
                        _gx[1568] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[416];
                        _gx[1280] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[128];
                        _gx[992] = s1 - xlxk * s0;
                        s1 = _gx[1024];
                        s0 = _gx[736];
                        _gx[1600] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[448];
                        _gx[1312] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[160];
                        _gx[1024] = s1 - xlxk * s0;
                        s1 = _gx[1056];
                        s0 = _gx[768];
                        _gx[1632] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[480];
                        _gx[1344] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[192];
                        _gx[1056] = s1 - xlxk * s0;
                        s1 = _gx[1088];
                        s0 = _gx[800];
                        _gx[1664] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[512];
                        _gx[1376] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[224];
                        _gx[1088] = s1 - xlxk * s0;
                        s1 = _gx[1120];
                        s0 = _gx[832];
                        _gx[1696] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[544];
                        _gx[1408] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[256];
                        _gx[1120] = s1 - xlxk * s0;
                    }
                    __syncthreads();
                    switch (gout_id) {
                    case 0:
                    dd = dd_cache[0];
                    Ix = gx[416];
                    Iy = gy[0];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[736] - 1 * gx[672]) - 1 * (ai2 * gx[160] - 1 * gx[96]);
                    giky = ak2 * ai2 * gy[320];
                    gikz = ak2 * ai2 * gz[320];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[800] - 1 * gx[608]) - 1 * (aj2 * gx[224] - 1 * gx[32]);
                    gjky = ak2 * aj2 * gy[384];
                    gjkz = ak2 * aj2 * gz[384];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[1312] - 1 * gx[1248]);
                    gily = al2 * ai2 * gy[896];
                    gilz = al2 * ai2 * gz[896];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[1376] - 1 * gx[1184]);
                    gjly = al2 * aj2 * gy[960];
                    gjlz = al2 * aj2 * gz[960];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[448] - 1 * gx[384]);
                    giy = ai2 * gy[32];
                    giz = ai2 * gz[32];
                    gjx = (aj2 * gx[512] - 1 * gx[320]);
                    gjy = aj2 * gy[96];
                    gjz = aj2 * gz[96];
                    gkx = (ak2 * gx[704] - 1 * gx[128]);
                    gky = ak2 * gy[288];
                    gkz = ak2 * gz[288];
                    glx = al2 * gx[1280];
                    gly = al2 * gy[864];
                    glz = al2 * gz[864];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[256];
                    Ix = gx[288];
                    Iy = gy[0];
                    Iz = gz[128];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[608] - 1 * ai2 * gx[32];
                    giky = ak2 * ai2 * gy[320];
                    gikz = ak2 * (ai2 * gz[448] - 1 * gz[384]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[672] - 1 * aj2 * gx[96];
                    gjky = ak2 * aj2 * gy[384];
                    gjkz = ak2 * (aj2 * gz[512] - 1 * gz[320]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1184];
                    gily = al2 * ai2 * gy[896];
                    gilz = al2 * (ai2 * gz[1024] - 1 * gz[960]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1248];
                    gjly = al2 * aj2 * gy[960];
                    gjlz = al2 * (aj2 * gz[1088] - 1 * gz[896]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[320];
                    giy = ai2 * gy[32];
                    giz = (ai2 * gz[160] - 1 * gz[96]);
                    gjx = aj2 * gx[384];
                    gjy = aj2 * gy[96];
                    gjz = (aj2 * gz[224] - 1 * gz[32]);
                    gkx = (ak2 * gx[576] - 1 * gx[0]);
                    gky = ak2 * gy[288];
                    gkz = ak2 * gz[416];
                    glx = al2 * gx[1152];
                    gly = al2 * gy[864];
                    glz = al2 * gz[992];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[512];
                    Ix = gx[0];
                    Iy = gy[320];
                    Iz = gz[96];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[320];
                    giky = ak2 * (ai2 * gy[640] - 1 * gy[576]) - 1 * (ai2 * gy[64] - 1 * gy[0]);
                    gikz = ak2 * ai2 * gz[416];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[384];
                    gjky = ak2 * aj2 * gy[704] - 1 * aj2 * gy[128];
                    gjkz = ak2 * (aj2 * gz[480] - 1 * gz[288]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[896];
                    gily = al2 * (ai2 * gy[1216] - 1 * gy[1152]);
                    gilz = al2 * ai2 * gz[992];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[960];
                    gjly = al2 * aj2 * gy[1280];
                    gjlz = al2 * (aj2 * gz[1056] - 1 * gz[864]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = (ai2 * gy[352] - 1 * gy[288]);
                    giz = ai2 * gz[128];
                    gjx = aj2 * gx[96];
                    gjy = aj2 * gy[416];
                    gjz = (aj2 * gz[192] - 1 * gz[0]);
                    gkx = ak2 * gx[288];
                    gky = (ak2 * gy[608] - 1 * gy[32]);
                    gkz = ak2 * gz[384];
                    glx = al2 * gx[864];
                    gly = al2 * gy[1184];
                    glz = al2 * gz[960];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[768];
                    Ix = gx[32];
                    Iy = gy[0];
                    Iz = gz[384];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[352] - 1 * gx[288]);
                    giky = ak2 * ai2 * gy[320];
                    gikz = ak2 * ai2 * gz[704] - 1 * ai2 * gz[128];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[416];
                    gjky = ak2 * aj2 * gy[384];
                    gjkz = ak2 * (aj2 * gz[768] - 1 * gz[576]) - 1 * (aj2 * gz[192] - 1 * gz[0]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[928] - 1 * gx[864]);
                    gily = al2 * ai2 * gy[896];
                    gilz = al2 * ai2 * gz[1280];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[992];
                    gjly = al2 * aj2 * gy[960];
                    gjlz = al2 * (aj2 * gz[1344] - 1 * gz[1152]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[64] - 1 * gx[0]);
                    giy = ai2 * gy[32];
                    giz = ai2 * gz[416];
                    gjx = aj2 * gx[128];
                    gjy = aj2 * gy[96];
                    gjz = (aj2 * gz[480] - 1 * gz[288]);
                    gkx = ak2 * gx[320];
                    gky = ak2 * gy[288];
                    gkz = (ak2 * gz[672] - 1 * gz[96]);
                    glx = al2 * gx[896];
                    gly = al2 * gy[864];
                    glz = al2 * gz[1248];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 1:
                    dd = dd_cache[32];
                    Ix = gx[384];
                    Iy = gy[32];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[704] - 1 * ai2 * gx[128];
                    giky = ak2 * (ai2 * gy[352] - 1 * gy[288]);
                    gikz = ak2 * ai2 * gz[320];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[768] - 1 * gx[576]) - 1 * (aj2 * gx[192] - 1 * gx[0]);
                    gjky = ak2 * aj2 * gy[416];
                    gjkz = ak2 * aj2 * gz[384];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1280];
                    gily = al2 * (ai2 * gy[928] - 1 * gy[864]);
                    gilz = al2 * ai2 * gz[896];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[1344] - 1 * gx[1152]);
                    gjly = al2 * aj2 * gy[992];
                    gjlz = al2 * aj2 * gz[960];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[416];
                    giy = (ai2 * gy[64] - 1 * gy[0]);
                    giz = ai2 * gz[32];
                    gjx = (aj2 * gx[480] - 1 * gx[288]);
                    gjy = aj2 * gy[128];
                    gjz = aj2 * gz[96];
                    gkx = (ak2 * gx[672] - 1 * gx[96]);
                    gky = ak2 * gy[320];
                    gkz = ak2 * gz[288];
                    glx = al2 * gx[1248];
                    gly = al2 * gy[896];
                    glz = al2 * gz[864];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[288];
                    Ix = gx[128];
                    Iy = gy[288];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[448] - 1 * gx[384]);
                    giky = ak2 * ai2 * gy[608] - 1 * ai2 * gy[32];
                    gikz = ak2 * ai2 * gz[320];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[512] - 1 * gx[320]);
                    gjky = ak2 * aj2 * gy[672] - 1 * aj2 * gy[96];
                    gjkz = ak2 * aj2 * gz[384];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[1024] - 1 * gx[960]);
                    gily = al2 * ai2 * gy[1184];
                    gilz = al2 * ai2 * gz[896];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[1088] - 1 * gx[896]);
                    gjly = al2 * aj2 * gy[1248];
                    gjlz = al2 * aj2 * gz[960];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[160] - 1 * gx[96]);
                    giy = ai2 * gy[320];
                    giz = ai2 * gz[32];
                    gjx = (aj2 * gx[224] - 1 * gx[32]);
                    gjy = aj2 * gy[384];
                    gjz = aj2 * gz[96];
                    gkx = ak2 * gx[416];
                    gky = (ak2 * gy[576] - 1 * gy[0]);
                    gkz = ak2 * gz[288];
                    glx = al2 * gx[992];
                    gly = al2 * gy[1152];
                    glz = al2 * gz[864];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[544];
                    Ix = gx[0];
                    Iy = gy[288];
                    Iz = gz[128];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[320];
                    giky = ak2 * ai2 * gy[608] - 1 * ai2 * gy[32];
                    gikz = ak2 * (ai2 * gz[448] - 1 * gz[384]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[384];
                    gjky = ak2 * aj2 * gy[672] - 1 * aj2 * gy[96];
                    gjkz = ak2 * (aj2 * gz[512] - 1 * gz[320]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[896];
                    gily = al2 * ai2 * gy[1184];
                    gilz = al2 * (ai2 * gz[1024] - 1 * gz[960]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[960];
                    gjly = al2 * aj2 * gy[1248];
                    gjlz = al2 * (aj2 * gz[1088] - 1 * gz[896]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = ai2 * gy[320];
                    giz = (ai2 * gz[160] - 1 * gz[96]);
                    gjx = aj2 * gx[96];
                    gjy = aj2 * gy[384];
                    gjz = (aj2 * gz[224] - 1 * gz[32]);
                    gkx = ak2 * gx[288];
                    gky = (ak2 * gy[576] - 1 * gy[0]);
                    gkz = ak2 * gz[416];
                    glx = al2 * gx[864];
                    gly = al2 * gy[1152];
                    glz = al2 * gz[992];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[800];
                    Ix = gx[0];
                    Iy = gy[32];
                    Iz = gz[384];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[320];
                    giky = ak2 * (ai2 * gy[352] - 1 * gy[288]);
                    gikz = ak2 * ai2 * gz[704] - 1 * ai2 * gz[128];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[384];
                    gjky = ak2 * aj2 * gy[416];
                    gjkz = ak2 * (aj2 * gz[768] - 1 * gz[576]) - 1 * (aj2 * gz[192] - 1 * gz[0]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[896];
                    gily = al2 * (ai2 * gy[928] - 1 * gy[864]);
                    gilz = al2 * ai2 * gz[1280];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[960];
                    gjly = al2 * aj2 * gy[992];
                    gjlz = al2 * (aj2 * gz[1344] - 1 * gz[1152]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = (ai2 * gy[64] - 1 * gy[0]);
                    giz = ai2 * gz[416];
                    gjx = aj2 * gx[96];
                    gjy = aj2 * gy[128];
                    gjz = (aj2 * gz[480] - 1 * gz[288]);
                    gkx = ak2 * gx[288];
                    gky = ak2 * gy[320];
                    gkz = (ak2 * gz[672] - 1 * gz[96]);
                    glx = al2 * gx[864];
                    gly = al2 * gy[896];
                    glz = al2 * gz[1248];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 2:
                    dd = dd_cache[64];
                    Ix = gx[384];
                    Iy = gy[0];
                    Iz = gz[32];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[704] - 1 * ai2 * gx[128];
                    giky = ak2 * ai2 * gy[320];
                    gikz = ak2 * (ai2 * gz[352] - 1 * gz[288]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[768] - 1 * gx[576]) - 1 * (aj2 * gx[192] - 1 * gx[0]);
                    gjky = ak2 * aj2 * gy[384];
                    gjkz = ak2 * aj2 * gz[416];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1280];
                    gily = al2 * ai2 * gy[896];
                    gilz = al2 * (ai2 * gz[928] - 1 * gz[864]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[1344] - 1 * gx[1152]);
                    gjly = al2 * aj2 * gy[960];
                    gjlz = al2 * aj2 * gz[992];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[416];
                    giy = ai2 * gy[32];
                    giz = (ai2 * gz[64] - 1 * gz[0]);
                    gjx = (aj2 * gx[480] - 1 * gx[288]);
                    gjy = aj2 * gy[96];
                    gjz = aj2 * gz[128];
                    gkx = (ak2 * gx[672] - 1 * gx[96]);
                    gky = ak2 * gy[288];
                    gkz = ak2 * gz[320];
                    glx = al2 * gx[1248];
                    gly = al2 * gy[864];
                    glz = al2 * gz[896];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[320];
                    Ix = gx[96];
                    Iy = gy[320];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[416];
                    giky = ak2 * (ai2 * gy[640] - 1 * gy[576]) - 1 * (ai2 * gy[64] - 1 * gy[0]);
                    gikz = ak2 * ai2 * gz[320];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[480] - 1 * gx[288]);
                    gjky = ak2 * aj2 * gy[704] - 1 * aj2 * gy[128];
                    gjkz = ak2 * aj2 * gz[384];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[992];
                    gily = al2 * (ai2 * gy[1216] - 1 * gy[1152]);
                    gilz = al2 * ai2 * gz[896];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[1056] - 1 * gx[864]);
                    gjly = al2 * aj2 * gy[1280];
                    gjlz = al2 * aj2 * gz[960];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[128];
                    giy = (ai2 * gy[352] - 1 * gy[288]);
                    giz = ai2 * gz[32];
                    gjx = (aj2 * gx[192] - 1 * gx[0]);
                    gjy = aj2 * gy[416];
                    gjz = aj2 * gz[96];
                    gkx = ak2 * gx[384];
                    gky = (ak2 * gy[608] - 1 * gy[32]);
                    gkz = ak2 * gz[288];
                    glx = al2 * gx[960];
                    gly = al2 * gy[1184];
                    glz = al2 * gz[864];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[576];
                    Ix = gx[128];
                    Iy = gy[0];
                    Iz = gz[288];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[448] - 1 * gx[384]);
                    giky = ak2 * ai2 * gy[320];
                    gikz = ak2 * ai2 * gz[608] - 1 * ai2 * gz[32];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[512] - 1 * gx[320]);
                    gjky = ak2 * aj2 * gy[384];
                    gjkz = ak2 * aj2 * gz[672] - 1 * aj2 * gz[96];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[1024] - 1 * gx[960]);
                    gily = al2 * ai2 * gy[896];
                    gilz = al2 * ai2 * gz[1184];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[1088] - 1 * gx[896]);
                    gjly = al2 * aj2 * gy[960];
                    gjlz = al2 * aj2 * gz[1248];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[160] - 1 * gx[96]);
                    giy = ai2 * gy[32];
                    giz = ai2 * gz[320];
                    gjx = (aj2 * gx[224] - 1 * gx[32]);
                    gjy = aj2 * gy[96];
                    gjz = aj2 * gz[384];
                    gkx = ak2 * gx[416];
                    gky = ak2 * gy[288];
                    gkz = (ak2 * gz[576] - 1 * gz[0]);
                    glx = al2 * gx[992];
                    gly = al2 * gy[864];
                    glz = al2 * gz[1152];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[832];
                    Ix = gx[0];
                    Iy = gy[0];
                    Iz = gz[416];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[320];
                    giky = ak2 * ai2 * gy[320];
                    gikz = ak2 * (ai2 * gz[736] - 1 * gz[672]) - 1 * (ai2 * gz[160] - 1 * gz[96]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[384];
                    gjky = ak2 * aj2 * gy[384];
                    gjkz = ak2 * (aj2 * gz[800] - 1 * gz[608]) - 1 * (aj2 * gz[224] - 1 * gz[32]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[896];
                    gily = al2 * ai2 * gy[896];
                    gilz = al2 * (ai2 * gz[1312] - 1 * gz[1248]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[960];
                    gjly = al2 * aj2 * gy[960];
                    gjlz = al2 * (aj2 * gz[1376] - 1 * gz[1184]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = ai2 * gy[32];
                    giz = (ai2 * gz[448] - 1 * gz[384]);
                    gjx = aj2 * gx[96];
                    gjy = aj2 * gy[96];
                    gjz = (aj2 * gz[512] - 1 * gz[320]);
                    gkx = ak2 * gx[288];
                    gky = ak2 * gy[288];
                    gkz = (ak2 * gz[704] - 1 * gz[128]);
                    glx = al2 * gx[864];
                    gly = al2 * gy[864];
                    glz = al2 * gz[1280];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 3:
                    dd = dd_cache[96];
                    Ix = gx[320];
                    Iy = gy[96];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[640] - 1 * gx[576]) - 1 * (ai2 * gx[64] - 1 * gx[0]);
                    giky = ak2 * ai2 * gy[416];
                    gikz = ak2 * ai2 * gz[320];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[704] - 1 * aj2 * gx[128];
                    gjky = ak2 * (aj2 * gy[480] - 1 * gy[288]);
                    gjkz = ak2 * aj2 * gz[384];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[1216] - 1 * gx[1152]);
                    gily = al2 * ai2 * gy[992];
                    gilz = al2 * ai2 * gz[896];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1280];
                    gjly = al2 * (aj2 * gy[1056] - 1 * gy[864]);
                    gjlz = al2 * aj2 * gz[960];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[352] - 1 * gx[288]);
                    giy = ai2 * gy[128];
                    giz = ai2 * gz[32];
                    gjx = aj2 * gx[416];
                    gjy = (aj2 * gy[192] - 1 * gy[0]);
                    gjz = aj2 * gz[96];
                    gkx = (ak2 * gx[608] - 1 * gx[32]);
                    gky = ak2 * gy[384];
                    gkz = ak2 * gz[288];
                    glx = al2 * gx[1184];
                    gly = al2 * gy[960];
                    glz = al2 * gz[864];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[352];
                    Ix = gx[96];
                    Iy = gy[288];
                    Iz = gz[32];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[416];
                    giky = ak2 * ai2 * gy[608] - 1 * ai2 * gy[32];
                    gikz = ak2 * (ai2 * gz[352] - 1 * gz[288]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[480] - 1 * gx[288]);
                    gjky = ak2 * aj2 * gy[672] - 1 * aj2 * gy[96];
                    gjkz = ak2 * aj2 * gz[416];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[992];
                    gily = al2 * ai2 * gy[1184];
                    gilz = al2 * (ai2 * gz[928] - 1 * gz[864]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[1056] - 1 * gx[864]);
                    gjly = al2 * aj2 * gy[1248];
                    gjlz = al2 * aj2 * gz[992];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[128];
                    giy = ai2 * gy[320];
                    giz = (ai2 * gz[64] - 1 * gz[0]);
                    gjx = (aj2 * gx[192] - 1 * gx[0]);
                    gjy = aj2 * gy[384];
                    gjz = aj2 * gz[128];
                    gkx = ak2 * gx[384];
                    gky = (ak2 * gy[576] - 1 * gy[0]);
                    gkz = ak2 * gz[320];
                    glx = al2 * gx[960];
                    gly = al2 * gy[1152];
                    glz = al2 * gz[896];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[608];
                    Ix = gx[96];
                    Iy = gy[32];
                    Iz = gz[288];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[416];
                    giky = ak2 * (ai2 * gy[352] - 1 * gy[288]);
                    gikz = ak2 * ai2 * gz[608] - 1 * ai2 * gz[32];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[480] - 1 * gx[288]);
                    gjky = ak2 * aj2 * gy[416];
                    gjkz = ak2 * aj2 * gz[672] - 1 * aj2 * gz[96];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[992];
                    gily = al2 * (ai2 * gy[928] - 1 * gy[864]);
                    gilz = al2 * ai2 * gz[1184];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[1056] - 1 * gx[864]);
                    gjly = al2 * aj2 * gy[992];
                    gjlz = al2 * aj2 * gz[1248];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[128];
                    giy = (ai2 * gy[64] - 1 * gy[0]);
                    giz = ai2 * gz[320];
                    gjx = (aj2 * gx[192] - 1 * gx[0]);
                    gjy = aj2 * gy[128];
                    gjz = aj2 * gz[384];
                    gkx = ak2 * gx[384];
                    gky = ak2 * gy[320];
                    gkz = (ak2 * gz[576] - 1 * gz[0]);
                    glx = al2 * gx[960];
                    gly = al2 * gy[896];
                    glz = al2 * gz[1152];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 4:
                    dd = dd_cache[128];
                    Ix = gx[288];
                    Iy = gy[128];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[608] - 1 * ai2 * gx[32];
                    giky = ak2 * (ai2 * gy[448] - 1 * gy[384]);
                    gikz = ak2 * ai2 * gz[320];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[672] - 1 * aj2 * gx[96];
                    gjky = ak2 * (aj2 * gy[512] - 1 * gy[320]);
                    gjkz = ak2 * aj2 * gz[384];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1184];
                    gily = al2 * (ai2 * gy[1024] - 1 * gy[960]);
                    gilz = al2 * ai2 * gz[896];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1248];
                    gjly = al2 * (aj2 * gy[1088] - 1 * gy[896]);
                    gjlz = al2 * aj2 * gz[960];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[320];
                    giy = (ai2 * gy[160] - 1 * gy[96]);
                    giz = ai2 * gz[32];
                    gjx = aj2 * gx[384];
                    gjy = (aj2 * gy[224] - 1 * gy[32]);
                    gjz = aj2 * gz[96];
                    gkx = (ak2 * gx[576] - 1 * gx[0]);
                    gky = ak2 * gy[416];
                    gkz = ak2 * gz[288];
                    glx = al2 * gx[1152];
                    gly = al2 * gy[992];
                    glz = al2 * gz[864];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[384];
                    Ix = gx[32];
                    Iy = gy[384];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[352] - 1 * gx[288]);
                    giky = ak2 * ai2 * gy[704] - 1 * ai2 * gy[128];
                    gikz = ak2 * ai2 * gz[320];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[416];
                    gjky = ak2 * (aj2 * gy[768] - 1 * gy[576]) - 1 * (aj2 * gy[192] - 1 * gy[0]);
                    gjkz = ak2 * aj2 * gz[384];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[928] - 1 * gx[864]);
                    gily = al2 * ai2 * gy[1280];
                    gilz = al2 * ai2 * gz[896];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[992];
                    gjly = al2 * (aj2 * gy[1344] - 1 * gy[1152]);
                    gjlz = al2 * aj2 * gz[960];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[64] - 1 * gx[0]);
                    giy = ai2 * gy[416];
                    giz = ai2 * gz[32];
                    gjx = aj2 * gx[128];
                    gjy = (aj2 * gy[480] - 1 * gy[288]);
                    gjz = aj2 * gz[96];
                    gkx = ak2 * gx[320];
                    gky = (ak2 * gy[672] - 1 * gy[96]);
                    gkz = ak2 * gz[288];
                    glx = al2 * gx[896];
                    gly = al2 * gy[1248];
                    glz = al2 * gz[864];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[640];
                    Ix = gx[96];
                    Iy = gy[0];
                    Iz = gz[320];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[416];
                    giky = ak2 * ai2 * gy[320];
                    gikz = ak2 * (ai2 * gz[640] - 1 * gz[576]) - 1 * (ai2 * gz[64] - 1 * gz[0]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[480] - 1 * gx[288]);
                    gjky = ak2 * aj2 * gy[384];
                    gjkz = ak2 * aj2 * gz[704] - 1 * aj2 * gz[128];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[992];
                    gily = al2 * ai2 * gy[896];
                    gilz = al2 * (ai2 * gz[1216] - 1 * gz[1152]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[1056] - 1 * gx[864]);
                    gjly = al2 * aj2 * gy[960];
                    gjlz = al2 * aj2 * gz[1280];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[128];
                    giy = ai2 * gy[32];
                    giz = (ai2 * gz[352] - 1 * gz[288]);
                    gjx = (aj2 * gx[192] - 1 * gx[0]);
                    gjy = aj2 * gy[96];
                    gjz = aj2 * gz[416];
                    gkx = ak2 * gx[384];
                    gky = ak2 * gy[288];
                    gkz = (ak2 * gz[608] - 1 * gz[32]);
                    glx = al2 * gx[960];
                    gly = al2 * gy[864];
                    glz = al2 * gz[1184];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 5:
                    dd = dd_cache[160];
                    Ix = gx[288];
                    Iy = gy[96];
                    Iz = gz[32];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[608] - 1 * ai2 * gx[32];
                    giky = ak2 * ai2 * gy[416];
                    gikz = ak2 * (ai2 * gz[352] - 1 * gz[288]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[672] - 1 * aj2 * gx[96];
                    gjky = ak2 * (aj2 * gy[480] - 1 * gy[288]);
                    gjkz = ak2 * aj2 * gz[416];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1184];
                    gily = al2 * ai2 * gy[992];
                    gilz = al2 * (ai2 * gz[928] - 1 * gz[864]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1248];
                    gjly = al2 * (aj2 * gy[1056] - 1 * gy[864]);
                    gjlz = al2 * aj2 * gz[992];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[320];
                    giy = ai2 * gy[128];
                    giz = (ai2 * gz[64] - 1 * gz[0]);
                    gjx = aj2 * gx[384];
                    gjy = (aj2 * gy[192] - 1 * gy[0]);
                    gjz = aj2 * gz[128];
                    gkx = (ak2 * gx[576] - 1 * gx[0]);
                    gky = ak2 * gy[384];
                    gkz = ak2 * gz[320];
                    glx = al2 * gx[1152];
                    gly = al2 * gy[960];
                    glz = al2 * gz[896];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[416];
                    Ix = gx[0];
                    Iy = gy[416];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[320];
                    giky = ak2 * (ai2 * gy[736] - 1 * gy[672]) - 1 * (ai2 * gy[160] - 1 * gy[96]);
                    gikz = ak2 * ai2 * gz[320];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[384];
                    gjky = ak2 * (aj2 * gy[800] - 1 * gy[608]) - 1 * (aj2 * gy[224] - 1 * gy[32]);
                    gjkz = ak2 * aj2 * gz[384];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[896];
                    gily = al2 * (ai2 * gy[1312] - 1 * gy[1248]);
                    gilz = al2 * ai2 * gz[896];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[960];
                    gjly = al2 * (aj2 * gy[1376] - 1 * gy[1184]);
                    gjlz = al2 * aj2 * gz[960];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = (ai2 * gy[448] - 1 * gy[384]);
                    giz = ai2 * gz[32];
                    gjx = aj2 * gx[96];
                    gjy = (aj2 * gy[512] - 1 * gy[320]);
                    gjz = aj2 * gz[96];
                    gkx = ak2 * gx[288];
                    gky = (ak2 * gy[704] - 1 * gy[128]);
                    gkz = ak2 * gz[288];
                    glx = al2 * gx[864];
                    gly = al2 * gy[1280];
                    glz = al2 * gz[864];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[672];
                    Ix = gx[32];
                    Iy = gy[96];
                    Iz = gz[288];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[352] - 1 * gx[288]);
                    giky = ak2 * ai2 * gy[416];
                    gikz = ak2 * ai2 * gz[608] - 1 * ai2 * gz[32];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[416];
                    gjky = ak2 * (aj2 * gy[480] - 1 * gy[288]);
                    gjkz = ak2 * aj2 * gz[672] - 1 * aj2 * gz[96];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[928] - 1 * gx[864]);
                    gily = al2 * ai2 * gy[992];
                    gilz = al2 * ai2 * gz[1184];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[992];
                    gjly = al2 * (aj2 * gy[1056] - 1 * gy[864]);
                    gjlz = al2 * aj2 * gz[1248];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[64] - 1 * gx[0]);
                    giy = ai2 * gy[128];
                    giz = ai2 * gz[320];
                    gjx = aj2 * gx[128];
                    gjy = (aj2 * gy[192] - 1 * gy[0]);
                    gjz = aj2 * gz[384];
                    gkx = ak2 * gx[320];
                    gky = ak2 * gy[384];
                    gkz = (ak2 * gz[576] - 1 * gz[0]);
                    glx = al2 * gx[896];
                    gly = al2 * gy[960];
                    glz = al2 * gz[1152];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 6:
                    dd = dd_cache[192];
                    Ix = gx[320];
                    Iy = gy[0];
                    Iz = gz[96];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[640] - 1 * gx[576]) - 1 * (ai2 * gx[64] - 1 * gx[0]);
                    giky = ak2 * ai2 * gy[320];
                    gikz = ak2 * ai2 * gz[416];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[704] - 1 * aj2 * gx[128];
                    gjky = ak2 * aj2 * gy[384];
                    gjkz = ak2 * (aj2 * gz[480] - 1 * gz[288]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[1216] - 1 * gx[1152]);
                    gily = al2 * ai2 * gy[896];
                    gilz = al2 * ai2 * gz[992];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1280];
                    gjly = al2 * aj2 * gy[960];
                    gjlz = al2 * (aj2 * gz[1056] - 1 * gz[864]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[352] - 1 * gx[288]);
                    giy = ai2 * gy[32];
                    giz = ai2 * gz[128];
                    gjx = aj2 * gx[416];
                    gjy = aj2 * gy[96];
                    gjz = (aj2 * gz[192] - 1 * gz[0]);
                    gkx = (ak2 * gx[608] - 1 * gx[32]);
                    gky = ak2 * gy[288];
                    gkz = ak2 * gz[384];
                    glx = al2 * gx[1184];
                    gly = al2 * gy[864];
                    glz = al2 * gz[960];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[448];
                    Ix = gx[0];
                    Iy = gy[384];
                    Iz = gz[32];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[320];
                    giky = ak2 * ai2 * gy[704] - 1 * ai2 * gy[128];
                    gikz = ak2 * (ai2 * gz[352] - 1 * gz[288]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[384];
                    gjky = ak2 * (aj2 * gy[768] - 1 * gy[576]) - 1 * (aj2 * gy[192] - 1 * gy[0]);
                    gjkz = ak2 * aj2 * gz[416];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[896];
                    gily = al2 * ai2 * gy[1280];
                    gilz = al2 * (ai2 * gz[928] - 1 * gz[864]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[960];
                    gjly = al2 * (aj2 * gy[1344] - 1 * gy[1152]);
                    gjlz = al2 * aj2 * gz[992];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = ai2 * gy[416];
                    giz = (ai2 * gz[64] - 1 * gz[0]);
                    gjx = aj2 * gx[96];
                    gjy = (aj2 * gy[480] - 1 * gy[288]);
                    gjz = aj2 * gz[128];
                    gkx = ak2 * gx[288];
                    gky = (ak2 * gy[672] - 1 * gy[96]);
                    gkz = ak2 * gz[320];
                    glx = al2 * gx[864];
                    gly = al2 * gy[1248];
                    glz = al2 * gz[896];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[704];
                    Ix = gx[0];
                    Iy = gy[128];
                    Iz = gz[288];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[320];
                    giky = ak2 * (ai2 * gy[448] - 1 * gy[384]);
                    gikz = ak2 * ai2 * gz[608] - 1 * ai2 * gz[32];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[384];
                    gjky = ak2 * (aj2 * gy[512] - 1 * gy[320]);
                    gjkz = ak2 * aj2 * gz[672] - 1 * aj2 * gz[96];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[896];
                    gily = al2 * (ai2 * gy[1024] - 1 * gy[960]);
                    gilz = al2 * ai2 * gz[1184];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[960];
                    gjly = al2 * (aj2 * gy[1088] - 1 * gy[896]);
                    gjlz = al2 * aj2 * gz[1248];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = (ai2 * gy[160] - 1 * gy[96]);
                    giz = ai2 * gz[320];
                    gjx = aj2 * gx[96];
                    gjy = (aj2 * gy[224] - 1 * gy[32]);
                    gjz = aj2 * gz[384];
                    gkx = ak2 * gx[288];
                    gky = ak2 * gy[416];
                    gkz = (ak2 * gz[576] - 1 * gz[0]);
                    glx = al2 * gx[864];
                    gly = al2 * gy[992];
                    glz = al2 * gz[1152];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 7:
                    dd = dd_cache[224];
                    Ix = gx[288];
                    Iy = gy[32];
                    Iz = gz[96];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[608] - 1 * ai2 * gx[32];
                    giky = ak2 * (ai2 * gy[352] - 1 * gy[288]);
                    gikz = ak2 * ai2 * gz[416];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[672] - 1 * aj2 * gx[96];
                    gjky = ak2 * aj2 * gy[416];
                    gjkz = ak2 * (aj2 * gz[480] - 1 * gz[288]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1184];
                    gily = al2 * (ai2 * gy[928] - 1 * gy[864]);
                    gilz = al2 * ai2 * gz[992];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1248];
                    gjly = al2 * aj2 * gy[992];
                    gjlz = al2 * (aj2 * gz[1056] - 1 * gz[864]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[320];
                    giy = (ai2 * gy[64] - 1 * gy[0]);
                    giz = ai2 * gz[128];
                    gjx = aj2 * gx[384];
                    gjy = aj2 * gy[128];
                    gjz = (aj2 * gz[192] - 1 * gz[0]);
                    gkx = (ak2 * gx[576] - 1 * gx[0]);
                    gky = ak2 * gy[320];
                    gkz = ak2 * gz[384];
                    glx = al2 * gx[1152];
                    gly = al2 * gy[896];
                    glz = al2 * gz[960];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[480];
                    Ix = gx[32];
                    Iy = gy[288];
                    Iz = gz[96];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[352] - 1 * gx[288]);
                    giky = ak2 * ai2 * gy[608] - 1 * ai2 * gy[32];
                    gikz = ak2 * ai2 * gz[416];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[416];
                    gjky = ak2 * aj2 * gy[672] - 1 * aj2 * gy[96];
                    gjkz = ak2 * (aj2 * gz[480] - 1 * gz[288]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[928] - 1 * gx[864]);
                    gily = al2 * ai2 * gy[1184];
                    gilz = al2 * ai2 * gz[992];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[992];
                    gjly = al2 * aj2 * gy[1248];
                    gjlz = al2 * (aj2 * gz[1056] - 1 * gz[864]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[64] - 1 * gx[0]);
                    giy = ai2 * gy[320];
                    giz = ai2 * gz[128];
                    gjx = aj2 * gx[128];
                    gjy = aj2 * gy[384];
                    gjz = (aj2 * gz[192] - 1 * gz[0]);
                    gkx = ak2 * gx[320];
                    gky = (ak2 * gy[576] - 1 * gy[0]);
                    gkz = ak2 * gz[384];
                    glx = al2 * gx[896];
                    gly = al2 * gy[1152];
                    glz = al2 * gz[960];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[736];
                    Ix = gx[0];
                    Iy = gy[96];
                    Iz = gz[320];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[320];
                    giky = ak2 * ai2 * gy[416];
                    gikz = ak2 * (ai2 * gz[640] - 1 * gz[576]) - 1 * (ai2 * gz[64] - 1 * gz[0]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[384];
                    gjky = ak2 * (aj2 * gy[480] - 1 * gy[288]);
                    gjkz = ak2 * aj2 * gz[704] - 1 * aj2 * gz[128];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[896];
                    gily = al2 * ai2 * gy[992];
                    gilz = al2 * (ai2 * gz[1216] - 1 * gz[1152]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[960];
                    gjly = al2 * (aj2 * gy[1056] - 1 * gy[864]);
                    gjlz = al2 * aj2 * gz[1280];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[32];
                    giy = ai2 * gy[128];
                    giz = (ai2 * gz[352] - 1 * gz[288]);
                    gjx = aj2 * gx[96];
                    gjy = (aj2 * gy[192] - 1 * gy[0]);
                    gjz = aj2 * gz[416];
                    gkx = ak2 * gx[288];
                    gky = ak2 * gy[384];
                    gkz = (ak2 * gz[608] - 1 * gz[32]);
                    glx = al2 * gx[864];
                    gly = al2 * gy[960];
                    glz = al2 * gz[1184];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            continue;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        int natm = envs.natm;
        double *ejk = jk.ejk;
        atomicAdd(ejk + (ia*natm+ka)*9 + 0, v_ixkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 1, v_ixky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 2, v_ixkz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 3, v_iykx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 4, v_iyky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 5, v_iykz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 6, v_izkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 7, v_izky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 8, v_izkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 0, v_jxkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 1, v_jxky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 2, v_jxkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 3, v_jykx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 4, v_jyky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 5, v_jykz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 6, v_jzkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 7, v_jzky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 8, v_jzkz);
        atomicAdd(ejk + (ia*natm+la)*9 + 0, v_ixlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 1, v_ixly);
        atomicAdd(ejk + (ia*natm+la)*9 + 2, v_ixlz);
        atomicAdd(ejk + (ia*natm+la)*9 + 3, v_iylx);
        atomicAdd(ejk + (ia*natm+la)*9 + 4, v_iyly);
        atomicAdd(ejk + (ia*natm+la)*9 + 5, v_iylz);
        atomicAdd(ejk + (ia*natm+la)*9 + 6, v_izlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 7, v_izly);
        atomicAdd(ejk + (ia*natm+la)*9 + 8, v_izlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 0, v_jxlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 1, v_jxly);
        atomicAdd(ejk + (ja*natm+la)*9 + 2, v_jxlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 3, v_jylx);
        atomicAdd(ejk + (ja*natm+la)*9 + 4, v_jyly);
        atomicAdd(ejk + (ja*natm+la)*9 + 5, v_jylz);
        atomicAdd(ejk + (ja*natm+la)*9 + 6, v_jzlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 7, v_jzly);
        atomicAdd(ejk + (ja*natm+la)*9 + 8, v_jzlz);
    }
}
__global__
void rys_ejk_ip2_type3_1110(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *pool, double *dd_pool, uint32_t *batch_head)
{
    int b_id = blockIdx.x;
    int t_id = threadIdx.x + blockDim.x * threadIdx.y;
    ShellQuartet *shl_quartet_idx = pool + b_id * QUEUE_DEPTH;

    double *dd_cache = dd_pool + b_id * 864;

    __shared__ int batch_id;
    if (t_id == 0) {
        batch_id = atomicAdd(batch_head, 1);
    }
    __syncthreads();
    int nbatches_kl = (bounds.ntile_kl_pairs + TILES_IN_BATCH - 1) / TILES_IN_BATCH;
    int nbatches = bounds.ntile_ij_pairs * nbatches_kl;
    while (batch_id < nbatches) {
        int batch_ij = batch_id / nbatches_kl;
        int batch_kl = batch_id % nbatches_kl;
        int nbas = envs.nbas;
        double *env = envs.env;
        double omega = env[PTR_RANGE_OMEGA];
        int ntasks;
        if (omega >= 0) {
            ntasks = _fill_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                     batch_ij, batch_kl);
        } else {
            ntasks = _fill_sr_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                        batch_ij, batch_kl);
        }
        if (ntasks > 0) {
            int tile_ij = bounds.tile_ij_mapping[batch_ij];
            int nbas_tiles = nbas / TILE;
            int tile_i = tile_ij / nbas_tiles;
            int tile_j = tile_ij % nbas_tiles;
            int ish0 = tile_i * TILE;
            int jsh0 = tile_j * TILE;
            _rys_ejk_ip2_type3_1110(envs, jk, bounds, shl_quartet_idx, dd_cache,
                             ntasks, ish0, jsh0);
        }
        if (t_id == 0) {
            batch_id = atomicAdd(batch_head, 1);
            atomicAdd(batch_head+1, ntasks);
        }
        __syncthreads();
    }
}

__device__ static
void _rys_ejk_ip2_type3_1111(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *shl_quartet_idx, double *dd_cache,
                int ntasks, int ish0, int jsh0)
{
    int sq_id = threadIdx.x;
    int nsq_per_block = blockDim.x;
    int gout_id = threadIdx.y;
    int gout_stride = blockDim.y;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int *ao_loc = envs.ao_loc;
    int nbas = envs.nbas;
    int nao = ao_loc[nbas];
    int *bas = envs.bas;
    double *env = envs.env;
    double omega = env[PTR_RANGE_OMEGA];
    double *dm = jk.dm;
    extern __shared__ double cicj_cache[];
    double *rw = cicj_cache + iprim*jprim*TILE2 + sq_id;
    double *gx = rw + 32 * bounds.nroots;
    double *gy = gx + 1296;
    double *gz = gy + 1296;
    if (gout_id == 0) {
        gx[0] = 1.;
        gy[0] = 1.;
    }
    double s0, s1, s2;
    double Rpq[3];
    dd_cache += sq_id;
    int thread_id = nsq_per_block * gout_id + sq_id;
    int threads = nsq_per_block * gout_stride;
    for (int n = thread_id; n < iprim*jprim*TILE2; n += threads) {
        int ijp = n / TILE2;
        int sh_ij = n % TILE2;
        int ish = ish0 + sh_ij / TILE;
        int jsh = jsh0 + sh_ij % TILE;
        int ip = ijp / jprim;
        int jp = ijp % jprim;
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
        double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double theta_ij = ai * aj / aij;
        double Kab = exp(-theta_ij * (xjxi*xjxi+yjyi*yjyi+zjzi*zjzi));
        cicj_cache[n] = ci[ip] * cj[jp] * Kab;
    }

    for (int task0 = 0; task0 < ntasks; task0 += nsq_per_block) {
        __syncthreads();
        int task_id = task0 + sq_id;
        double fac_sym = PI_FAC;
        ShellQuartet sq;
        if (task_id >= ntasks) {
            // To avoid __syncthreads blocking blocking idle warps, all remaining
            // threads compute a valid shell quartet with zero normalization factor
            sq = shl_quartet_idx[0];
            fac_sym = 0.;
        } else {
            sq = shl_quartet_idx[task_id];
        }
        int ish = sq.i;
        int jsh = sq.j;
        int ksh = sq.k;
        int lsh = sq.l;
        int sh_ij = (ish % TILE) * TILE + (jsh % TILE);
        if (ish == jsh) fac_sym *= .5;
        if (ksh == lsh) fac_sym *= .5;
        if (ish*nbas+jsh == ksh*nbas+lsh) fac_sym *= .5;
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *ri = env + bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        double *rj = env + bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xjxi = rj[0] - ri[0];
        double yjyi = rj[1] - ri[1];
        double zjzi = rj[2] - ri[2];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double dd;
        double Ix, Iy, Iz, prod_xy, prod_xz, prod_yz;
        double gix, giy, giz;
        double gjx, gjy, gjz;
        double gkx, gky, gkz;
        double glx, gly, glz;
        double gikx, giky, gikz;
        double gjkx, gjky, gjkz;
        double gilx, gily, gilz;
        double gjlx, gjly, gjlz;
        double v_ixkx = 0;
        double v_ixky = 0;
        double v_ixkz = 0;
        double v_iykx = 0;
        double v_iyky = 0;
        double v_iykz = 0;
        double v_izkx = 0;
        double v_izky = 0;
        double v_izkz = 0;
        double v_jxkx = 0;
        double v_jxky = 0;
        double v_jxkz = 0;
        double v_jykx = 0;
        double v_jyky = 0;
        double v_jykz = 0;
        double v_jzkx = 0;
        double v_jzky = 0;
        double v_jzkz = 0;
        double v_ixlx = 0;
        double v_ixly = 0;
        double v_ixlz = 0;
        double v_iylx = 0;
        double v_iyly = 0;
        double v_iylz = 0;
        double v_izlx = 0;
        double v_izly = 0;
        double v_izlz = 0;
        double v_jxlx = 0;
        double v_jxly = 0;
        double v_jxlz = 0;
        double v_jylx = 0;
        double v_jyly = 0;
        double v_jylz = 0;
        double v_jzlx = 0;
        double v_jzly = 0;
        double v_jzlz = 0;
        int do_j = jk.j_factor != 0.;
        int do_k = jk.k_factor != 0.;
        if (jk.n_dm == 1) {
            for (int n = gout_id; n < 81; n+=gout_stride) {
                int kl = n / 9;
                int ij = n % 9;
                int i = ij % 3;
                int j = ij / 3;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm[_jk] * dm[_il] + dm[_jl] * dm[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * dm[_ji] * dm[_lk];
                }
                dd_cache[n*nsq_per_block] = dd;
            }
        } else {
            double *dmb = dm + nao * nao;
            for (int n = gout_id; n < 81; n+=gout_stride) {
                int kl = n / 9;
                int ij = n % 9;
                int i = ij % 3;
                int j = ij / 3;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm [_jk] * dm [_il] + dm [_jl] * dm [_ik] +
                                         dmb[_jk] * dmb[_il] + dmb[_jl] * dmb[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * (dm[_ji] + dm[_ji]) * (dmb[_lk] + dmb[_lk]);
                }
                dd_cache[n*nsq_per_block] = dd;
            }
        }
        
        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = fac_sym * ck[kp] * cl[lp] * Kcd;
            double xqc = xlxk * al_akl;
            double yqc = ylyk * al_akl;
            double zqc = zlzk * al_akl;
            double xkl = rk[0] + xqc;
            double ykl = rk[1] + yqc;
            double zkl = rk[2] + zqc;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[sh_ij+ijp*TILE2];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = xjxi * aj_aij;
                double ypa = yjyi * aj_aij;
                double zpa = zjzi * aj_aij;
                double xij = ri[0] + xpa; // (ai*xi+aj*xj)/aij
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                Rpq[0] = xpq;
                Rpq[1] = ypq;
                Rpq[2] = zpq;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                double theta_rr = theta * rr;
                __syncthreads();
                if (omega == 0) {
                    rys_roots(4, theta_rr, rw, 16, gout_id, gout_stride);
                    __syncthreads();
                    for (int irys = gout_id; irys < 4; irys += gout_stride) {
                        rw[(irys*2+1)*16] *= fac;
                    }
                } else if (omega > 0) {
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(4, theta_fac*theta_rr, rw, 16, gout_id, gout_stride);
                    __syncthreads();
                    double sqrt_theta_fac = sqrt(theta_fac) * fac;
                    for (int irys = gout_id; irys < 4; irys += gout_stride) {
                        rw[ irys*2   *16] *= theta_fac;
                        rw[(irys*2+1)*16] *= sqrt_theta_fac;
                    }
                } else {
                    double *rw1 = rw + 8*16;
                    rys_roots(4, theta_rr, rw1, 16, gout_id, gout_stride);
                    double theta_fac = omega * omega / (omega * omega + theta);
                    rys_roots(4, theta_fac*theta_rr, rw, 16, gout_id, gout_stride);
                    __syncthreads();
                    double sqrt_theta_fac = -sqrt(theta_fac) * fac;
                    for (int irys = gout_id; irys < 4; irys += gout_stride) {
                        rw[ irys*2   *16] *= theta_fac;
                        rw[(irys*2+1)*16] *= sqrt_theta_fac;
                        rw1[(irys*2+1)*16] *= fac;
                    }
                }
                for (int irys = 0; irys < bounds.nroots; ++irys) {
                    __syncthreads();
                    double rt = rw[irys*32];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double rt_akl = rt_aa * aij;
                    double b00 = .5 * rt_aa;
                    double b10 = .5/aij * (1 - rt_aij);
                    double b01 = .5/akl * (1 - rt_akl);
                    for (int n = gout_id; n < 3; n += 16) {
                        if (n == 2) {
                            gz[0] = rw[irys*32+16];
                        }
                        double *_gx = gx + n * 1296;
                        double xjxi = rj[n] - ri[n];
                        double Rpa = xjxi * aj_aij;
                        double c0x = Rpa - rt_aij * Rpq[n];
                        s0 = _gx[0];
                        s1 = c0x * s0;
                        _gx[16] = s1;
                        s2 = c0x * s1 + 1 * b10 * s0;
                        _gx[32] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 2 * b10 * s0;
                        _gx[48] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 3 * b10 * s0;
                        _gx[64] = s2;
                        double xlxk = rl[n] - rk[n];
                        double Rqc = xlxk * al_akl;
                        double cpx = Rqc + rt_akl * Rpq[n];
                        s0 = _gx[0];
                        s1 = cpx * s0;
                        _gx[144] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        _gx[288] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        _gx[432] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 3 * b01 *s0;
                        _gx[576] = s2;
                        s0 = _gx[16];
                        s1 = cpx * s0;
                        s1 += 1 * b00 * _gx[0];
                        _gx[160] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 1 * b00 * _gx[144];
                        _gx[304] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 1 * b00 * _gx[288];
                        _gx[448] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 3 * b01 *s0;
                        s2 += 1 * b00 * _gx[432];
                        _gx[592] = s2;
                        s0 = _gx[32];
                        s1 = cpx * s0;
                        s1 += 2 * b00 * _gx[16];
                        _gx[176] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 2 * b00 * _gx[160];
                        _gx[320] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 2 * b00 * _gx[304];
                        _gx[464] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 3 * b01 *s0;
                        s2 += 2 * b00 * _gx[448];
                        _gx[608] = s2;
                        s0 = _gx[48];
                        s1 = cpx * s0;
                        s1 += 3 * b00 * _gx[32];
                        _gx[192] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 3 * b00 * _gx[176];
                        _gx[336] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 3 * b00 * _gx[320];
                        _gx[480] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 3 * b01 *s0;
                        s2 += 3 * b00 * _gx[464];
                        _gx[624] = s2;
                        s0 = _gx[64];
                        s1 = cpx * s0;
                        s1 += 4 * b00 * _gx[48];
                        _gx[208] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 4 * b00 * _gx[192];
                        _gx[352] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 4 * b00 * _gx[336];
                        _gx[496] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 3 * b01 *s0;
                        s2 += 4 * b00 * _gx[480];
                        _gx[640] = s2;
                        s1 = _gx[64];
                        s0 = _gx[48];
                        _gx[96] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[80] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[16];
                        _gx[64] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[48] = s1 - xjxi * s0;
                        s1 = _gx[96];
                        s0 = _gx[80];
                        _gx[128] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[64];
                        _gx[112] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[48];
                        _gx[96] = s1 - xjxi * s0;
                        s1 = _gx[208];
                        s0 = _gx[192];
                        _gx[240] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[176];
                        _gx[224] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[160];
                        _gx[208] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[144];
                        _gx[192] = s1 - xjxi * s0;
                        s1 = _gx[240];
                        s0 = _gx[224];
                        _gx[272] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[208];
                        _gx[256] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[192];
                        _gx[240] = s1 - xjxi * s0;
                        s1 = _gx[352];
                        s0 = _gx[336];
                        _gx[384] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[320];
                        _gx[368] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[304];
                        _gx[352] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[288];
                        _gx[336] = s1 - xjxi * s0;
                        s1 = _gx[384];
                        s0 = _gx[368];
                        _gx[416] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[352];
                        _gx[400] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[336];
                        _gx[384] = s1 - xjxi * s0;
                        s1 = _gx[496];
                        s0 = _gx[480];
                        _gx[528] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[464];
                        _gx[512] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[448];
                        _gx[496] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[432];
                        _gx[480] = s1 - xjxi * s0;
                        s1 = _gx[528];
                        s0 = _gx[512];
                        _gx[560] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[496];
                        _gx[544] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[480];
                        _gx[528] = s1 - xjxi * s0;
                        s1 = _gx[640];
                        s0 = _gx[624];
                        _gx[672] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[608];
                        _gx[656] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[592];
                        _gx[640] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[576];
                        _gx[624] = s1 - xjxi * s0;
                        s1 = _gx[672];
                        s0 = _gx[656];
                        _gx[704] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[640];
                        _gx[688] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[624];
                        _gx[672] = s1 - xjxi * s0;
                        s1 = _gx[576];
                        s0 = _gx[432];
                        _gx[864] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[288];
                        _gx[720] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[144];
                        _gx[576] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[432] = s1 - xlxk * s0;
                        s1 = _gx[864];
                        s0 = _gx[720];
                        _gx[1152] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[576];
                        _gx[1008] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[432];
                        _gx[864] = s1 - xlxk * s0;
                        s1 = _gx[592];
                        s0 = _gx[448];
                        _gx[880] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[304];
                        _gx[736] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[160];
                        _gx[592] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[16];
                        _gx[448] = s1 - xlxk * s0;
                        s1 = _gx[880];
                        s0 = _gx[736];
                        _gx[1168] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[592];
                        _gx[1024] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[448];
                        _gx[880] = s1 - xlxk * s0;
                        s1 = _gx[608];
                        s0 = _gx[464];
                        _gx[896] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[320];
                        _gx[752] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[176];
                        _gx[608] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[464] = s1 - xlxk * s0;
                        s1 = _gx[896];
                        s0 = _gx[752];
                        _gx[1184] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[608];
                        _gx[1040] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[464];
                        _gx[896] = s1 - xlxk * s0;
                        s1 = _gx[624];
                        s0 = _gx[480];
                        _gx[912] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[336];
                        _gx[768] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[192];
                        _gx[624] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[48];
                        _gx[480] = s1 - xlxk * s0;
                        s1 = _gx[912];
                        s0 = _gx[768];
                        _gx[1200] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[624];
                        _gx[1056] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[480];
                        _gx[912] = s1 - xlxk * s0;
                        s1 = _gx[640];
                        s0 = _gx[496];
                        _gx[928] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[352];
                        _gx[784] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[208];
                        _gx[640] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[64];
                        _gx[496] = s1 - xlxk * s0;
                        s1 = _gx[928];
                        s0 = _gx[784];
                        _gx[1216] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[640];
                        _gx[1072] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[496];
                        _gx[928] = s1 - xlxk * s0;
                        s1 = _gx[656];
                        s0 = _gx[512];
                        _gx[944] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[368];
                        _gx[800] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[224];
                        _gx[656] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[80];
                        _gx[512] = s1 - xlxk * s0;
                        s1 = _gx[944];
                        s0 = _gx[800];
                        _gx[1232] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[656];
                        _gx[1088] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[512];
                        _gx[944] = s1 - xlxk * s0;
                        s1 = _gx[672];
                        s0 = _gx[528];
                        _gx[960] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[384];
                        _gx[816] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[240];
                        _gx[672] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[96];
                        _gx[528] = s1 - xlxk * s0;
                        s1 = _gx[960];
                        s0 = _gx[816];
                        _gx[1248] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[672];
                        _gx[1104] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[528];
                        _gx[960] = s1 - xlxk * s0;
                        s1 = _gx[688];
                        s0 = _gx[544];
                        _gx[976] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[400];
                        _gx[832] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[256];
                        _gx[688] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[112];
                        _gx[544] = s1 - xlxk * s0;
                        s1 = _gx[976];
                        s0 = _gx[832];
                        _gx[1264] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[688];
                        _gx[1120] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[544];
                        _gx[976] = s1 - xlxk * s0;
                        s1 = _gx[704];
                        s0 = _gx[560];
                        _gx[992] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[416];
                        _gx[848] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[272];
                        _gx[704] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[128];
                        _gx[560] = s1 - xlxk * s0;
                        s1 = _gx[992];
                        s0 = _gx[848];
                        _gx[1280] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[704];
                        _gx[1136] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[560];
                        _gx[992] = s1 - xlxk * s0;
                    }
                    __syncthreads();
                    switch (gout_id) {
                    case 0:
                    dd = dd_cache[0];
                    Ix = gx[640];
                    Iy = gy[0];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[800] - 1 * gx[768]) - 1 * (ai2 * gx[512] - 1 * gx[480]);
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[832] - 1 * gx[736]) - 1 * (aj2 * gx[544] - 1 * gx[448]);
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[1088] - 1 * gx[1056]) - 1 * (ai2 * gx[224] - 1 * gx[192]);
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[1120] - 1 * gx[1024]) - 1 * (aj2 * gx[256] - 1 * gx[160]);
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[656] - 1 * gx[624]);
                    giy = ai2 * gy[16];
                    giz = ai2 * gz[16];
                    gjx = (aj2 * gx[688] - 1 * gx[592]);
                    gjy = aj2 * gy[48];
                    gjz = aj2 * gz[48];
                    gkx = (ak2 * gx[784] - 1 * gx[496]);
                    gky = ak2 * gy[144];
                    gkz = ak2 * gz[144];
                    glx = (al2 * gx[1072] - 1 * gx[208]);
                    gly = al2 * gy[432];
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[256];
                    Ix = gx[432];
                    Iy = gy[160];
                    Iz = gz[48];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[592];
                    giky = ak2 * (ai2 * gy[320] - 1 * gy[288]) - 1 * (ai2 * gy[32] - 1 * gy[0]);
                    gikz = ak2 * ai2 * gz[208];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[624];
                    gjky = ak2 * aj2 * gy[352] - 1 * aj2 * gy[64];
                    gjkz = ak2 * (aj2 * gz[240] - 1 * gz[144]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[880] - 1 * ai2 * gx[16];
                    gily = al2 * (ai2 * gy[608] - 1 * gy[576]);
                    gilz = al2 * ai2 * gz[496];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[912] - 1 * aj2 * gx[48];
                    gjly = al2 * aj2 * gy[640];
                    gjlz = al2 * (aj2 * gz[528] - 1 * gz[432]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[448];
                    giy = (ai2 * gy[176] - 1 * gy[144]);
                    giz = ai2 * gz[64];
                    gjx = aj2 * gx[480];
                    gjy = aj2 * gy[208];
                    gjz = (aj2 * gz[96] - 1 * gz[0]);
                    gkx = ak2 * gx[576];
                    gky = (ak2 * gy[304] - 1 * gy[16]);
                    gkz = ak2 * gz[192];
                    glx = (al2 * gx[864] - 1 * gx[0]);
                    gly = al2 * gy[592];
                    glz = al2 * gz[480];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[512];
                    Ix = gx[144];
                    Iy = gy[480];
                    Iz = gz[16];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[304] - 1 * ai2 * gx[16];
                    giky = ak2 * ai2 * gy[640];
                    gikz = ak2 * (ai2 * gz[176] - 1 * gz[144]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[336] - 1 * aj2 * gx[48];
                    gjky = ak2 * (aj2 * gy[672] - 1 * gy[576]);
                    gjkz = ak2 * aj2 * gz[208];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[592];
                    gily = al2 * ai2 * gy[928] - 1 * ai2 * gy[64];
                    gilz = al2 * (ai2 * gz[464] - 1 * gz[432]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[624];
                    gjly = al2 * (aj2 * gy[960] - 1 * gy[864]) - 1 * (aj2 * gy[96] - 1 * gy[0]);
                    gjlz = al2 * aj2 * gz[496];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[160];
                    giy = ai2 * gy[496];
                    giz = (ai2 * gz[32] - 1 * gz[0]);
                    gjx = aj2 * gx[192];
                    gjy = (aj2 * gy[528] - 1 * gy[432]);
                    gjz = aj2 * gz[64];
                    gkx = (ak2 * gx[288] - 1 * gx[0]);
                    gky = ak2 * gy[624];
                    gkz = ak2 * gz[160];
                    glx = al2 * gx[576];
                    gly = (al2 * gy[912] - 1 * gy[48]);
                    glz = al2 * gz[448];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[768];
                    Ix = gx[16];
                    Iy = gy[480];
                    Iz = gz[144];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[176] - 1 * gx[144]);
                    giky = ak2 * ai2 * gy[640];
                    gikz = ak2 * ai2 * gz[304] - 1 * ai2 * gz[16];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[208];
                    gjky = ak2 * (aj2 * gy[672] - 1 * gy[576]);
                    gjkz = ak2 * aj2 * gz[336] - 1 * aj2 * gz[48];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[464] - 1 * gx[432]);
                    gily = al2 * ai2 * gy[928] - 1 * ai2 * gy[64];
                    gilz = al2 * ai2 * gz[592];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[496];
                    gjly = al2 * (aj2 * gy[960] - 1 * gy[864]) - 1 * (aj2 * gy[96] - 1 * gy[0]);
                    gjlz = al2 * aj2 * gz[624];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[32] - 1 * gx[0]);
                    giy = ai2 * gy[496];
                    giz = ai2 * gz[160];
                    gjx = aj2 * gx[64];
                    gjy = (aj2 * gy[528] - 1 * gy[432]);
                    gjz = aj2 * gz[192];
                    gkx = ak2 * gx[160];
                    gky = ak2 * gy[624];
                    gkz = (ak2 * gz[288] - 1 * gz[0]);
                    glx = al2 * gx[448];
                    gly = (al2 * gy[912] - 1 * gy[48]);
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1024];
                    Ix = gx[48];
                    Iy = gy[160];
                    Iz = gz[432];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[208];
                    giky = ak2 * (ai2 * gy[320] - 1 * gy[288]) - 1 * (ai2 * gy[32] - 1 * gy[0]);
                    gikz = ak2 * ai2 * gz[592];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[240] - 1 * gx[144]);
                    gjky = ak2 * aj2 * gy[352] - 1 * aj2 * gy[64];
                    gjkz = ak2 * aj2 * gz[624];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[496];
                    gily = al2 * (ai2 * gy[608] - 1 * gy[576]);
                    gilz = al2 * ai2 * gz[880] - 1 * ai2 * gz[16];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[528] - 1 * gx[432]);
                    gjly = al2 * aj2 * gy[640];
                    gjlz = al2 * aj2 * gz[912] - 1 * aj2 * gz[48];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[64];
                    giy = (ai2 * gy[176] - 1 * gy[144]);
                    giz = ai2 * gz[448];
                    gjx = (aj2 * gx[96] - 1 * gx[0]);
                    gjy = aj2 * gy[208];
                    gjz = aj2 * gz[480];
                    gkx = ak2 * gx[192];
                    gky = (ak2 * gy[304] - 1 * gy[16]);
                    gkz = ak2 * gz[576];
                    glx = al2 * gx[480];
                    gly = al2 * gy[592];
                    glz = (al2 * gz[864] - 1 * gz[0]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1280];
                    Ix = gx[0];
                    Iy = gy[0];
                    Iz = gz[640];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * (ai2 * gz[800] - 1 * gz[768]) - 1 * (ai2 * gz[512] - 1 * gz[480]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * (aj2 * gz[832] - 1 * gz[736]) - 1 * (aj2 * gz[544] - 1 * gz[448]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * (ai2 * gz[1088] - 1 * gz[1056]) - 1 * (ai2 * gz[224] - 1 * gz[192]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * (aj2 * gz[1120] - 1 * gz[1024]) - 1 * (aj2 * gz[256] - 1 * gz[160]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = ai2 * gy[16];
                    giz = (ai2 * gz[656] - 1 * gz[624]);
                    gjx = aj2 * gx[48];
                    gjy = aj2 * gy[48];
                    gjz = (aj2 * gz[688] - 1 * gz[592]);
                    gkx = ak2 * gx[144];
                    gky = ak2 * gy[144];
                    gkz = (ak2 * gz[784] - 1 * gz[496]);
                    glx = al2 * gx[432];
                    gly = al2 * gy[432];
                    glz = (al2 * gz[1072] - 1 * gz[208]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 1:
                    dd = dd_cache[16];
                    Ix = gx[624];
                    Iy = gy[16];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[784] - 1 * ai2 * gx[496];
                    giky = ak2 * (ai2 * gy[176] - 1 * gy[144]);
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[816] - 1 * gx[720]) - 1 * (aj2 * gx[528] - 1 * gx[432]);
                    gjky = ak2 * aj2 * gy[208];
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1072] - 1 * ai2 * gx[208];
                    gily = al2 * (ai2 * gy[464] - 1 * gy[432]);
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[1104] - 1 * gx[1008]) - 1 * (aj2 * gx[240] - 1 * gx[144]);
                    gjly = al2 * aj2 * gy[496];
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[640];
                    giy = (ai2 * gy[32] - 1 * gy[0]);
                    giz = ai2 * gz[16];
                    gjx = (aj2 * gx[672] - 1 * gx[576]);
                    gjy = aj2 * gy[64];
                    gjz = aj2 * gz[48];
                    gkx = (ak2 * gx[768] - 1 * gx[480]);
                    gky = ak2 * gy[160];
                    gkz = ak2 * gz[144];
                    glx = (al2 * gx[1056] - 1 * gx[192]);
                    gly = al2 * gy[448];
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[272];
                    Ix = gx[432];
                    Iy = gy[144];
                    Iz = gz[64];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[592];
                    giky = ak2 * ai2 * gy[304] - 1 * ai2 * gy[16];
                    gikz = ak2 * (ai2 * gz[224] - 1 * gz[192]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[624];
                    gjky = ak2 * aj2 * gy[336] - 1 * aj2 * gy[48];
                    gjkz = ak2 * (aj2 * gz[256] - 1 * gz[160]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[880] - 1 * ai2 * gx[16];
                    gily = al2 * ai2 * gy[592];
                    gilz = al2 * (ai2 * gz[512] - 1 * gz[480]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[912] - 1 * aj2 * gx[48];
                    gjly = al2 * aj2 * gy[624];
                    gjlz = al2 * (aj2 * gz[544] - 1 * gz[448]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[448];
                    giy = ai2 * gy[160];
                    giz = (ai2 * gz[80] - 1 * gz[48]);
                    gjx = aj2 * gx[480];
                    gjy = aj2 * gy[192];
                    gjz = (aj2 * gz[112] - 1 * gz[16]);
                    gkx = ak2 * gx[576];
                    gky = (ak2 * gy[288] - 1 * gy[0]);
                    gkz = ak2 * gz[208];
                    glx = (al2 * gx[864] - 1 * gx[0]);
                    gly = al2 * gy[576];
                    glz = al2 * gz[496];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[528];
                    Ix = gx[160];
                    Iy = gy[432];
                    Iz = gz[48];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[320] - 1 * gx[288]) - 1 * (ai2 * gx[32] - 1 * gx[0]);
                    giky = ak2 * ai2 * gy[592];
                    gikz = ak2 * ai2 * gz[208];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[352] - 1 * aj2 * gx[64];
                    gjky = ak2 * aj2 * gy[624];
                    gjkz = ak2 * (aj2 * gz[240] - 1 * gz[144]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[608] - 1 * gx[576]);
                    gily = al2 * ai2 * gy[880] - 1 * ai2 * gy[16];
                    gilz = al2 * ai2 * gz[496];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[640];
                    gjly = al2 * aj2 * gy[912] - 1 * aj2 * gy[48];
                    gjlz = al2 * (aj2 * gz[528] - 1 * gz[432]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[176] - 1 * gx[144]);
                    giy = ai2 * gy[448];
                    giz = ai2 * gz[64];
                    gjx = aj2 * gx[208];
                    gjy = aj2 * gy[480];
                    gjz = (aj2 * gz[96] - 1 * gz[0]);
                    gkx = (ak2 * gx[304] - 1 * gx[16]);
                    gky = ak2 * gy[576];
                    gkz = ak2 * gz[192];
                    glx = al2 * gx[592];
                    gly = (al2 * gy[864] - 1 * gy[0]);
                    glz = al2 * gz[480];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[784];
                    Ix = gx[0];
                    Iy = gy[496];
                    Iz = gz[144];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * (ai2 * gy[656] - 1 * gy[624]);
                    gikz = ak2 * ai2 * gz[304] - 1 * ai2 * gz[16];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * (aj2 * gy[688] - 1 * gy[592]);
                    gjkz = ak2 * aj2 * gz[336] - 1 * aj2 * gz[48];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * (ai2 * gy[944] - 1 * gy[912]) - 1 * (ai2 * gy[80] - 1 * gy[48]);
                    gilz = al2 * ai2 * gz[592];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * (aj2 * gy[976] - 1 * gy[880]) - 1 * (aj2 * gy[112] - 1 * gy[16]);
                    gjlz = al2 * aj2 * gz[624];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = (ai2 * gy[512] - 1 * gy[480]);
                    giz = ai2 * gz[160];
                    gjx = aj2 * gx[48];
                    gjy = (aj2 * gy[544] - 1 * gy[448]);
                    gjz = aj2 * gz[192];
                    gkx = ak2 * gx[144];
                    gky = ak2 * gy[640];
                    gkz = (ak2 * gz[288] - 1 * gz[0]);
                    glx = al2 * gx[432];
                    gly = (al2 * gy[928] - 1 * gy[64]);
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1040];
                    Ix = gx[48];
                    Iy = gy[144];
                    Iz = gz[448];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[208];
                    giky = ak2 * ai2 * gy[304] - 1 * ai2 * gy[16];
                    gikz = ak2 * (ai2 * gz[608] - 1 * gz[576]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[240] - 1 * gx[144]);
                    gjky = ak2 * aj2 * gy[336] - 1 * aj2 * gy[48];
                    gjkz = ak2 * aj2 * gz[640];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[496];
                    gily = al2 * ai2 * gy[592];
                    gilz = al2 * (ai2 * gz[896] - 1 * gz[864]) - 1 * (ai2 * gz[32] - 1 * gz[0]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[528] - 1 * gx[432]);
                    gjly = al2 * aj2 * gy[624];
                    gjlz = al2 * aj2 * gz[928] - 1 * aj2 * gz[64];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[64];
                    giy = ai2 * gy[160];
                    giz = (ai2 * gz[464] - 1 * gz[432]);
                    gjx = (aj2 * gx[96] - 1 * gx[0]);
                    gjy = aj2 * gy[192];
                    gjz = aj2 * gz[496];
                    gkx = ak2 * gx[192];
                    gky = (ak2 * gy[288] - 1 * gy[0]);
                    gkz = ak2 * gz[592];
                    glx = al2 * gx[480];
                    gly = al2 * gy[576];
                    glz = (al2 * gz[880] - 1 * gz[16]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 2:
                    dd = dd_cache[32];
                    Ix = gx[624];
                    Iy = gy[0];
                    Iz = gz[16];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[784] - 1 * ai2 * gx[496];
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * (ai2 * gz[176] - 1 * gz[144]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[816] - 1 * gx[720]) - 1 * (aj2 * gx[528] - 1 * gx[432]);
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * aj2 * gz[208];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1072] - 1 * ai2 * gx[208];
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * (ai2 * gz[464] - 1 * gz[432]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[1104] - 1 * gx[1008]) - 1 * (aj2 * gx[240] - 1 * gx[144]);
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * aj2 * gz[496];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[640];
                    giy = ai2 * gy[16];
                    giz = (ai2 * gz[32] - 1 * gz[0]);
                    gjx = (aj2 * gx[672] - 1 * gx[576]);
                    gjy = aj2 * gy[48];
                    gjz = aj2 * gz[64];
                    gkx = (ak2 * gx[768] - 1 * gx[480]);
                    gky = ak2 * gy[144];
                    gkz = ak2 * gz[160];
                    glx = (al2 * gx[1056] - 1 * gx[192]);
                    gly = al2 * gy[432];
                    glz = al2 * gz[448];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[288];
                    Ix = gx[496];
                    Iy = gy[0];
                    Iz = gz[144];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[656] - 1 * gx[624]);
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * ai2 * gz[304] - 1 * ai2 * gz[16];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[688] - 1 * gx[592]);
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * aj2 * gz[336] - 1 * aj2 * gz[48];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[944] - 1 * gx[912]) - 1 * (ai2 * gx[80] - 1 * gx[48]);
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * ai2 * gz[592];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[976] - 1 * gx[880]) - 1 * (aj2 * gx[112] - 1 * gx[16]);
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * aj2 * gz[624];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[512] - 1 * gx[480]);
                    giy = ai2 * gy[16];
                    giz = ai2 * gz[160];
                    gjx = (aj2 * gx[544] - 1 * gx[448]);
                    gjy = aj2 * gy[48];
                    gjz = aj2 * gz[192];
                    gkx = ak2 * gx[640];
                    gky = ak2 * gy[144];
                    gkz = (ak2 * gz[288] - 1 * gz[0]);
                    glx = (al2 * gx[928] - 1 * gx[64]);
                    gly = al2 * gy[432];
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[544];
                    Ix = gx[144];
                    Iy = gy[448];
                    Iz = gz[48];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[304] - 1 * ai2 * gx[16];
                    giky = ak2 * (ai2 * gy[608] - 1 * gy[576]);
                    gikz = ak2 * ai2 * gz[208];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[336] - 1 * aj2 * gx[48];
                    gjky = ak2 * aj2 * gy[640];
                    gjkz = ak2 * (aj2 * gz[240] - 1 * gz[144]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[592];
                    gily = al2 * (ai2 * gy[896] - 1 * gy[864]) - 1 * (ai2 * gy[32] - 1 * gy[0]);
                    gilz = al2 * ai2 * gz[496];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[624];
                    gjly = al2 * aj2 * gy[928] - 1 * aj2 * gy[64];
                    gjlz = al2 * (aj2 * gz[528] - 1 * gz[432]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[160];
                    giy = (ai2 * gy[464] - 1 * gy[432]);
                    giz = ai2 * gz[64];
                    gjx = aj2 * gx[192];
                    gjy = aj2 * gy[496];
                    gjz = (aj2 * gz[96] - 1 * gz[0]);
                    gkx = (ak2 * gx[288] - 1 * gx[0]);
                    gky = ak2 * gy[592];
                    gkz = ak2 * gz[192];
                    glx = al2 * gx[576];
                    gly = (al2 * gy[880] - 1 * gy[16]);
                    glz = al2 * gz[480];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[800];
                    Ix = gx[0];
                    Iy = gy[480];
                    Iz = gz[160];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * ai2 * gy[640];
                    gikz = ak2 * (ai2 * gz[320] - 1 * gz[288]) - 1 * (ai2 * gz[32] - 1 * gz[0]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * (aj2 * gy[672] - 1 * gy[576]);
                    gjkz = ak2 * aj2 * gz[352] - 1 * aj2 * gz[64];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * ai2 * gy[928] - 1 * ai2 * gy[64];
                    gilz = al2 * (ai2 * gz[608] - 1 * gz[576]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * (aj2 * gy[960] - 1 * gy[864]) - 1 * (aj2 * gy[96] - 1 * gy[0]);
                    gjlz = al2 * aj2 * gz[640];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = ai2 * gy[496];
                    giz = (ai2 * gz[176] - 1 * gz[144]);
                    gjx = aj2 * gx[48];
                    gjy = (aj2 * gy[528] - 1 * gy[432]);
                    gjz = aj2 * gz[208];
                    gkx = ak2 * gx[144];
                    gky = ak2 * gy[624];
                    gkz = (ak2 * gz[304] - 1 * gz[16]);
                    glx = al2 * gx[432];
                    gly = (al2 * gy[912] - 1 * gy[48]);
                    glz = al2 * gz[592];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1056];
                    Ix = gx[16];
                    Iy = gy[192];
                    Iz = gz[432];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[176] - 1 * gx[144]);
                    giky = ak2 * ai2 * gy[352] - 1 * ai2 * gy[64];
                    gikz = ak2 * ai2 * gz[592];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[208];
                    gjky = ak2 * (aj2 * gy[384] - 1 * gy[288]) - 1 * (aj2 * gy[96] - 1 * gy[0]);
                    gjkz = ak2 * aj2 * gz[624];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[464] - 1 * gx[432]);
                    gily = al2 * ai2 * gy[640];
                    gilz = al2 * ai2 * gz[880] - 1 * ai2 * gz[16];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[496];
                    gjly = al2 * (aj2 * gy[672] - 1 * gy[576]);
                    gjlz = al2 * aj2 * gz[912] - 1 * aj2 * gz[48];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[32] - 1 * gx[0]);
                    giy = ai2 * gy[208];
                    giz = ai2 * gz[448];
                    gjx = aj2 * gx[64];
                    gjy = (aj2 * gy[240] - 1 * gy[144]);
                    gjz = aj2 * gz[480];
                    gkx = ak2 * gx[160];
                    gky = (ak2 * gy[336] - 1 * gy[48]);
                    gkz = ak2 * gz[576];
                    glx = al2 * gx[448];
                    gly = al2 * gy[624];
                    glz = (al2 * gz[864] - 1 * gz[0]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 3:
                    dd = dd_cache[48];
                    Ix = gx[592];
                    Iy = gy[48];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[752] - 1 * gx[720]) - 1 * (ai2 * gx[464] - 1 * gx[432]);
                    giky = ak2 * ai2 * gy[208];
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[784] - 1 * aj2 * gx[496];
                    gjky = ak2 * (aj2 * gy[240] - 1 * gy[144]);
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[1040] - 1 * gx[1008]) - 1 * (ai2 * gx[176] - 1 * gx[144]);
                    gily = al2 * ai2 * gy[496];
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1072] - 1 * aj2 * gx[208];
                    gjly = al2 * (aj2 * gy[528] - 1 * gy[432]);
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[608] - 1 * gx[576]);
                    giy = ai2 * gy[64];
                    giz = ai2 * gz[16];
                    gjx = aj2 * gx[640];
                    gjy = (aj2 * gy[96] - 1 * gy[0]);
                    gjz = aj2 * gz[48];
                    gkx = (ak2 * gx[736] - 1 * gx[448]);
                    gky = ak2 * gy[192];
                    gkz = ak2 * gz[144];
                    glx = (al2 * gx[1024] - 1 * gx[160]);
                    gly = al2 * gy[480];
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[304];
                    Ix = gx[480];
                    Iy = gy[16];
                    Iz = gz[144];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[640];
                    giky = ak2 * (ai2 * gy[176] - 1 * gy[144]);
                    gikz = ak2 * ai2 * gz[304] - 1 * ai2 * gz[16];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[672] - 1 * gx[576]);
                    gjky = ak2 * aj2 * gy[208];
                    gjkz = ak2 * aj2 * gz[336] - 1 * aj2 * gz[48];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[928] - 1 * ai2 * gx[64];
                    gily = al2 * (ai2 * gy[464] - 1 * gy[432]);
                    gilz = al2 * ai2 * gz[592];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[960] - 1 * gx[864]) - 1 * (aj2 * gx[96] - 1 * gx[0]);
                    gjly = al2 * aj2 * gy[496];
                    gjlz = al2 * aj2 * gz[624];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[496];
                    giy = (ai2 * gy[32] - 1 * gy[0]);
                    giz = ai2 * gz[160];
                    gjx = (aj2 * gx[528] - 1 * gx[432]);
                    gjy = aj2 * gy[64];
                    gjz = aj2 * gz[192];
                    gkx = ak2 * gx[624];
                    gky = ak2 * gy[160];
                    gkz = (ak2 * gz[288] - 1 * gz[0]);
                    glx = (al2 * gx[912] - 1 * gx[48]);
                    gly = al2 * gy[448];
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[560];
                    Ix = gx[144];
                    Iy = gy[432];
                    Iz = gz[64];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[304] - 1 * ai2 * gx[16];
                    giky = ak2 * ai2 * gy[592];
                    gikz = ak2 * (ai2 * gz[224] - 1 * gz[192]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[336] - 1 * aj2 * gx[48];
                    gjky = ak2 * aj2 * gy[624];
                    gjkz = ak2 * (aj2 * gz[256] - 1 * gz[160]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[592];
                    gily = al2 * ai2 * gy[880] - 1 * ai2 * gy[16];
                    gilz = al2 * (ai2 * gz[512] - 1 * gz[480]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[624];
                    gjly = al2 * aj2 * gy[912] - 1 * aj2 * gy[48];
                    gjlz = al2 * (aj2 * gz[544] - 1 * gz[448]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[160];
                    giy = ai2 * gy[448];
                    giz = (ai2 * gz[80] - 1 * gz[48]);
                    gjx = aj2 * gx[192];
                    gjy = aj2 * gy[480];
                    gjz = (aj2 * gz[112] - 1 * gz[16]);
                    gkx = (ak2 * gx[288] - 1 * gx[0]);
                    gky = ak2 * gy[576];
                    gkz = ak2 * gz[208];
                    glx = al2 * gx[576];
                    gly = (al2 * gy[864] - 1 * gy[0]);
                    glz = al2 * gz[496];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[816];
                    Ix = gx[16];
                    Iy = gy[432];
                    Iz = gz[192];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[176] - 1 * gx[144]);
                    giky = ak2 * ai2 * gy[592];
                    gikz = ak2 * ai2 * gz[352] - 1 * ai2 * gz[64];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[208];
                    gjky = ak2 * aj2 * gy[624];
                    gjkz = ak2 * (aj2 * gz[384] - 1 * gz[288]) - 1 * (aj2 * gz[96] - 1 * gz[0]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[464] - 1 * gx[432]);
                    gily = al2 * ai2 * gy[880] - 1 * ai2 * gy[16];
                    gilz = al2 * ai2 * gz[640];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[496];
                    gjly = al2 * aj2 * gy[912] - 1 * aj2 * gy[48];
                    gjlz = al2 * (aj2 * gz[672] - 1 * gz[576]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[32] - 1 * gx[0]);
                    giy = ai2 * gy[448];
                    giz = ai2 * gz[208];
                    gjx = aj2 * gx[64];
                    gjy = aj2 * gy[480];
                    gjz = (aj2 * gz[240] - 1 * gz[144]);
                    gkx = ak2 * gx[160];
                    gky = ak2 * gy[576];
                    gkz = (ak2 * gz[336] - 1 * gz[48]);
                    glx = al2 * gx[448];
                    gly = (al2 * gy[864] - 1 * gy[0]);
                    glz = al2 * gz[624];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1072];
                    Ix = gx[0];
                    Iy = gy[208];
                    Iz = gz[432];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * (ai2 * gy[368] - 1 * gy[336]) - 1 * (ai2 * gy[80] - 1 * gy[48]);
                    gikz = ak2 * ai2 * gz[592];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * (aj2 * gy[400] - 1 * gy[304]) - 1 * (aj2 * gy[112] - 1 * gy[16]);
                    gjkz = ak2 * aj2 * gz[624];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * (ai2 * gy[656] - 1 * gy[624]);
                    gilz = al2 * ai2 * gz[880] - 1 * ai2 * gz[16];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * (aj2 * gy[688] - 1 * gy[592]);
                    gjlz = al2 * aj2 * gz[912] - 1 * aj2 * gz[48];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = (ai2 * gy[224] - 1 * gy[192]);
                    giz = ai2 * gz[448];
                    gjx = aj2 * gx[48];
                    gjy = (aj2 * gy[256] - 1 * gy[160]);
                    gjz = aj2 * gz[480];
                    gkx = ak2 * gx[144];
                    gky = (ak2 * gy[352] - 1 * gy[64]);
                    gkz = ak2 * gz[576];
                    glx = al2 * gx[432];
                    gly = al2 * gy[640];
                    glz = (al2 * gz[864] - 1 * gz[0]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 4:
                    dd = dd_cache[64];
                    Ix = gx[576];
                    Iy = gy[64];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[736] - 1 * ai2 * gx[448];
                    giky = ak2 * (ai2 * gy[224] - 1 * gy[192]);
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[768] - 1 * aj2 * gx[480];
                    gjky = ak2 * (aj2 * gy[256] - 1 * gy[160]);
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1024] - 1 * ai2 * gx[160];
                    gily = al2 * (ai2 * gy[512] - 1 * gy[480]);
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1056] - 1 * aj2 * gx[192];
                    gjly = al2 * (aj2 * gy[544] - 1 * gy[448]);
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[592];
                    giy = (ai2 * gy[80] - 1 * gy[48]);
                    giz = ai2 * gz[16];
                    gjx = aj2 * gx[624];
                    gjy = (aj2 * gy[112] - 1 * gy[16]);
                    gjz = aj2 * gz[48];
                    gkx = (ak2 * gx[720] - 1 * gx[432]);
                    gky = ak2 * gy[208];
                    gkz = ak2 * gz[144];
                    glx = (al2 * gx[1008] - 1 * gx[144]);
                    gly = al2 * gy[496];
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[320];
                    Ix = gx[480];
                    Iy = gy[0];
                    Iz = gz[160];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[640];
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * (ai2 * gz[320] - 1 * gz[288]) - 1 * (ai2 * gz[32] - 1 * gz[0]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[672] - 1 * gx[576]);
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * aj2 * gz[352] - 1 * aj2 * gz[64];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[928] - 1 * ai2 * gx[64];
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * (ai2 * gz[608] - 1 * gz[576]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[960] - 1 * gx[864]) - 1 * (aj2 * gx[96] - 1 * gx[0]);
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * aj2 * gz[640];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[496];
                    giy = ai2 * gy[16];
                    giz = (ai2 * gz[176] - 1 * gz[144]);
                    gjx = (aj2 * gx[528] - 1 * gx[432]);
                    gjy = aj2 * gy[48];
                    gjz = aj2 * gz[208];
                    gkx = ak2 * gx[624];
                    gky = ak2 * gy[144];
                    gkz = (ak2 * gz[304] - 1 * gz[16]);
                    glx = (al2 * gx[912] - 1 * gx[48]);
                    gly = al2 * gy[432];
                    glz = al2 * gz[592];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[576];
                    Ix = gx[64];
                    Iy = gy[576];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[224] - 1 * gx[192]);
                    giky = ak2 * ai2 * gy[736] - 1 * ai2 * gy[448];
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[256] - 1 * gx[160]);
                    gjky = ak2 * aj2 * gy[768] - 1 * aj2 * gy[480];
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[512] - 1 * gx[480]);
                    gily = al2 * ai2 * gy[1024] - 1 * ai2 * gy[160];
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[544] - 1 * gx[448]);
                    gjly = al2 * aj2 * gy[1056] - 1 * aj2 * gy[192];
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[80] - 1 * gx[48]);
                    giy = ai2 * gy[592];
                    giz = ai2 * gz[16];
                    gjx = (aj2 * gx[112] - 1 * gx[16]);
                    gjy = aj2 * gy[624];
                    gjz = aj2 * gz[48];
                    gkx = ak2 * gx[208];
                    gky = (ak2 * gy[720] - 1 * gy[432]);
                    gkz = ak2 * gz[144];
                    glx = al2 * gx[496];
                    gly = (al2 * gy[1008] - 1 * gy[144]);
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[832];
                    Ix = gx[0];
                    Iy = gy[448];
                    Iz = gz[192];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * (ai2 * gy[608] - 1 * gy[576]);
                    gikz = ak2 * ai2 * gz[352] - 1 * ai2 * gz[64];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * aj2 * gy[640];
                    gjkz = ak2 * (aj2 * gz[384] - 1 * gz[288]) - 1 * (aj2 * gz[96] - 1 * gz[0]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * (ai2 * gy[896] - 1 * gy[864]) - 1 * (ai2 * gy[32] - 1 * gy[0]);
                    gilz = al2 * ai2 * gz[640];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * aj2 * gy[928] - 1 * aj2 * gy[64];
                    gjlz = al2 * (aj2 * gz[672] - 1 * gz[576]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = (ai2 * gy[464] - 1 * gy[432]);
                    giz = ai2 * gz[208];
                    gjx = aj2 * gx[48];
                    gjy = aj2 * gy[496];
                    gjz = (aj2 * gz[240] - 1 * gz[144]);
                    gkx = ak2 * gx[144];
                    gky = ak2 * gy[592];
                    gkz = (ak2 * gz[336] - 1 * gz[48]);
                    glx = al2 * gx[432];
                    gly = (al2 * gy[880] - 1 * gy[16]);
                    glz = al2 * gz[624];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1088];
                    Ix = gx[0];
                    Iy = gy[192];
                    Iz = gz[448];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * ai2 * gy[352] - 1 * ai2 * gy[64];
                    gikz = ak2 * (ai2 * gz[608] - 1 * gz[576]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * (aj2 * gy[384] - 1 * gy[288]) - 1 * (aj2 * gy[96] - 1 * gy[0]);
                    gjkz = ak2 * aj2 * gz[640];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * ai2 * gy[640];
                    gilz = al2 * (ai2 * gz[896] - 1 * gz[864]) - 1 * (ai2 * gz[32] - 1 * gz[0]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * (aj2 * gy[672] - 1 * gy[576]);
                    gjlz = al2 * aj2 * gz[928] - 1 * aj2 * gz[64];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = ai2 * gy[208];
                    giz = (ai2 * gz[464] - 1 * gz[432]);
                    gjx = aj2 * gx[48];
                    gjy = (aj2 * gy[240] - 1 * gy[144]);
                    gjz = aj2 * gz[496];
                    gkx = ak2 * gx[144];
                    gky = (ak2 * gy[336] - 1 * gy[48]);
                    gkz = ak2 * gz[592];
                    glx = al2 * gx[432];
                    gly = al2 * gy[624];
                    glz = (al2 * gz[880] - 1 * gz[16]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 5:
                    dd = dd_cache[80];
                    Ix = gx[576];
                    Iy = gy[48];
                    Iz = gz[16];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[736] - 1 * ai2 * gx[448];
                    giky = ak2 * ai2 * gy[208];
                    gikz = ak2 * (ai2 * gz[176] - 1 * gz[144]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[768] - 1 * aj2 * gx[480];
                    gjky = ak2 * (aj2 * gy[240] - 1 * gy[144]);
                    gjkz = ak2 * aj2 * gz[208];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1024] - 1 * ai2 * gx[160];
                    gily = al2 * ai2 * gy[496];
                    gilz = al2 * (ai2 * gz[464] - 1 * gz[432]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1056] - 1 * aj2 * gx[192];
                    gjly = al2 * (aj2 * gy[528] - 1 * gy[432]);
                    gjlz = al2 * aj2 * gz[496];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[592];
                    giy = ai2 * gy[64];
                    giz = (ai2 * gz[32] - 1 * gz[0]);
                    gjx = aj2 * gx[624];
                    gjy = (aj2 * gy[96] - 1 * gy[0]);
                    gjz = aj2 * gz[64];
                    gkx = (ak2 * gx[720] - 1 * gx[432]);
                    gky = ak2 * gy[192];
                    gkz = ak2 * gz[160];
                    glx = (al2 * gx[1008] - 1 * gx[144]);
                    gly = al2 * gy[480];
                    glz = al2 * gz[448];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[336];
                    Ix = gx[448];
                    Iy = gy[48];
                    Iz = gz[144];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[608] - 1 * gx[576]);
                    giky = ak2 * ai2 * gy[208];
                    gikz = ak2 * ai2 * gz[304] - 1 * ai2 * gz[16];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[640];
                    gjky = ak2 * (aj2 * gy[240] - 1 * gy[144]);
                    gjkz = ak2 * aj2 * gz[336] - 1 * aj2 * gz[48];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[896] - 1 * gx[864]) - 1 * (ai2 * gx[32] - 1 * gx[0]);
                    gily = al2 * ai2 * gy[496];
                    gilz = al2 * ai2 * gz[592];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[928] - 1 * aj2 * gx[64];
                    gjly = al2 * (aj2 * gy[528] - 1 * gy[432]);
                    gjlz = al2 * aj2 * gz[624];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[464] - 1 * gx[432]);
                    giy = ai2 * gy[64];
                    giz = ai2 * gz[160];
                    gjx = aj2 * gx[496];
                    gjy = (aj2 * gy[96] - 1 * gy[0]);
                    gjz = aj2 * gz[192];
                    gkx = ak2 * gx[592];
                    gky = ak2 * gy[192];
                    gkz = (ak2 * gz[288] - 1 * gz[0]);
                    glx = (al2 * gx[880] - 1 * gx[16]);
                    gly = al2 * gy[480];
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[592];
                    Ix = gx[48];
                    Iy = gy[592];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[208];
                    giky = ak2 * (ai2 * gy[752] - 1 * gy[720]) - 1 * (ai2 * gy[464] - 1 * gy[432]);
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[240] - 1 * gx[144]);
                    gjky = ak2 * aj2 * gy[784] - 1 * aj2 * gy[496];
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[496];
                    gily = al2 * (ai2 * gy[1040] - 1 * gy[1008]) - 1 * (ai2 * gy[176] - 1 * gy[144]);
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[528] - 1 * gx[432]);
                    gjly = al2 * aj2 * gy[1072] - 1 * aj2 * gy[208];
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[64];
                    giy = (ai2 * gy[608] - 1 * gy[576]);
                    giz = ai2 * gz[16];
                    gjx = (aj2 * gx[96] - 1 * gx[0]);
                    gjy = aj2 * gy[640];
                    gjz = aj2 * gz[48];
                    gkx = ak2 * gx[192];
                    gky = (ak2 * gy[736] - 1 * gy[448]);
                    gkz = ak2 * gz[144];
                    glx = al2 * gx[480];
                    gly = (al2 * gy[1024] - 1 * gy[160]);
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[848];
                    Ix = gx[0];
                    Iy = gy[432];
                    Iz = gz[208];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * ai2 * gy[592];
                    gikz = ak2 * (ai2 * gz[368] - 1 * gz[336]) - 1 * (ai2 * gz[80] - 1 * gz[48]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * aj2 * gy[624];
                    gjkz = ak2 * (aj2 * gz[400] - 1 * gz[304]) - 1 * (aj2 * gz[112] - 1 * gz[16]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * ai2 * gy[880] - 1 * ai2 * gy[16];
                    gilz = al2 * (ai2 * gz[656] - 1 * gz[624]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * aj2 * gy[912] - 1 * aj2 * gy[48];
                    gjlz = al2 * (aj2 * gz[688] - 1 * gz[592]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = ai2 * gy[448];
                    giz = (ai2 * gz[224] - 1 * gz[192]);
                    gjx = aj2 * gx[48];
                    gjy = aj2 * gy[480];
                    gjz = (aj2 * gz[256] - 1 * gz[160]);
                    gkx = ak2 * gx[144];
                    gky = ak2 * gy[576];
                    gkz = (ak2 * gz[352] - 1 * gz[64]);
                    glx = al2 * gx[432];
                    gly = (al2 * gy[864] - 1 * gy[0]);
                    glz = al2 * gz[640];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1104];
                    Ix = gx[16];
                    Iy = gy[144];
                    Iz = gz[480];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[176] - 1 * gx[144]);
                    giky = ak2 * ai2 * gy[304] - 1 * ai2 * gy[16];
                    gikz = ak2 * ai2 * gz[640];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[208];
                    gjky = ak2 * aj2 * gy[336] - 1 * aj2 * gy[48];
                    gjkz = ak2 * (aj2 * gz[672] - 1 * gz[576]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[464] - 1 * gx[432]);
                    gily = al2 * ai2 * gy[592];
                    gilz = al2 * ai2 * gz[928] - 1 * ai2 * gz[64];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[496];
                    gjly = al2 * aj2 * gy[624];
                    gjlz = al2 * (aj2 * gz[960] - 1 * gz[864]) - 1 * (aj2 * gz[96] - 1 * gz[0]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[32] - 1 * gx[0]);
                    giy = ai2 * gy[160];
                    giz = ai2 * gz[496];
                    gjx = aj2 * gx[64];
                    gjy = aj2 * gy[192];
                    gjz = (aj2 * gz[528] - 1 * gz[432]);
                    gkx = ak2 * gx[160];
                    gky = (ak2 * gy[288] - 1 * gy[0]);
                    gkz = ak2 * gz[624];
                    glx = al2 * gx[448];
                    gly = al2 * gy[576];
                    glz = (al2 * gz[912] - 1 * gz[48]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 6:
                    dd = dd_cache[96];
                    Ix = gx[592];
                    Iy = gy[0];
                    Iz = gz[48];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[752] - 1 * gx[720]) - 1 * (ai2 * gx[464] - 1 * gx[432]);
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * ai2 * gz[208];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[784] - 1 * aj2 * gx[496];
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * (aj2 * gz[240] - 1 * gz[144]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[1040] - 1 * gx[1008]) - 1 * (ai2 * gx[176] - 1 * gx[144]);
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * ai2 * gz[496];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1072] - 1 * aj2 * gx[208];
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * (aj2 * gz[528] - 1 * gz[432]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[608] - 1 * gx[576]);
                    giy = ai2 * gy[16];
                    giz = ai2 * gz[64];
                    gjx = aj2 * gx[640];
                    gjy = aj2 * gy[48];
                    gjz = (aj2 * gz[96] - 1 * gz[0]);
                    gkx = (ak2 * gx[736] - 1 * gx[448]);
                    gky = ak2 * gy[144];
                    gkz = ak2 * gz[192];
                    glx = (al2 * gx[1024] - 1 * gx[160]);
                    gly = al2 * gy[432];
                    glz = al2 * gz[480];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[352];
                    Ix = gx[432];
                    Iy = gy[64];
                    Iz = gz[144];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[592];
                    giky = ak2 * (ai2 * gy[224] - 1 * gy[192]);
                    gikz = ak2 * ai2 * gz[304] - 1 * ai2 * gz[16];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[624];
                    gjky = ak2 * (aj2 * gy[256] - 1 * gy[160]);
                    gjkz = ak2 * aj2 * gz[336] - 1 * aj2 * gz[48];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[880] - 1 * ai2 * gx[16];
                    gily = al2 * (ai2 * gy[512] - 1 * gy[480]);
                    gilz = al2 * ai2 * gz[592];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[912] - 1 * aj2 * gx[48];
                    gjly = al2 * (aj2 * gy[544] - 1 * gy[448]);
                    gjlz = al2 * aj2 * gz[624];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[448];
                    giy = (ai2 * gy[80] - 1 * gy[48]);
                    giz = ai2 * gz[160];
                    gjx = aj2 * gx[480];
                    gjy = (aj2 * gy[112] - 1 * gy[16]);
                    gjz = aj2 * gz[192];
                    gkx = ak2 * gx[576];
                    gky = ak2 * gy[208];
                    gkz = (ak2 * gz[288] - 1 * gz[0]);
                    glx = (al2 * gx[864] - 1 * gx[0]);
                    gly = al2 * gy[496];
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[608];
                    Ix = gx[48];
                    Iy = gy[576];
                    Iz = gz[16];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[208];
                    giky = ak2 * ai2 * gy[736] - 1 * ai2 * gy[448];
                    gikz = ak2 * (ai2 * gz[176] - 1 * gz[144]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[240] - 1 * gx[144]);
                    gjky = ak2 * aj2 * gy[768] - 1 * aj2 * gy[480];
                    gjkz = ak2 * aj2 * gz[208];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[496];
                    gily = al2 * ai2 * gy[1024] - 1 * ai2 * gy[160];
                    gilz = al2 * (ai2 * gz[464] - 1 * gz[432]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[528] - 1 * gx[432]);
                    gjly = al2 * aj2 * gy[1056] - 1 * aj2 * gy[192];
                    gjlz = al2 * aj2 * gz[496];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[64];
                    giy = ai2 * gy[592];
                    giz = (ai2 * gz[32] - 1 * gz[0]);
                    gjx = (aj2 * gx[96] - 1 * gx[0]);
                    gjy = aj2 * gy[624];
                    gjz = aj2 * gz[64];
                    gkx = ak2 * gx[192];
                    gky = (ak2 * gy[720] - 1 * gy[432]);
                    gkz = ak2 * gz[160];
                    glx = al2 * gx[480];
                    gly = (al2 * gy[1008] - 1 * gy[144]);
                    glz = al2 * gz[448];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[864];
                    Ix = gx[208];
                    Iy = gy[0];
                    Iz = gz[432];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[368] - 1 * gx[336]) - 1 * (ai2 * gx[80] - 1 * gx[48]);
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * ai2 * gz[592];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[400] - 1 * gx[304]) - 1 * (aj2 * gx[112] - 1 * gx[16]);
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * aj2 * gz[624];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[656] - 1 * gx[624]);
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * ai2 * gz[880] - 1 * ai2 * gz[16];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[688] - 1 * gx[592]);
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * aj2 * gz[912] - 1 * aj2 * gz[48];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[224] - 1 * gx[192]);
                    giy = ai2 * gy[16];
                    giz = ai2 * gz[448];
                    gjx = (aj2 * gx[256] - 1 * gx[160]);
                    gjy = aj2 * gy[48];
                    gjz = aj2 * gz[480];
                    gkx = (ak2 * gx[352] - 1 * gx[64]);
                    gky = ak2 * gy[144];
                    gkz = ak2 * gz[576];
                    glx = al2 * gx[640];
                    gly = al2 * gy[432];
                    glz = (al2 * gz[864] - 1 * gz[0]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1120];
                    Ix = gx[0];
                    Iy = gy[160];
                    Iz = gz[480];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * (ai2 * gy[320] - 1 * gy[288]) - 1 * (ai2 * gy[32] - 1 * gy[0]);
                    gikz = ak2 * ai2 * gz[640];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * aj2 * gy[352] - 1 * aj2 * gy[64];
                    gjkz = ak2 * (aj2 * gz[672] - 1 * gz[576]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * (ai2 * gy[608] - 1 * gy[576]);
                    gilz = al2 * ai2 * gz[928] - 1 * ai2 * gz[64];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * aj2 * gy[640];
                    gjlz = al2 * (aj2 * gz[960] - 1 * gz[864]) - 1 * (aj2 * gz[96] - 1 * gz[0]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = (ai2 * gy[176] - 1 * gy[144]);
                    giz = ai2 * gz[496];
                    gjx = aj2 * gx[48];
                    gjy = aj2 * gy[208];
                    gjz = (aj2 * gz[528] - 1 * gz[432]);
                    gkx = ak2 * gx[144];
                    gky = (ak2 * gy[304] - 1 * gy[16]);
                    gkz = ak2 * gz[624];
                    glx = al2 * gx[432];
                    gly = al2 * gy[592];
                    glz = (al2 * gz[912] - 1 * gz[48]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 7:
                    dd = dd_cache[112];
                    Ix = gx[576];
                    Iy = gy[16];
                    Iz = gz[48];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[736] - 1 * ai2 * gx[448];
                    giky = ak2 * (ai2 * gy[176] - 1 * gy[144]);
                    gikz = ak2 * ai2 * gz[208];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[768] - 1 * aj2 * gx[480];
                    gjky = ak2 * aj2 * gy[208];
                    gjkz = ak2 * (aj2 * gz[240] - 1 * gz[144]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1024] - 1 * ai2 * gx[160];
                    gily = al2 * (ai2 * gy[464] - 1 * gy[432]);
                    gilz = al2 * ai2 * gz[496];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1056] - 1 * aj2 * gx[192];
                    gjly = al2 * aj2 * gy[496];
                    gjlz = al2 * (aj2 * gz[528] - 1 * gz[432]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[592];
                    giy = (ai2 * gy[32] - 1 * gy[0]);
                    giz = ai2 * gz[64];
                    gjx = aj2 * gx[624];
                    gjy = aj2 * gy[64];
                    gjz = (aj2 * gz[96] - 1 * gz[0]);
                    gkx = (ak2 * gx[720] - 1 * gx[432]);
                    gky = ak2 * gy[160];
                    gkz = ak2 * gz[192];
                    glx = (al2 * gx[1008] - 1 * gx[144]);
                    gly = al2 * gy[448];
                    glz = al2 * gz[480];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[368];
                    Ix = gx[432];
                    Iy = gy[48];
                    Iz = gz[160];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[592];
                    giky = ak2 * ai2 * gy[208];
                    gikz = ak2 * (ai2 * gz[320] - 1 * gz[288]) - 1 * (ai2 * gz[32] - 1 * gz[0]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[624];
                    gjky = ak2 * (aj2 * gy[240] - 1 * gy[144]);
                    gjkz = ak2 * aj2 * gz[352] - 1 * aj2 * gz[64];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[880] - 1 * ai2 * gx[16];
                    gily = al2 * ai2 * gy[496];
                    gilz = al2 * (ai2 * gz[608] - 1 * gz[576]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[912] - 1 * aj2 * gx[48];
                    gjly = al2 * (aj2 * gy[528] - 1 * gy[432]);
                    gjlz = al2 * aj2 * gz[640];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[448];
                    giy = ai2 * gy[64];
                    giz = (ai2 * gz[176] - 1 * gz[144]);
                    gjx = aj2 * gx[480];
                    gjy = (aj2 * gy[96] - 1 * gy[0]);
                    gjz = aj2 * gz[208];
                    gkx = ak2 * gx[576];
                    gky = ak2 * gy[192];
                    gkz = (ak2 * gz[304] - 1 * gz[16]);
                    glx = (al2 * gx[864] - 1 * gx[0]);
                    gly = al2 * gy[480];
                    glz = al2 * gz[592];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[624];
                    Ix = gx[16];
                    Iy = gy[624];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[176] - 1 * gx[144]);
                    giky = ak2 * ai2 * gy[784] - 1 * ai2 * gy[496];
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[208];
                    gjky = ak2 * (aj2 * gy[816] - 1 * gy[720]) - 1 * (aj2 * gy[528] - 1 * gy[432]);
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[464] - 1 * gx[432]);
                    gily = al2 * ai2 * gy[1072] - 1 * ai2 * gy[208];
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[496];
                    gjly = al2 * (aj2 * gy[1104] - 1 * gy[1008]) - 1 * (aj2 * gy[240] - 1 * gy[144]);
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[32] - 1 * gx[0]);
                    giy = ai2 * gy[640];
                    giz = ai2 * gz[16];
                    gjx = aj2 * gx[64];
                    gjy = (aj2 * gy[672] - 1 * gy[576]);
                    gjz = aj2 * gz[48];
                    gkx = ak2 * gx[160];
                    gky = (ak2 * gy[768] - 1 * gy[480]);
                    gkz = ak2 * gz[144];
                    glx = al2 * gx[448];
                    gly = (al2 * gy[1056] - 1 * gy[192]);
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[880];
                    Ix = gx[192];
                    Iy = gy[16];
                    Iz = gz[432];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[352] - 1 * ai2 * gx[64];
                    giky = ak2 * (ai2 * gy[176] - 1 * gy[144]);
                    gikz = ak2 * ai2 * gz[592];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[384] - 1 * gx[288]) - 1 * (aj2 * gx[96] - 1 * gx[0]);
                    gjky = ak2 * aj2 * gy[208];
                    gjkz = ak2 * aj2 * gz[624];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[640];
                    gily = al2 * (ai2 * gy[464] - 1 * gy[432]);
                    gilz = al2 * ai2 * gz[880] - 1 * ai2 * gz[16];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[672] - 1 * gx[576]);
                    gjly = al2 * aj2 * gy[496];
                    gjlz = al2 * aj2 * gz[912] - 1 * aj2 * gz[48];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[208];
                    giy = (ai2 * gy[32] - 1 * gy[0]);
                    giz = ai2 * gz[448];
                    gjx = (aj2 * gx[240] - 1 * gx[144]);
                    gjy = aj2 * gy[64];
                    gjz = aj2 * gz[480];
                    gkx = (ak2 * gx[336] - 1 * gx[48]);
                    gky = ak2 * gy[160];
                    gkz = ak2 * gz[576];
                    glx = al2 * gx[624];
                    gly = al2 * gy[448];
                    glz = (al2 * gz[864] - 1 * gz[0]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1136];
                    Ix = gx[0];
                    Iy = gy[144];
                    Iz = gz[496];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * ai2 * gy[304] - 1 * ai2 * gy[16];
                    gikz = ak2 * (ai2 * gz[656] - 1 * gz[624]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * aj2 * gy[336] - 1 * aj2 * gy[48];
                    gjkz = ak2 * (aj2 * gz[688] - 1 * gz[592]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * ai2 * gy[592];
                    gilz = al2 * (ai2 * gz[944] - 1 * gz[912]) - 1 * (ai2 * gz[80] - 1 * gz[48]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * aj2 * gy[624];
                    gjlz = al2 * (aj2 * gz[976] - 1 * gz[880]) - 1 * (aj2 * gz[112] - 1 * gz[16]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = ai2 * gy[160];
                    giz = (ai2 * gz[512] - 1 * gz[480]);
                    gjx = aj2 * gx[48];
                    gjy = aj2 * gy[192];
                    gjz = (aj2 * gz[544] - 1 * gz[448]);
                    gkx = ak2 * gx[144];
                    gky = (ak2 * gy[288] - 1 * gy[0]);
                    gkz = ak2 * gz[640];
                    glx = al2 * gx[432];
                    gly = al2 * gy[576];
                    glz = (al2 * gz[928] - 1 * gz[64]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 8:
                    dd = dd_cache[128];
                    Ix = gx[576];
                    Iy = gy[0];
                    Iz = gz[64];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[736] - 1 * ai2 * gx[448];
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * (ai2 * gz[224] - 1 * gz[192]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[768] - 1 * aj2 * gx[480];
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * (aj2 * gz[256] - 1 * gz[160]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[1024] - 1 * ai2 * gx[160];
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * (ai2 * gz[512] - 1 * gz[480]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[1056] - 1 * aj2 * gx[192];
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * (aj2 * gz[544] - 1 * gz[448]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[592];
                    giy = ai2 * gy[16];
                    giz = (ai2 * gz[80] - 1 * gz[48]);
                    gjx = aj2 * gx[624];
                    gjy = aj2 * gy[48];
                    gjz = (aj2 * gz[112] - 1 * gz[16]);
                    gkx = (ak2 * gx[720] - 1 * gx[432]);
                    gky = ak2 * gy[144];
                    gkz = ak2 * gz[208];
                    glx = (al2 * gx[1008] - 1 * gx[144]);
                    gly = al2 * gy[432];
                    glz = al2 * gz[496];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[384];
                    Ix = gx[448];
                    Iy = gy[0];
                    Iz = gz[192];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[608] - 1 * gx[576]);
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * ai2 * gz[352] - 1 * ai2 * gz[64];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[640];
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * (aj2 * gz[384] - 1 * gz[288]) - 1 * (aj2 * gz[96] - 1 * gz[0]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[896] - 1 * gx[864]) - 1 * (ai2 * gx[32] - 1 * gx[0]);
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * ai2 * gz[640];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[928] - 1 * aj2 * gx[64];
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * (aj2 * gz[672] - 1 * gz[576]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[464] - 1 * gx[432]);
                    giy = ai2 * gy[16];
                    giz = ai2 * gz[208];
                    gjx = aj2 * gx[496];
                    gjy = aj2 * gy[48];
                    gjz = (aj2 * gz[240] - 1 * gz[144]);
                    gkx = ak2 * gx[592];
                    gky = ak2 * gy[144];
                    gkz = (ak2 * gz[336] - 1 * gz[48]);
                    glx = (al2 * gx[880] - 1 * gx[16]);
                    gly = al2 * gy[432];
                    glz = al2 * gz[624];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[640];
                    Ix = gx[0];
                    Iy = gy[640];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * (ai2 * gy[800] - 1 * gy[768]) - 1 * (ai2 * gy[512] - 1 * gy[480]);
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * (aj2 * gy[832] - 1 * gy[736]) - 1 * (aj2 * gy[544] - 1 * gy[448]);
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * (ai2 * gy[1088] - 1 * gy[1056]) - 1 * (ai2 * gy[224] - 1 * gy[192]);
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * (aj2 * gy[1120] - 1 * gy[1024]) - 1 * (aj2 * gy[256] - 1 * gy[160]);
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = (ai2 * gy[656] - 1 * gy[624]);
                    giz = ai2 * gz[16];
                    gjx = aj2 * gx[48];
                    gjy = (aj2 * gy[688] - 1 * gy[592]);
                    gjz = aj2 * gz[48];
                    gkx = ak2 * gx[144];
                    gky = (ak2 * gy[784] - 1 * gy[496]);
                    gkz = ak2 * gz[144];
                    glx = al2 * gx[432];
                    gly = (al2 * gy[1072] - 1 * gy[208]);
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[896];
                    Ix = gx[192];
                    Iy = gy[0];
                    Iz = gz[448];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[352] - 1 * ai2 * gx[64];
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * (ai2 * gz[608] - 1 * gz[576]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[384] - 1 * gx[288]) - 1 * (aj2 * gx[96] - 1 * gx[0]);
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * aj2 * gz[640];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[640];
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * (ai2 * gz[896] - 1 * gz[864]) - 1 * (ai2 * gz[32] - 1 * gz[0]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[672] - 1 * gx[576]);
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * aj2 * gz[928] - 1 * aj2 * gz[64];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[208];
                    giy = ai2 * gy[16];
                    giz = (ai2 * gz[464] - 1 * gz[432]);
                    gjx = (aj2 * gx[240] - 1 * gx[144]);
                    gjy = aj2 * gy[48];
                    gjz = aj2 * gz[496];
                    gkx = (ak2 * gx[336] - 1 * gx[48]);
                    gky = ak2 * gy[144];
                    gkz = ak2 * gz[592];
                    glx = al2 * gx[624];
                    gly = al2 * gy[432];
                    glz = (al2 * gz[880] - 1 * gz[16]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1152];
                    Ix = gx[64];
                    Iy = gy[0];
                    Iz = gz[576];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[224] - 1 * gx[192]);
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * ai2 * gz[736] - 1 * ai2 * gz[448];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[256] - 1 * gx[160]);
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * aj2 * gz[768] - 1 * aj2 * gz[480];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[512] - 1 * gx[480]);
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * ai2 * gz[1024] - 1 * ai2 * gz[160];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[544] - 1 * gx[448]);
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * aj2 * gz[1056] - 1 * aj2 * gz[192];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[80] - 1 * gx[48]);
                    giy = ai2 * gy[16];
                    giz = ai2 * gz[592];
                    gjx = (aj2 * gx[112] - 1 * gx[16]);
                    gjy = aj2 * gy[48];
                    gjz = aj2 * gz[624];
                    gkx = ak2 * gx[208];
                    gky = ak2 * gy[144];
                    gkz = (ak2 * gz[720] - 1 * gz[432]);
                    glx = al2 * gx[496];
                    gly = al2 * gy[432];
                    glz = (al2 * gz[1008] - 1 * gz[144]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 9:
                    dd = dd_cache[144];
                    Ix = gx[496];
                    Iy = gy[144];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[656] - 1 * gx[624]);
                    giky = ak2 * ai2 * gy[304] - 1 * ai2 * gy[16];
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[688] - 1 * gx[592]);
                    gjky = ak2 * aj2 * gy[336] - 1 * aj2 * gy[48];
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[944] - 1 * gx[912]) - 1 * (ai2 * gx[80] - 1 * gx[48]);
                    gily = al2 * ai2 * gy[592];
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[976] - 1 * gx[880]) - 1 * (aj2 * gx[112] - 1 * gx[16]);
                    gjly = al2 * aj2 * gy[624];
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[512] - 1 * gx[480]);
                    giy = ai2 * gy[160];
                    giz = ai2 * gz[16];
                    gjx = (aj2 * gx[544] - 1 * gx[448]);
                    gjy = aj2 * gy[192];
                    gjz = aj2 * gz[48];
                    gkx = ak2 * gx[640];
                    gky = (ak2 * gy[288] - 1 * gy[0]);
                    gkz = ak2 * gz[144];
                    glx = (al2 * gx[928] - 1 * gx[64]);
                    gly = al2 * gy[576];
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[400];
                    Ix = gx[432];
                    Iy = gy[16];
                    Iz = gz[192];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[592];
                    giky = ak2 * (ai2 * gy[176] - 1 * gy[144]);
                    gikz = ak2 * ai2 * gz[352] - 1 * ai2 * gz[64];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[624];
                    gjky = ak2 * aj2 * gy[208];
                    gjkz = ak2 * (aj2 * gz[384] - 1 * gz[288]) - 1 * (aj2 * gz[96] - 1 * gz[0]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[880] - 1 * ai2 * gx[16];
                    gily = al2 * (ai2 * gy[464] - 1 * gy[432]);
                    gilz = al2 * ai2 * gz[640];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[912] - 1 * aj2 * gx[48];
                    gjly = al2 * aj2 * gy[496];
                    gjlz = al2 * (aj2 * gz[672] - 1 * gz[576]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[448];
                    giy = (ai2 * gy[32] - 1 * gy[0]);
                    giz = ai2 * gz[208];
                    gjx = aj2 * gx[480];
                    gjy = aj2 * gy[64];
                    gjz = (aj2 * gz[240] - 1 * gz[144]);
                    gkx = ak2 * gx[576];
                    gky = ak2 * gy[160];
                    gkz = (ak2 * gz[336] - 1 * gz[48]);
                    glx = (al2 * gx[864] - 1 * gx[0]);
                    gly = al2 * gy[448];
                    glz = al2 * gz[624];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[656];
                    Ix = gx[0];
                    Iy = gy[624];
                    Iz = gz[16];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * ai2 * gy[784] - 1 * ai2 * gy[496];
                    gikz = ak2 * (ai2 * gz[176] - 1 * gz[144]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * (aj2 * gy[816] - 1 * gy[720]) - 1 * (aj2 * gy[528] - 1 * gy[432]);
                    gjkz = ak2 * aj2 * gz[208];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * ai2 * gy[1072] - 1 * ai2 * gy[208];
                    gilz = al2 * (ai2 * gz[464] - 1 * gz[432]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * (aj2 * gy[1104] - 1 * gy[1008]) - 1 * (aj2 * gy[240] - 1 * gy[144]);
                    gjlz = al2 * aj2 * gz[496];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = ai2 * gy[640];
                    giz = (ai2 * gz[32] - 1 * gz[0]);
                    gjx = aj2 * gx[48];
                    gjy = (aj2 * gy[672] - 1 * gy[576]);
                    gjz = aj2 * gz[64];
                    gkx = ak2 * gx[144];
                    gky = (ak2 * gy[768] - 1 * gy[480]);
                    gkz = ak2 * gz[160];
                    glx = al2 * gx[432];
                    gly = (al2 * gy[1056] - 1 * gy[192]);
                    glz = al2 * gz[448];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[912];
                    Ix = gx[160];
                    Iy = gy[48];
                    Iz = gz[432];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[320] - 1 * gx[288]) - 1 * (ai2 * gx[32] - 1 * gx[0]);
                    giky = ak2 * ai2 * gy[208];
                    gikz = ak2 * ai2 * gz[592];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[352] - 1 * aj2 * gx[64];
                    gjky = ak2 * (aj2 * gy[240] - 1 * gy[144]);
                    gjkz = ak2 * aj2 * gz[624];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[608] - 1 * gx[576]);
                    gily = al2 * ai2 * gy[496];
                    gilz = al2 * ai2 * gz[880] - 1 * ai2 * gz[16];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[640];
                    gjly = al2 * (aj2 * gy[528] - 1 * gy[432]);
                    gjlz = al2 * aj2 * gz[912] - 1 * aj2 * gz[48];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[176] - 1 * gx[144]);
                    giy = ai2 * gy[64];
                    giz = ai2 * gz[448];
                    gjx = aj2 * gx[208];
                    gjy = (aj2 * gy[96] - 1 * gy[0]);
                    gjz = aj2 * gz[480];
                    gkx = (ak2 * gx[304] - 1 * gx[16]);
                    gky = ak2 * gy[192];
                    gkz = ak2 * gz[576];
                    glx = al2 * gx[592];
                    gly = al2 * gy[480];
                    glz = (al2 * gz[864] - 1 * gz[0]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1168];
                    Ix = gx[48];
                    Iy = gy[16];
                    Iz = gz[576];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[208];
                    giky = ak2 * (ai2 * gy[176] - 1 * gy[144]);
                    gikz = ak2 * ai2 * gz[736] - 1 * ai2 * gz[448];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[240] - 1 * gx[144]);
                    gjky = ak2 * aj2 * gy[208];
                    gjkz = ak2 * aj2 * gz[768] - 1 * aj2 * gz[480];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[496];
                    gily = al2 * (ai2 * gy[464] - 1 * gy[432]);
                    gilz = al2 * ai2 * gz[1024] - 1 * ai2 * gz[160];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[528] - 1 * gx[432]);
                    gjly = al2 * aj2 * gy[496];
                    gjlz = al2 * aj2 * gz[1056] - 1 * aj2 * gz[192];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[64];
                    giy = (ai2 * gy[32] - 1 * gy[0]);
                    giz = ai2 * gz[592];
                    gjx = (aj2 * gx[96] - 1 * gx[0]);
                    gjy = aj2 * gy[64];
                    gjz = aj2 * gz[624];
                    gkx = ak2 * gx[192];
                    gky = ak2 * gy[160];
                    gkz = (ak2 * gz[720] - 1 * gz[432]);
                    glx = al2 * gx[480];
                    gly = al2 * gy[448];
                    glz = (al2 * gz[1008] - 1 * gz[144]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 10:
                    dd = dd_cache[160];
                    Ix = gx[480];
                    Iy = gy[160];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[640];
                    giky = ak2 * (ai2 * gy[320] - 1 * gy[288]) - 1 * (ai2 * gy[32] - 1 * gy[0]);
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[672] - 1 * gx[576]);
                    gjky = ak2 * aj2 * gy[352] - 1 * aj2 * gy[64];
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[928] - 1 * ai2 * gx[64];
                    gily = al2 * (ai2 * gy[608] - 1 * gy[576]);
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[960] - 1 * gx[864]) - 1 * (aj2 * gx[96] - 1 * gx[0]);
                    gjly = al2 * aj2 * gy[640];
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[496];
                    giy = (ai2 * gy[176] - 1 * gy[144]);
                    giz = ai2 * gz[16];
                    gjx = (aj2 * gx[528] - 1 * gx[432]);
                    gjy = aj2 * gy[208];
                    gjz = aj2 * gz[48];
                    gkx = ak2 * gx[624];
                    gky = (ak2 * gy[304] - 1 * gy[16]);
                    gkz = ak2 * gz[144];
                    glx = (al2 * gx[912] - 1 * gx[48]);
                    gly = al2 * gy[592];
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[416];
                    Ix = gx[432];
                    Iy = gy[0];
                    Iz = gz[208];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[592];
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * (ai2 * gz[368] - 1 * gz[336]) - 1 * (ai2 * gz[80] - 1 * gz[48]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[624];
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * (aj2 * gz[400] - 1 * gz[304]) - 1 * (aj2 * gz[112] - 1 * gz[16]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[880] - 1 * ai2 * gx[16];
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * (ai2 * gz[656] - 1 * gz[624]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[912] - 1 * aj2 * gx[48];
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * (aj2 * gz[688] - 1 * gz[592]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[448];
                    giy = ai2 * gy[16];
                    giz = (ai2 * gz[224] - 1 * gz[192]);
                    gjx = aj2 * gx[480];
                    gjy = aj2 * gy[48];
                    gjz = (aj2 * gz[256] - 1 * gz[160]);
                    gkx = ak2 * gx[576];
                    gky = ak2 * gy[144];
                    gkz = (ak2 * gz[352] - 1 * gz[64]);
                    glx = (al2 * gx[864] - 1 * gx[0]);
                    gly = al2 * gy[432];
                    glz = al2 * gz[640];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[672];
                    Ix = gx[16];
                    Iy = gy[576];
                    Iz = gz[48];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[176] - 1 * gx[144]);
                    giky = ak2 * ai2 * gy[736] - 1 * ai2 * gy[448];
                    gikz = ak2 * ai2 * gz[208];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[208];
                    gjky = ak2 * aj2 * gy[768] - 1 * aj2 * gy[480];
                    gjkz = ak2 * (aj2 * gz[240] - 1 * gz[144]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[464] - 1 * gx[432]);
                    gily = al2 * ai2 * gy[1024] - 1 * ai2 * gy[160];
                    gilz = al2 * ai2 * gz[496];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[496];
                    gjly = al2 * aj2 * gy[1056] - 1 * aj2 * gy[192];
                    gjlz = al2 * (aj2 * gz[528] - 1 * gz[432]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[32] - 1 * gx[0]);
                    giy = ai2 * gy[592];
                    giz = ai2 * gz[64];
                    gjx = aj2 * gx[64];
                    gjy = aj2 * gy[624];
                    gjz = (aj2 * gz[96] - 1 * gz[0]);
                    gkx = ak2 * gx[160];
                    gky = (ak2 * gy[720] - 1 * gy[432]);
                    gkz = ak2 * gz[192];
                    glx = al2 * gx[448];
                    gly = (al2 * gy[1008] - 1 * gy[144]);
                    glz = al2 * gz[480];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[928];
                    Ix = gx[144];
                    Iy = gy[64];
                    Iz = gz[432];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[304] - 1 * ai2 * gx[16];
                    giky = ak2 * (ai2 * gy[224] - 1 * gy[192]);
                    gikz = ak2 * ai2 * gz[592];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[336] - 1 * aj2 * gx[48];
                    gjky = ak2 * (aj2 * gy[256] - 1 * gy[160]);
                    gjkz = ak2 * aj2 * gz[624];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[592];
                    gily = al2 * (ai2 * gy[512] - 1 * gy[480]);
                    gilz = al2 * ai2 * gz[880] - 1 * ai2 * gz[16];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[624];
                    gjly = al2 * (aj2 * gy[544] - 1 * gy[448]);
                    gjlz = al2 * aj2 * gz[912] - 1 * aj2 * gz[48];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[160];
                    giy = (ai2 * gy[80] - 1 * gy[48]);
                    giz = ai2 * gz[448];
                    gjx = aj2 * gx[192];
                    gjy = (aj2 * gy[112] - 1 * gy[16]);
                    gjz = aj2 * gz[480];
                    gkx = (ak2 * gx[288] - 1 * gx[0]);
                    gky = ak2 * gy[208];
                    gkz = ak2 * gz[576];
                    glx = al2 * gx[576];
                    gly = al2 * gy[496];
                    glz = (al2 * gz[864] - 1 * gz[0]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1184];
                    Ix = gx[48];
                    Iy = gy[0];
                    Iz = gz[592];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[208];
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * (ai2 * gz[752] - 1 * gz[720]) - 1 * (ai2 * gz[464] - 1 * gz[432]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[240] - 1 * gx[144]);
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * aj2 * gz[784] - 1 * aj2 * gz[496];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[496];
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * (ai2 * gz[1040] - 1 * gz[1008]) - 1 * (ai2 * gz[176] - 1 * gz[144]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[528] - 1 * gx[432]);
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * aj2 * gz[1072] - 1 * aj2 * gz[208];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[64];
                    giy = ai2 * gy[16];
                    giz = (ai2 * gz[608] - 1 * gz[576]);
                    gjx = (aj2 * gx[96] - 1 * gx[0]);
                    gjy = aj2 * gy[48];
                    gjz = aj2 * gz[640];
                    gkx = ak2 * gx[192];
                    gky = ak2 * gy[144];
                    gkz = (ak2 * gz[736] - 1 * gz[448]);
                    glx = al2 * gx[480];
                    gly = al2 * gy[432];
                    glz = (al2 * gz[1024] - 1 * gz[160]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 11:
                    dd = dd_cache[176];
                    Ix = gx[480];
                    Iy = gy[144];
                    Iz = gz[16];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[640];
                    giky = ak2 * ai2 * gy[304] - 1 * ai2 * gy[16];
                    gikz = ak2 * (ai2 * gz[176] - 1 * gz[144]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[672] - 1 * gx[576]);
                    gjky = ak2 * aj2 * gy[336] - 1 * aj2 * gy[48];
                    gjkz = ak2 * aj2 * gz[208];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[928] - 1 * ai2 * gx[64];
                    gily = al2 * ai2 * gy[592];
                    gilz = al2 * (ai2 * gz[464] - 1 * gz[432]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[960] - 1 * gx[864]) - 1 * (aj2 * gx[96] - 1 * gx[0]);
                    gjly = al2 * aj2 * gy[624];
                    gjlz = al2 * aj2 * gz[496];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[496];
                    giy = ai2 * gy[160];
                    giz = (ai2 * gz[32] - 1 * gz[0]);
                    gjx = (aj2 * gx[528] - 1 * gx[432]);
                    gjy = aj2 * gy[192];
                    gjz = aj2 * gz[64];
                    gkx = ak2 * gx[624];
                    gky = (ak2 * gy[288] - 1 * gy[0]);
                    gkz = ak2 * gz[160];
                    glx = (al2 * gx[912] - 1 * gx[48]);
                    gly = al2 * gy[576];
                    glz = al2 * gz[448];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[432];
                    Ix = gx[208];
                    Iy = gy[432];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[368] - 1 * gx[336]) - 1 * (ai2 * gx[80] - 1 * gx[48]);
                    giky = ak2 * ai2 * gy[592];
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[400] - 1 * gx[304]) - 1 * (aj2 * gx[112] - 1 * gx[16]);
                    gjky = ak2 * aj2 * gy[624];
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[656] - 1 * gx[624]);
                    gily = al2 * ai2 * gy[880] - 1 * ai2 * gy[16];
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[688] - 1 * gx[592]);
                    gjly = al2 * aj2 * gy[912] - 1 * aj2 * gy[48];
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[224] - 1 * gx[192]);
                    giy = ai2 * gy[448];
                    giz = ai2 * gz[16];
                    gjx = (aj2 * gx[256] - 1 * gx[160]);
                    gjy = aj2 * gy[480];
                    gjz = aj2 * gz[48];
                    gkx = (ak2 * gx[352] - 1 * gx[64]);
                    gky = ak2 * gy[576];
                    gkz = ak2 * gz[144];
                    glx = al2 * gx[640];
                    gly = (al2 * gy[864] - 1 * gy[0]);
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[688];
                    Ix = gx[0];
                    Iy = gy[592];
                    Iz = gz[48];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * (ai2 * gy[752] - 1 * gy[720]) - 1 * (ai2 * gy[464] - 1 * gy[432]);
                    gikz = ak2 * ai2 * gz[208];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * aj2 * gy[784] - 1 * aj2 * gy[496];
                    gjkz = ak2 * (aj2 * gz[240] - 1 * gz[144]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * (ai2 * gy[1040] - 1 * gy[1008]) - 1 * (ai2 * gy[176] - 1 * gy[144]);
                    gilz = al2 * ai2 * gz[496];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * aj2 * gy[1072] - 1 * aj2 * gy[208];
                    gjlz = al2 * (aj2 * gz[528] - 1 * gz[432]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = (ai2 * gy[608] - 1 * gy[576]);
                    giz = ai2 * gz[64];
                    gjx = aj2 * gx[48];
                    gjy = aj2 * gy[640];
                    gjz = (aj2 * gz[96] - 1 * gz[0]);
                    gkx = ak2 * gx[144];
                    gky = (ak2 * gy[736] - 1 * gy[448]);
                    gkz = ak2 * gz[192];
                    glx = al2 * gx[432];
                    gly = (al2 * gy[1024] - 1 * gy[160]);
                    glz = al2 * gz[480];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[944];
                    Ix = gx[144];
                    Iy = gy[48];
                    Iz = gz[448];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[304] - 1 * ai2 * gx[16];
                    giky = ak2 * ai2 * gy[208];
                    gikz = ak2 * (ai2 * gz[608] - 1 * gz[576]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[336] - 1 * aj2 * gx[48];
                    gjky = ak2 * (aj2 * gy[240] - 1 * gy[144]);
                    gjkz = ak2 * aj2 * gz[640];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[592];
                    gily = al2 * ai2 * gy[496];
                    gilz = al2 * (ai2 * gz[896] - 1 * gz[864]) - 1 * (ai2 * gz[32] - 1 * gz[0]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[624];
                    gjly = al2 * (aj2 * gy[528] - 1 * gy[432]);
                    gjlz = al2 * aj2 * gz[928] - 1 * aj2 * gz[64];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[160];
                    giy = ai2 * gy[64];
                    giz = (ai2 * gz[464] - 1 * gz[432]);
                    gjx = aj2 * gx[192];
                    gjy = (aj2 * gy[96] - 1 * gy[0]);
                    gjz = aj2 * gz[496];
                    gkx = (ak2 * gx[288] - 1 * gx[0]);
                    gky = ak2 * gy[192];
                    gkz = ak2 * gz[592];
                    glx = al2 * gx[576];
                    gly = al2 * gy[480];
                    glz = (al2 * gz[880] - 1 * gz[16]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1200];
                    Ix = gx[16];
                    Iy = gy[48];
                    Iz = gz[576];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[176] - 1 * gx[144]);
                    giky = ak2 * ai2 * gy[208];
                    gikz = ak2 * ai2 * gz[736] - 1 * ai2 * gz[448];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[208];
                    gjky = ak2 * (aj2 * gy[240] - 1 * gy[144]);
                    gjkz = ak2 * aj2 * gz[768] - 1 * aj2 * gz[480];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[464] - 1 * gx[432]);
                    gily = al2 * ai2 * gy[496];
                    gilz = al2 * ai2 * gz[1024] - 1 * ai2 * gz[160];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[496];
                    gjly = al2 * (aj2 * gy[528] - 1 * gy[432]);
                    gjlz = al2 * aj2 * gz[1056] - 1 * aj2 * gz[192];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[32] - 1 * gx[0]);
                    giy = ai2 * gy[64];
                    giz = ai2 * gz[592];
                    gjx = aj2 * gx[64];
                    gjy = (aj2 * gy[96] - 1 * gy[0]);
                    gjz = aj2 * gz[624];
                    gkx = ak2 * gx[160];
                    gky = ak2 * gy[192];
                    gkz = (ak2 * gz[720] - 1 * gz[432]);
                    glx = al2 * gx[448];
                    gly = al2 * gy[480];
                    glz = (al2 * gz[1008] - 1 * gz[144]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 12:
                    dd = dd_cache[192];
                    Ix = gx[448];
                    Iy = gy[192];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[608] - 1 * gx[576]);
                    giky = ak2 * ai2 * gy[352] - 1 * ai2 * gy[64];
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[640];
                    gjky = ak2 * (aj2 * gy[384] - 1 * gy[288]) - 1 * (aj2 * gy[96] - 1 * gy[0]);
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[896] - 1 * gx[864]) - 1 * (ai2 * gx[32] - 1 * gx[0]);
                    gily = al2 * ai2 * gy[640];
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[928] - 1 * aj2 * gx[64];
                    gjly = al2 * (aj2 * gy[672] - 1 * gy[576]);
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[464] - 1 * gx[432]);
                    giy = ai2 * gy[208];
                    giz = ai2 * gz[16];
                    gjx = aj2 * gx[496];
                    gjy = (aj2 * gy[240] - 1 * gy[144]);
                    gjz = aj2 * gz[48];
                    gkx = ak2 * gx[592];
                    gky = (ak2 * gy[336] - 1 * gy[48]);
                    gkz = ak2 * gz[144];
                    glx = (al2 * gx[880] - 1 * gx[16]);
                    gly = al2 * gy[624];
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[448];
                    Ix = gx[192];
                    Iy = gy[448];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[352] - 1 * ai2 * gx[64];
                    giky = ak2 * (ai2 * gy[608] - 1 * gy[576]);
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[384] - 1 * gx[288]) - 1 * (aj2 * gx[96] - 1 * gx[0]);
                    gjky = ak2 * aj2 * gy[640];
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[640];
                    gily = al2 * (ai2 * gy[896] - 1 * gy[864]) - 1 * (ai2 * gy[32] - 1 * gy[0]);
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[672] - 1 * gx[576]);
                    gjly = al2 * aj2 * gy[928] - 1 * aj2 * gy[64];
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[208];
                    giy = (ai2 * gy[464] - 1 * gy[432]);
                    giz = ai2 * gz[16];
                    gjx = (aj2 * gx[240] - 1 * gx[144]);
                    gjy = aj2 * gy[496];
                    gjz = aj2 * gz[48];
                    gkx = (ak2 * gx[336] - 1 * gx[48]);
                    gky = ak2 * gy[592];
                    gkz = ak2 * gz[144];
                    glx = al2 * gx[624];
                    gly = (al2 * gy[880] - 1 * gy[16]);
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[704];
                    Ix = gx[0];
                    Iy = gy[576];
                    Iz = gz[64];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * ai2 * gy[736] - 1 * ai2 * gy[448];
                    gikz = ak2 * (ai2 * gz[224] - 1 * gz[192]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * aj2 * gy[768] - 1 * aj2 * gy[480];
                    gjkz = ak2 * (aj2 * gz[256] - 1 * gz[160]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * ai2 * gy[1024] - 1 * ai2 * gy[160];
                    gilz = al2 * (ai2 * gz[512] - 1 * gz[480]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * aj2 * gy[1056] - 1 * aj2 * gy[192];
                    gjlz = al2 * (aj2 * gz[544] - 1 * gz[448]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = ai2 * gy[592];
                    giz = (ai2 * gz[80] - 1 * gz[48]);
                    gjx = aj2 * gx[48];
                    gjy = aj2 * gy[624];
                    gjz = (aj2 * gz[112] - 1 * gz[16]);
                    gkx = ak2 * gx[144];
                    gky = (ak2 * gy[720] - 1 * gy[432]);
                    gkz = ak2 * gz[208];
                    glx = al2 * gx[432];
                    gly = (al2 * gy[1008] - 1 * gy[144]);
                    glz = al2 * gz[496];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[960];
                    Ix = gx[160];
                    Iy = gy[0];
                    Iz = gz[480];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[320] - 1 * gx[288]) - 1 * (ai2 * gx[32] - 1 * gx[0]);
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * ai2 * gz[640];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[352] - 1 * aj2 * gx[64];
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * (aj2 * gz[672] - 1 * gz[576]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[608] - 1 * gx[576]);
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * ai2 * gz[928] - 1 * ai2 * gz[64];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[640];
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * (aj2 * gz[960] - 1 * gz[864]) - 1 * (aj2 * gz[96] - 1 * gz[0]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[176] - 1 * gx[144]);
                    giy = ai2 * gy[16];
                    giz = ai2 * gz[496];
                    gjx = aj2 * gx[208];
                    gjy = aj2 * gy[48];
                    gjz = (aj2 * gz[528] - 1 * gz[432]);
                    gkx = (ak2 * gx[304] - 1 * gx[16]);
                    gky = ak2 * gy[144];
                    gkz = ak2 * gz[624];
                    glx = al2 * gx[592];
                    gly = al2 * gy[432];
                    glz = (al2 * gz[912] - 1 * gz[48]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1216];
                    Ix = gx[0];
                    Iy = gy[64];
                    Iz = gz[576];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * (ai2 * gy[224] - 1 * gy[192]);
                    gikz = ak2 * ai2 * gz[736] - 1 * ai2 * gz[448];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * (aj2 * gy[256] - 1 * gy[160]);
                    gjkz = ak2 * aj2 * gz[768] - 1 * aj2 * gz[480];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * (ai2 * gy[512] - 1 * gy[480]);
                    gilz = al2 * ai2 * gz[1024] - 1 * ai2 * gz[160];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * (aj2 * gy[544] - 1 * gy[448]);
                    gjlz = al2 * aj2 * gz[1056] - 1 * aj2 * gz[192];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = (ai2 * gy[80] - 1 * gy[48]);
                    giz = ai2 * gz[592];
                    gjx = aj2 * gx[48];
                    gjy = (aj2 * gy[112] - 1 * gy[16]);
                    gjz = aj2 * gz[624];
                    gkx = ak2 * gx[144];
                    gky = ak2 * gy[208];
                    gkz = (ak2 * gz[720] - 1 * gz[432]);
                    glx = al2 * gx[432];
                    gly = al2 * gy[496];
                    glz = (al2 * gz[1008] - 1 * gz[144]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 13:
                    dd = dd_cache[208];
                    Ix = gx[432];
                    Iy = gy[208];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[592];
                    giky = ak2 * (ai2 * gy[368] - 1 * gy[336]) - 1 * (ai2 * gy[80] - 1 * gy[48]);
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[624];
                    gjky = ak2 * (aj2 * gy[400] - 1 * gy[304]) - 1 * (aj2 * gy[112] - 1 * gy[16]);
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[880] - 1 * ai2 * gx[16];
                    gily = al2 * (ai2 * gy[656] - 1 * gy[624]);
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[912] - 1 * aj2 * gx[48];
                    gjly = al2 * (aj2 * gy[688] - 1 * gy[592]);
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[448];
                    giy = (ai2 * gy[224] - 1 * gy[192]);
                    giz = ai2 * gz[16];
                    gjx = aj2 * gx[480];
                    gjy = (aj2 * gy[256] - 1 * gy[160]);
                    gjz = aj2 * gz[48];
                    gkx = ak2 * gx[576];
                    gky = (ak2 * gy[352] - 1 * gy[64]);
                    gkz = ak2 * gz[144];
                    glx = (al2 * gx[864] - 1 * gx[0]);
                    gly = al2 * gy[640];
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[464];
                    Ix = gx[192];
                    Iy = gy[432];
                    Iz = gz[16];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[352] - 1 * ai2 * gx[64];
                    giky = ak2 * ai2 * gy[592];
                    gikz = ak2 * (ai2 * gz[176] - 1 * gz[144]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[384] - 1 * gx[288]) - 1 * (aj2 * gx[96] - 1 * gx[0]);
                    gjky = ak2 * aj2 * gy[624];
                    gjkz = ak2 * aj2 * gz[208];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[640];
                    gily = al2 * ai2 * gy[880] - 1 * ai2 * gy[16];
                    gilz = al2 * (ai2 * gz[464] - 1 * gz[432]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[672] - 1 * gx[576]);
                    gjly = al2 * aj2 * gy[912] - 1 * aj2 * gy[48];
                    gjlz = al2 * aj2 * gz[496];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[208];
                    giy = ai2 * gy[448];
                    giz = (ai2 * gz[32] - 1 * gz[0]);
                    gjx = (aj2 * gx[240] - 1 * gx[144]);
                    gjy = aj2 * gy[480];
                    gjz = aj2 * gz[64];
                    gkx = (ak2 * gx[336] - 1 * gx[48]);
                    gky = ak2 * gy[576];
                    gkz = ak2 * gz[160];
                    glx = al2 * gx[624];
                    gly = (al2 * gy[864] - 1 * gy[0]);
                    glz = al2 * gz[448];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[720];
                    Ix = gx[64];
                    Iy = gy[432];
                    Iz = gz[144];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[224] - 1 * gx[192]);
                    giky = ak2 * ai2 * gy[592];
                    gikz = ak2 * ai2 * gz[304] - 1 * ai2 * gz[16];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[256] - 1 * gx[160]);
                    gjky = ak2 * aj2 * gy[624];
                    gjkz = ak2 * aj2 * gz[336] - 1 * aj2 * gz[48];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[512] - 1 * gx[480]);
                    gily = al2 * ai2 * gy[880] - 1 * ai2 * gy[16];
                    gilz = al2 * ai2 * gz[592];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[544] - 1 * gx[448]);
                    gjly = al2 * aj2 * gy[912] - 1 * aj2 * gy[48];
                    gjlz = al2 * aj2 * gz[624];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[80] - 1 * gx[48]);
                    giy = ai2 * gy[448];
                    giz = ai2 * gz[160];
                    gjx = (aj2 * gx[112] - 1 * gx[16]);
                    gjy = aj2 * gy[480];
                    gjz = aj2 * gz[192];
                    gkx = ak2 * gx[208];
                    gky = ak2 * gy[576];
                    gkz = (ak2 * gz[288] - 1 * gz[0]);
                    glx = al2 * gx[496];
                    gly = (al2 * gy[864] - 1 * gy[0]);
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[976];
                    Ix = gx[144];
                    Iy = gy[16];
                    Iz = gz[480];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[304] - 1 * ai2 * gx[16];
                    giky = ak2 * (ai2 * gy[176] - 1 * gy[144]);
                    gikz = ak2 * ai2 * gz[640];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[336] - 1 * aj2 * gx[48];
                    gjky = ak2 * aj2 * gy[208];
                    gjkz = ak2 * (aj2 * gz[672] - 1 * gz[576]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[592];
                    gily = al2 * (ai2 * gy[464] - 1 * gy[432]);
                    gilz = al2 * ai2 * gz[928] - 1 * ai2 * gz[64];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[624];
                    gjly = al2 * aj2 * gy[496];
                    gjlz = al2 * (aj2 * gz[960] - 1 * gz[864]) - 1 * (aj2 * gz[96] - 1 * gz[0]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[160];
                    giy = (ai2 * gy[32] - 1 * gy[0]);
                    giz = ai2 * gz[496];
                    gjx = aj2 * gx[192];
                    gjy = aj2 * gy[64];
                    gjz = (aj2 * gz[528] - 1 * gz[432]);
                    gkx = (ak2 * gx[288] - 1 * gx[0]);
                    gky = ak2 * gy[160];
                    gkz = ak2 * gz[624];
                    glx = al2 * gx[576];
                    gly = al2 * gy[448];
                    glz = (al2 * gz[912] - 1 * gz[48]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1232];
                    Ix = gx[0];
                    Iy = gy[48];
                    Iz = gz[592];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * ai2 * gy[208];
                    gikz = ak2 * (ai2 * gz[752] - 1 * gz[720]) - 1 * (ai2 * gz[464] - 1 * gz[432]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * (aj2 * gy[240] - 1 * gy[144]);
                    gjkz = ak2 * aj2 * gz[784] - 1 * aj2 * gz[496];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * ai2 * gy[496];
                    gilz = al2 * (ai2 * gz[1040] - 1 * gz[1008]) - 1 * (ai2 * gz[176] - 1 * gz[144]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * (aj2 * gy[528] - 1 * gy[432]);
                    gjlz = al2 * aj2 * gz[1072] - 1 * aj2 * gz[208];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = ai2 * gy[64];
                    giz = (ai2 * gz[608] - 1 * gz[576]);
                    gjx = aj2 * gx[48];
                    gjy = (aj2 * gy[96] - 1 * gy[0]);
                    gjz = aj2 * gz[640];
                    gkx = ak2 * gx[144];
                    gky = ak2 * gy[192];
                    gkz = (ak2 * gz[736] - 1 * gz[448]);
                    glx = al2 * gx[432];
                    gly = al2 * gy[480];
                    glz = (al2 * gz[1024] - 1 * gz[160]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 14:
                    dd = dd_cache[224];
                    Ix = gx[432];
                    Iy = gy[192];
                    Iz = gz[16];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[592];
                    giky = ak2 * ai2 * gy[352] - 1 * ai2 * gy[64];
                    gikz = ak2 * (ai2 * gz[176] - 1 * gz[144]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[624];
                    gjky = ak2 * (aj2 * gy[384] - 1 * gy[288]) - 1 * (aj2 * gy[96] - 1 * gy[0]);
                    gjkz = ak2 * aj2 * gz[208];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[880] - 1 * ai2 * gx[16];
                    gily = al2 * ai2 * gy[640];
                    gilz = al2 * (ai2 * gz[464] - 1 * gz[432]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[912] - 1 * aj2 * gx[48];
                    gjly = al2 * (aj2 * gy[672] - 1 * gy[576]);
                    gjlz = al2 * aj2 * gz[496];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[448];
                    giy = ai2 * gy[208];
                    giz = (ai2 * gz[32] - 1 * gz[0]);
                    gjx = aj2 * gx[480];
                    gjy = (aj2 * gy[240] - 1 * gy[144]);
                    gjz = aj2 * gz[64];
                    gkx = ak2 * gx[576];
                    gky = (ak2 * gy[336] - 1 * gy[48]);
                    gkz = ak2 * gz[160];
                    glx = (al2 * gx[864] - 1 * gx[0]);
                    gly = al2 * gy[624];
                    glz = al2 * gz[448];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[480];
                    Ix = gx[160];
                    Iy = gy[480];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[320] - 1 * gx[288]) - 1 * (ai2 * gx[32] - 1 * gx[0]);
                    giky = ak2 * ai2 * gy[640];
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[352] - 1 * aj2 * gx[64];
                    gjky = ak2 * (aj2 * gy[672] - 1 * gy[576]);
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[608] - 1 * gx[576]);
                    gily = al2 * ai2 * gy[928] - 1 * ai2 * gy[64];
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[640];
                    gjly = al2 * (aj2 * gy[960] - 1 * gy[864]) - 1 * (aj2 * gy[96] - 1 * gy[0]);
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[176] - 1 * gx[144]);
                    giy = ai2 * gy[496];
                    giz = ai2 * gz[16];
                    gjx = aj2 * gx[208];
                    gjy = (aj2 * gy[528] - 1 * gy[432]);
                    gjz = aj2 * gz[48];
                    gkx = (ak2 * gx[304] - 1 * gx[16]);
                    gky = ak2 * gy[624];
                    gkz = ak2 * gz[144];
                    glx = al2 * gx[592];
                    gly = (al2 * gy[912] - 1 * gy[48]);
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[736];
                    Ix = gx[48];
                    Iy = gy[448];
                    Iz = gz[144];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[208];
                    giky = ak2 * (ai2 * gy[608] - 1 * gy[576]);
                    gikz = ak2 * ai2 * gz[304] - 1 * ai2 * gz[16];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[240] - 1 * gx[144]);
                    gjky = ak2 * aj2 * gy[640];
                    gjkz = ak2 * aj2 * gz[336] - 1 * aj2 * gz[48];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[496];
                    gily = al2 * (ai2 * gy[896] - 1 * gy[864]) - 1 * (ai2 * gy[32] - 1 * gy[0]);
                    gilz = al2 * ai2 * gz[592];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[528] - 1 * gx[432]);
                    gjly = al2 * aj2 * gy[928] - 1 * aj2 * gy[64];
                    gjlz = al2 * aj2 * gz[624];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[64];
                    giy = (ai2 * gy[464] - 1 * gy[432]);
                    giz = ai2 * gz[160];
                    gjx = (aj2 * gx[96] - 1 * gx[0]);
                    gjy = aj2 * gy[496];
                    gjz = aj2 * gz[192];
                    gkx = ak2 * gx[192];
                    gky = ak2 * gy[592];
                    gkz = (ak2 * gz[288] - 1 * gz[0]);
                    glx = al2 * gx[480];
                    gly = (al2 * gy[880] - 1 * gy[16]);
                    glz = al2 * gz[576];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[992];
                    Ix = gx[144];
                    Iy = gy[0];
                    Iz = gz[496];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[304] - 1 * ai2 * gx[16];
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * (ai2 * gz[656] - 1 * gz[624]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[336] - 1 * aj2 * gx[48];
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * (aj2 * gz[688] - 1 * gz[592]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[592];
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * (ai2 * gz[944] - 1 * gz[912]) - 1 * (ai2 * gz[80] - 1 * gz[48]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[624];
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * (aj2 * gz[976] - 1 * gz[880]) - 1 * (aj2 * gz[112] - 1 * gz[16]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[160];
                    giy = ai2 * gy[16];
                    giz = (ai2 * gz[512] - 1 * gz[480]);
                    gjx = aj2 * gx[192];
                    gjy = aj2 * gy[48];
                    gjz = (aj2 * gz[544] - 1 * gz[448]);
                    gkx = (ak2 * gx[288] - 1 * gx[0]);
                    gky = ak2 * gy[144];
                    gkz = ak2 * gz[640];
                    glx = al2 * gx[576];
                    gly = al2 * gy[432];
                    glz = (al2 * gz[928] - 1 * gz[64]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1248];
                    Ix = gx[16];
                    Iy = gy[0];
                    Iz = gz[624];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[176] - 1 * gx[144]);
                    giky = ak2 * ai2 * gy[160];
                    gikz = ak2 * ai2 * gz[784] - 1 * ai2 * gz[496];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[208];
                    gjky = ak2 * aj2 * gy[192];
                    gjkz = ak2 * (aj2 * gz[816] - 1 * gz[720]) - 1 * (aj2 * gz[528] - 1 * gz[432]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[464] - 1 * gx[432]);
                    gily = al2 * ai2 * gy[448];
                    gilz = al2 * ai2 * gz[1072] - 1 * ai2 * gz[208];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[496];
                    gjly = al2 * aj2 * gy[480];
                    gjlz = al2 * (aj2 * gz[1104] - 1 * gz[1008]) - 1 * (aj2 * gz[240] - 1 * gz[144]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[32] - 1 * gx[0]);
                    giy = ai2 * gy[16];
                    giz = ai2 * gz[640];
                    gjx = aj2 * gx[64];
                    gjy = aj2 * gy[48];
                    gjz = (aj2 * gz[672] - 1 * gz[576]);
                    gkx = ak2 * gx[160];
                    gky = ak2 * gy[144];
                    gkz = (ak2 * gz[768] - 1 * gz[480]);
                    glx = al2 * gx[448];
                    gly = al2 * gy[432];
                    glz = (al2 * gz[1056] - 1 * gz[192]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    case 15:
                    dd = dd_cache[240];
                    Ix = gx[448];
                    Iy = gy[144];
                    Iz = gz[48];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[608] - 1 * gx[576]);
                    giky = ak2 * ai2 * gy[304] - 1 * ai2 * gy[16];
                    gikz = ak2 * ai2 * gz[208];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[640];
                    gjky = ak2 * aj2 * gy[336] - 1 * aj2 * gy[48];
                    gjkz = ak2 * (aj2 * gz[240] - 1 * gz[144]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[896] - 1 * gx[864]) - 1 * (ai2 * gx[32] - 1 * gx[0]);
                    gily = al2 * ai2 * gy[592];
                    gilz = al2 * ai2 * gz[496];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[928] - 1 * aj2 * gx[64];
                    gjly = al2 * aj2 * gy[624];
                    gjlz = al2 * (aj2 * gz[528] - 1 * gz[432]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[464] - 1 * gx[432]);
                    giy = ai2 * gy[160];
                    giz = ai2 * gz[64];
                    gjx = aj2 * gx[496];
                    gjy = aj2 * gy[192];
                    gjz = (aj2 * gz[96] - 1 * gz[0]);
                    gkx = ak2 * gx[592];
                    gky = (ak2 * gy[288] - 1 * gy[0]);
                    gkz = ak2 * gz[192];
                    glx = (al2 * gx[880] - 1 * gx[16]);
                    gly = al2 * gy[576];
                    glz = al2 * gz[480];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[496];
                    Ix = gx[144];
                    Iy = gy[496];
                    Iz = gz[0];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[304] - 1 * ai2 * gx[16];
                    giky = ak2 * (ai2 * gy[656] - 1 * gy[624]);
                    gikz = ak2 * ai2 * gz[160];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[336] - 1 * aj2 * gx[48];
                    gjky = ak2 * (aj2 * gy[688] - 1 * gy[592]);
                    gjkz = ak2 * aj2 * gz[192];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[592];
                    gily = al2 * (ai2 * gy[944] - 1 * gy[912]) - 1 * (ai2 * gy[80] - 1 * gy[48]);
                    gilz = al2 * ai2 * gz[448];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[624];
                    gjly = al2 * (aj2 * gy[976] - 1 * gy[880]) - 1 * (aj2 * gy[112] - 1 * gy[16]);
                    gjlz = al2 * aj2 * gz[480];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[160];
                    giy = (ai2 * gy[512] - 1 * gy[480]);
                    giz = ai2 * gz[16];
                    gjx = aj2 * gx[192];
                    gjy = (aj2 * gy[544] - 1 * gy[448]);
                    gjz = aj2 * gz[48];
                    gkx = (ak2 * gx[288] - 1 * gx[0]);
                    gky = ak2 * gy[640];
                    gkz = ak2 * gz[144];
                    glx = al2 * gx[576];
                    gly = (al2 * gy[928] - 1 * gy[64]);
                    glz = al2 * gz[432];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[752];
                    Ix = gx[48];
                    Iy = gy[432];
                    Iz = gz[160];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[208];
                    giky = ak2 * ai2 * gy[592];
                    gikz = ak2 * (ai2 * gz[320] - 1 * gz[288]) - 1 * (ai2 * gz[32] - 1 * gz[0]);
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[240] - 1 * gx[144]);
                    gjky = ak2 * aj2 * gy[624];
                    gjkz = ak2 * aj2 * gz[352] - 1 * aj2 * gz[64];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[496];
                    gily = al2 * ai2 * gy[880] - 1 * ai2 * gy[16];
                    gilz = al2 * (ai2 * gz[608] - 1 * gz[576]);
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[528] - 1 * gx[432]);
                    gjly = al2 * aj2 * gy[912] - 1 * aj2 * gy[48];
                    gjlz = al2 * aj2 * gz[640];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[64];
                    giy = ai2 * gy[448];
                    giz = (ai2 * gz[176] - 1 * gz[144]);
                    gjx = (aj2 * gx[96] - 1 * gx[0]);
                    gjy = aj2 * gy[480];
                    gjz = aj2 * gz[208];
                    gkx = ak2 * gx[192];
                    gky = ak2 * gy[576];
                    gkz = (ak2 * gz[304] - 1 * gz[16]);
                    glx = al2 * gx[480];
                    gly = (al2 * gy[864] - 1 * gy[0]);
                    glz = al2 * gz[592];
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1008];
                    Ix = gx[64];
                    Iy = gy[144];
                    Iz = gz[432];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * (ai2 * gx[224] - 1 * gx[192]);
                    giky = ak2 * ai2 * gy[304] - 1 * ai2 * gy[16];
                    gikz = ak2 * ai2 * gz[592];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * (aj2 * gx[256] - 1 * gx[160]);
                    gjky = ak2 * aj2 * gy[336] - 1 * aj2 * gy[48];
                    gjkz = ak2 * aj2 * gz[624];
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * (ai2 * gx[512] - 1 * gx[480]);
                    gily = al2 * ai2 * gy[592];
                    gilz = al2 * ai2 * gz[880] - 1 * ai2 * gz[16];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * (aj2 * gx[544] - 1 * gx[448]);
                    gjly = al2 * aj2 * gy[624];
                    gjlz = al2 * aj2 * gz[912] - 1 * aj2 * gz[48];
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = (ai2 * gx[80] - 1 * gx[48]);
                    giy = ai2 * gy[160];
                    giz = ai2 * gz[448];
                    gjx = (aj2 * gx[112] - 1 * gx[16]);
                    gjy = aj2 * gy[192];
                    gjz = aj2 * gz[480];
                    gkx = ak2 * gx[208];
                    gky = (ak2 * gy[288] - 1 * gy[0]);
                    gkz = ak2 * gz[576];
                    glx = al2 * gx[496];
                    gly = al2 * gy[576];
                    glz = (al2 * gz[864] - 1 * gz[0]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    dd = dd_cache[1264];
                    Ix = gx[0];
                    Iy = gy[16];
                    Iz = gz[624];
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    Ix *= dd;
                    Iy *= dd;
                    Iz *= dd;
                    gikx = ak2 * ai2 * gx[160];
                    giky = ak2 * (ai2 * gy[176] - 1 * gy[144]);
                    gikz = ak2 * ai2 * gz[784] - 1 * ai2 * gz[496];
                    v_ixkx += gikx * prod_yz;
                    v_iyky += giky * prod_xz;
                    v_izkz += gikz * prod_xy;
                    gjkx = ak2 * aj2 * gx[192];
                    gjky = ak2 * aj2 * gy[208];
                    gjkz = ak2 * (aj2 * gz[816] - 1 * gz[720]) - 1 * (aj2 * gz[528] - 1 * gz[432]);
                    v_jxkx += gjkx * prod_yz;
                    v_jyky += gjky * prod_xz;
                    v_jzkz += gjkz * prod_xy;
                    gilx = al2 * ai2 * gx[448];
                    gily = al2 * (ai2 * gy[464] - 1 * gy[432]);
                    gilz = al2 * ai2 * gz[1072] - 1 * ai2 * gz[208];
                    v_ixlx += gilx * prod_yz;
                    v_iyly += gily * prod_xz;
                    v_izlz += gilz * prod_xy;
                    gjlx = al2 * aj2 * gx[480];
                    gjly = al2 * aj2 * gy[496];
                    gjlz = al2 * (aj2 * gz[1104] - 1 * gz[1008]) - 1 * (aj2 * gz[240] - 1 * gz[144]);
                    v_jxlx += gjlx * prod_yz;
                    v_jyly += gjly * prod_xz;
                    v_jzlz += gjlz * prod_xy;
                    gix = ai2 * gx[16];
                    giy = (ai2 * gy[32] - 1 * gy[0]);
                    giz = ai2 * gz[640];
                    gjx = aj2 * gx[48];
                    gjy = aj2 * gy[64];
                    gjz = (aj2 * gz[672] - 1 * gz[576]);
                    gkx = ak2 * gx[144];
                    gky = ak2 * gy[160];
                    gkz = (ak2 * gz[768] - 1 * gz[480]);
                    glx = al2 * gx[432];
                    gly = al2 * gy[448];
                    glz = (al2 * gz[1056] - 1 * gz[192]);
                    v_ixky += gix * gky * Iz;
                    v_ixkz += gix * gkz * Iy;
                    v_iykx += giy * gkx * Iz;
                    v_iykz += giy * gkz * Ix;
                    v_izkx += giz * gkx * Iy;
                    v_izky += giz * gky * Ix;
                    v_jxky += gjx * gky * Iz;
                    v_jxkz += gjx * gkz * Iy;
                    v_jykx += gjy * gkx * Iz;
                    v_jykz += gjy * gkz * Ix;
                    v_jzkx += gjz * gkx * Iy;
                    v_jzky += gjz * gky * Ix;
                    v_ixly += gix * gly * Iz;
                    v_ixlz += gix * glz * Iy;
                    v_iylx += giy * glx * Iz;
                    v_iylz += giy * glz * Ix;
                    v_izlx += giz * glx * Iy;
                    v_izly += giz * gly * Ix;
                    v_jxly += gjx * gly * Iz;
                    v_jxlz += gjx * glz * Iy;
                    v_jylx += gjy * glx * Iz;
                    v_jylz += gjy * glz * Ix;
                    v_jzlx += gjz * glx * Iy;
                    v_jzly += gjz * gly * Ix;
                    break;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            continue;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        int natm = envs.natm;
        double *ejk = jk.ejk;
        atomicAdd(ejk + (ia*natm+ka)*9 + 0, v_ixkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 1, v_ixky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 2, v_ixkz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 3, v_iykx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 4, v_iyky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 5, v_iykz);
        atomicAdd(ejk + (ia*natm+ka)*9 + 6, v_izkx);
        atomicAdd(ejk + (ia*natm+ka)*9 + 7, v_izky);
        atomicAdd(ejk + (ia*natm+ka)*9 + 8, v_izkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 0, v_jxkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 1, v_jxky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 2, v_jxkz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 3, v_jykx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 4, v_jyky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 5, v_jykz);
        atomicAdd(ejk + (ja*natm+ka)*9 + 6, v_jzkx);
        atomicAdd(ejk + (ja*natm+ka)*9 + 7, v_jzky);
        atomicAdd(ejk + (ja*natm+ka)*9 + 8, v_jzkz);
        atomicAdd(ejk + (ia*natm+la)*9 + 0, v_ixlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 1, v_ixly);
        atomicAdd(ejk + (ia*natm+la)*9 + 2, v_ixlz);
        atomicAdd(ejk + (ia*natm+la)*9 + 3, v_iylx);
        atomicAdd(ejk + (ia*natm+la)*9 + 4, v_iyly);
        atomicAdd(ejk + (ia*natm+la)*9 + 5, v_iylz);
        atomicAdd(ejk + (ia*natm+la)*9 + 6, v_izlx);
        atomicAdd(ejk + (ia*natm+la)*9 + 7, v_izly);
        atomicAdd(ejk + (ia*natm+la)*9 + 8, v_izlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 0, v_jxlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 1, v_jxly);
        atomicAdd(ejk + (ja*natm+la)*9 + 2, v_jxlz);
        atomicAdd(ejk + (ja*natm+la)*9 + 3, v_jylx);
        atomicAdd(ejk + (ja*natm+la)*9 + 4, v_jyly);
        atomicAdd(ejk + (ja*natm+la)*9 + 5, v_jylz);
        atomicAdd(ejk + (ja*natm+la)*9 + 6, v_jzlx);
        atomicAdd(ejk + (ja*natm+la)*9 + 7, v_jzly);
        atomicAdd(ejk + (ja*natm+la)*9 + 8, v_jzlz);
    }
}
__global__
void rys_ejk_ip2_type3_1111(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                ShellQuartet *pool, double *dd_pool, uint32_t *batch_head)
{
    int b_id = blockIdx.x;
    int t_id = threadIdx.x + blockDim.x * threadIdx.y;
    ShellQuartet *shl_quartet_idx = pool + b_id * QUEUE_DEPTH;

    double *dd_cache = dd_pool + b_id * 1296;

    __shared__ int batch_id;
    if (t_id == 0) {
        batch_id = atomicAdd(batch_head, 1);
    }
    __syncthreads();
    int nbatches_kl = (bounds.ntile_kl_pairs + TILES_IN_BATCH - 1) / TILES_IN_BATCH;
    int nbatches = bounds.ntile_ij_pairs * nbatches_kl;
    while (batch_id < nbatches) {
        int batch_ij = batch_id / nbatches_kl;
        int batch_kl = batch_id % nbatches_kl;
        int nbas = envs.nbas;
        double *env = envs.env;
        double omega = env[PTR_RANGE_OMEGA];
        int ntasks;
        if (omega >= 0) {
            ntasks = _fill_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                     batch_ij, batch_kl);
        } else {
            ntasks = _fill_sr_ejk_tasks(shl_quartet_idx, envs, jk, bounds,
                                        batch_ij, batch_kl);
        }
        if (ntasks > 0) {
            int tile_ij = bounds.tile_ij_mapping[batch_ij];
            int nbas_tiles = nbas / TILE;
            int tile_i = tile_ij / nbas_tiles;
            int tile_j = tile_ij % nbas_tiles;
            int ish0 = tile_i * TILE;
            int jsh0 = tile_j * TILE;
            _rys_ejk_ip2_type3_1111(envs, jk, bounds, shl_quartet_idx, dd_cache,
                             ntasks, ish0, jsh0);
        }
        if (t_id == 0) {
            batch_id = atomicAdd(batch_head, 1);
            atomicAdd(batch_head+1, ntasks);
        }
        __syncthreads();
    }
}

int rys_ejk_ip2_type3_unrolled(RysIntEnvVars *envs, JKEnergy *jk, BoundsInfo *bounds,
                        ShellQuartet *pool, double *dd_pool,
                        uint32_t *batch_head, int *scheme, int workers)
{
    int li = bounds->li;
    int lj = bounds->lj;
    int lk = bounds->lk;
    int ll = bounds->ll;
    int ijkl = li*125 + lj*25 + lk*5 + ll;
    int nroots = bounds->nroots;
    int g_size = bounds->stride_l * (ll + 2);
    int iprim = bounds->iprim;
    int jprim = bounds->jprim;
    int ij_prims = iprim * jprim;
    int buflen = ij_prims*TILE2;
    int nsq_per_block = 256;
    int gout_stride = 1;

    switch (ijkl) {
    case 131:
        nsq_per_block = 32;
        gout_stride = 8;
        break;
    case 155:
        nsq_per_block = 32;
        gout_stride = 8;
        break;
    case 156:
        nsq_per_block = 16;
        gout_stride = 16;
        break;
    }

    dim3 threads(nsq_per_block, gout_stride);
    buflen += nroots*2 * nsq_per_block;
    switch (ijkl) {
    case 0:
        rys_ejk_ip2_type3_0000<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, batch_head); break;
    case 125:
        rys_ejk_ip2_type3_1000<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, batch_head); break;
    case 130:
        rys_ejk_ip2_type3_1010<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, batch_head); break;
    case 131:
        buflen += g_size * 3 * nsq_per_block;
        cudaFuncSetAttribute(rys_ejk_ip2_type3_1011, cudaFuncAttributeMaxDynamicSharedMemorySize, buflen*sizeof(double));
        rys_ejk_ip2_type3_1011<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, batch_head); break;
    case 150:
        rys_ejk_ip2_type3_1100<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, batch_head); break;
    case 155:
        buflen += g_size * 3 * nsq_per_block;
        cudaFuncSetAttribute(rys_ejk_ip2_type3_1110, cudaFuncAttributeMaxDynamicSharedMemorySize, buflen*sizeof(double));
        rys_ejk_ip2_type3_1110<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, batch_head); break;
    case 156:
        buflen += g_size * 3 * nsq_per_block;
        cudaFuncSetAttribute(rys_ejk_ip2_type3_1111, cudaFuncAttributeMaxDynamicSharedMemorySize, buflen*sizeof(double));
        rys_ejk_ip2_type3_1111<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, batch_head); break;
    default: return 0;
    }
    return 1;
}
