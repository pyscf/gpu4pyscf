#include <cuda.h>
#include <cuda_runtime.h>
#include "vhf.cuh"
#include "rys_roots_for_k.cu"
#include "create_tasks.cu"


__global__ static
void rys_ejk_ip1_0000(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 256;
    constexpr int gout_stride = 1;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rw = shared_memory + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        double fxi, fyi, fzi;
        double fxj, fyj, fzj;
        double fxk, fyk, fzk;
        double fxl, fyl, fzl;
        double dd_cache0 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = ck[kp] * cl[lp] * Kcd;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[ijp];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = rjri[0] * aj_aij;
                double ypa = rjri[1] * aj_aij;
                double zpa = rjri[2] * aj_aij;
                double xij = ri[0] + xpa;
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xqc = xlxk * al_akl;
                double yqc = ylyk * al_akl;
                double zqc = zlzk * al_akl;
                double xkl = rk[0] + xqc;
                double ykl = rk[1] + yqc;
                double zkl = rk[2] + zqc;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double rr = xpq*xpq + ypq*ypq + zpq*zpq;
                double theta = aij * akl / (aij + akl);
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < nroots; ++irys) {
                    double wt = rw[(2*irys+1)*256] * fac;
                    double rt = rw[ 2*irys   *256];
                    double rt_aa = rt / (aij + akl);
                    dd = dd_cache0;
                    Ix = 1;
                    Iy = 1;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double trr_01x = cpx * 1;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_1000(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 256;
    constexpr int gout_stride = 1;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rw = shared_memory + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        double fxi, fyi, fzi;
        double fxj, fyj, fzj;
        double fxk, fyk, fzk;
        double fxl, fyl, fzl;
        double dd_cache0 = 0.;
        double dd_cache1 = 0.;
        double dd_cache2 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache1 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache2 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache1 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache2 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = ck[kp] * cl[lp] * Kcd;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[ijp];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = rjri[0] * aj_aij;
                double ypa = rjri[1] * aj_aij;
                double zpa = rjri[2] * aj_aij;
                double xij = ri[0] + xpa;
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xqc = xlxk * al_akl;
                double yqc = ylyk * al_akl;
                double zqc = zlzk * al_akl;
                double xkl = rk[0] + xqc;
                double ykl = rk[1] + yqc;
                double zkl = rk[2] + zqc;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double rr = xpq*xpq + ypq*ypq + zpq*zpq;
                double theta = aij * akl / (aij + akl);
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < nroots; ++irys) {
                    double wt = rw[(2*irys+1)*256] * fac;
                    double rt = rw[ 2*irys   *256];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    dd = dd_cache0;
                    Ix = trr_10x;
                    Iy = 1;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double b00 = .5 * rt_aa;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache1;
                    Ix = 1;
                    Iy = trr_10y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_01x = cpx * 1;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache2;
                    Ix = 1;
                    Iy = 1;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_1010(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 256;
    constexpr int gout_stride = 1;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rw = shared_memory + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        double fxi, fyi, fzi;
        double fxj, fyj, fzj;
        double fxk, fyk, fzk;
        double fxl, fyl, fzl;
        double dd_cache0 = 0.;
        double dd_cache1 = 0.;
        double dd_cache2 = 0.;
        double dd_cache3 = 0.;
        double dd_cache4 = 0.;
        double dd_cache5 = 0.;
        double dd_cache6 = 0.;
        double dd_cache7 = 0.;
        double dd_cache8 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+1)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+1)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+1)]);
                dd_cache6 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+2)]);
                dd_cache7 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+2)]);
                dd_cache8 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+2)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache1 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache2 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache3 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache4 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache5 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache6 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache7 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache8 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+2)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+1)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+1)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+1)]);
                dd_cache6 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+2)]);
                dd_cache7 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+2)]);
                dd_cache8 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+2)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache1 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache2 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache3 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache4 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache5 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache6 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache7 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache8 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = ck[kp] * cl[lp] * Kcd;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[ijp];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = rjri[0] * aj_aij;
                double ypa = rjri[1] * aj_aij;
                double zpa = rjri[2] * aj_aij;
                double xij = ri[0] + xpa;
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xqc = xlxk * al_akl;
                double yqc = ylyk * al_akl;
                double zqc = zlzk * al_akl;
                double xkl = rk[0] + xqc;
                double ykl = rk[1] + yqc;
                double zkl = rk[2] + zqc;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double rr = xpq*xpq + ypq*ypq + zpq*zpq;
                double theta = aij * akl / (aij + akl);
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < nroots; ++irys) {
                    double wt = rw[(2*irys+1)*256] * fac;
                    double rt = rw[ 2*irys   *256];
                    double rt_aa = rt / (aij + akl);
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    double b00 = .5 * rt_aa;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    dd = dd_cache0;
                    Ix = trr_11x;
                    Iy = 1;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    fxi = ai2 * trr_21x;
                    double trr_01x = cpx * 1;
                    fxi -= 1 * trr_01x;
                    v_ix += fxi * prod_yz;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1110x = trr_21x - xjxi * trr_11x;
                    fxj = aj2 * hrr_1110x;
                    v_jx += fxj * prod_yz;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double b01 = .5/akl * (1 - rt_akl);
                    double trr_12x = cpx * trr_11x + 1*b01 * trr_10x + 1*b00 * trr_01x;
                    fxk = ak2 * trr_12x;
                    fxk -= 1 * trr_10x;
                    v_kx += fxk * prod_yz;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_1011x = trr_12x - xlxk * trr_11x;
                    fxl = al2 * hrr_1011x;
                    v_lx += fxl * prod_yz;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache1;
                    Ix = trr_01x;
                    Iy = trr_10y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0110x = trr_11x - xjxi * trr_01x;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_02x = cpx * trr_01x + 1*b01 * 1;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0011x = trr_02x - xlxk * trr_01x;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache2;
                    Ix = trr_01x;
                    Iy = 1;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache3;
                    Ix = trr_10x;
                    Iy = trr_01y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    double hrr_0110y = trr_11y - yjyi * trr_01y;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    double trr_02y = cpy * trr_01y + 1*b01 * 1;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    double hrr_0011y = trr_02y - ylyk * trr_01y;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache4;
                    Ix = 1;
                    Iy = trr_11y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    fyi = ai2 * trr_21y;
                    fyi -= 1 * trr_01y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    double hrr_1110y = trr_21y - yjyi * trr_11y;
                    fyj = aj2 * hrr_1110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    double trr_12y = cpy * trr_11y + 1*b01 * trr_10y + 1*b00 * trr_01y;
                    fyk = ak2 * trr_12y;
                    fyk -= 1 * trr_10y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    double hrr_1011y = trr_12y - ylyk * trr_11y;
                    fyl = al2 * hrr_1011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache5;
                    Ix = 1;
                    Iy = trr_01y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache6;
                    Ix = trr_10x;
                    Iy = 1;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0110z = trr_11z - zjzi * trr_01z;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_02z = cpz * trr_01z + 1*b01 * wt;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0011z = trr_02z - zlzk * trr_01z;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache7;
                    Ix = 1;
                    Iy = trr_10y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache8;
                    Ix = 1;
                    Iy = 1;
                    Iz = trr_11z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    fzi = ai2 * trr_21z;
                    fzi -= 1 * trr_01z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1110z = trr_21z - zjzi * trr_11z;
                    fzj = aj2 * hrr_1110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_12z = cpz * trr_11z + 1*b01 * trr_10z + 1*b00 * trr_01z;
                    fzk = ak2 * trr_12z;
                    fzk -= 1 * trr_10z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1011z = trr_12z - zlzk * trr_11z;
                    fzl = al2 * hrr_1011z;
                    v_lz += fzl * prod_xy;
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_1011(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 256;
    constexpr int gout_stride = 1;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rw = shared_memory + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        double fxi, fyi, fzi;
        double fxj, fyj, fzj;
        double fxk, fyk, fzk;
        double fxl, fyl, fzl;
        double dd_cache0 = 0.;
        double dd_cache1 = 0.;
        double dd_cache2 = 0.;
        double dd_cache3 = 0.;
        double dd_cache4 = 0.;
        double dd_cache5 = 0.;
        double dd_cache6 = 0.;
        double dd_cache7 = 0.;
        double dd_cache8 = 0.;
        double dd_cache9 = 0.;
        double dd_cache10 = 0.;
        double dd_cache11 = 0.;
        double dd_cache12 = 0.;
        double dd_cache13 = 0.;
        double dd_cache14 = 0.;
        double dd_cache15 = 0.;
        double dd_cache16 = 0.;
        double dd_cache17 = 0.;
        double dd_cache18 = 0.;
        double dd_cache19 = 0.;
        double dd_cache20 = 0.;
        double dd_cache21 = 0.;
        double dd_cache22 = 0.;
        double dd_cache23 = 0.;
        double dd_cache24 = 0.;
        double dd_cache25 = 0.;
        double dd_cache26 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+1)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+1)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+1)]);
                dd_cache6 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+2)]);
                dd_cache7 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+2)]);
                dd_cache8 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+2)]);
                dd_cache9 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache10 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache11 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache12 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+0)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)] * dm[(i0+0)*nao+(k0+1)]);
                dd_cache13 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+1)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)] * dm[(i0+1)*nao+(k0+1)]);
                dd_cache14 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+2)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)] * dm[(i0+2)*nao+(k0+1)]);
                dd_cache15 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+0)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)] * dm[(i0+0)*nao+(k0+2)]);
                dd_cache16 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+1)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)] * dm[(i0+1)*nao+(k0+2)]);
                dd_cache17 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+2)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)] * dm[(i0+2)*nao+(k0+2)]);
                dd_cache18 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache19 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache20 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache21 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+0)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)] * dm[(i0+0)*nao+(k0+1)]);
                dd_cache22 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+1)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)] * dm[(i0+1)*nao+(k0+1)]);
                dd_cache23 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+2)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)] * dm[(i0+2)*nao+(k0+1)]);
                dd_cache24 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+0)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)] * dm[(i0+0)*nao+(k0+2)]);
                dd_cache25 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+1)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)] * dm[(i0+1)*nao+(k0+2)]);
                dd_cache26 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+2)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)] * dm[(i0+2)*nao+(k0+2)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache1 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache2 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache3 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache4 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache5 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache6 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache7 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache8 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache9 += fac * dm[(l0+1)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache10 += fac * dm[(l0+1)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache11 += fac * dm[(l0+1)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache12 += fac * dm[(l0+1)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache13 += fac * dm[(l0+1)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache14 += fac * dm[(l0+1)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache15 += fac * dm[(l0+1)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache16 += fac * dm[(l0+1)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache17 += fac * dm[(l0+1)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache18 += fac * dm[(l0+2)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache19 += fac * dm[(l0+2)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache20 += fac * dm[(l0+2)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache21 += fac * dm[(l0+2)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache22 += fac * dm[(l0+2)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache23 += fac * dm[(l0+2)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache24 += fac * dm[(l0+2)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache25 += fac * dm[(l0+2)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache26 += fac * dm[(l0+2)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+2)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+1)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+1)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+1)]);
                dd_cache6 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+2)]);
                dd_cache7 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+2)]);
                dd_cache8 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+2)]);
                dd_cache9 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+1)] + dmb[(j0+0)*nao+(l0+1)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache10 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+1)] + dmb[(j0+0)*nao+(l0+1)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache11 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+1)] + dmb[(j0+0)*nao+(l0+1)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache12 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+0)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)]*dm[(i0+0)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+0)*nao+(l0+1)] + dmb[(j0+0)*nao+(l0+1)]*dmb[(i0+0)*nao+(k0+1)]);
                dd_cache13 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+1)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)]*dm[(i0+1)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+1)*nao+(l0+1)] + dmb[(j0+0)*nao+(l0+1)]*dmb[(i0+1)*nao+(k0+1)]);
                dd_cache14 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+2)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)]*dm[(i0+2)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+2)*nao+(l0+1)] + dmb[(j0+0)*nao+(l0+1)]*dmb[(i0+2)*nao+(k0+1)]);
                dd_cache15 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+0)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)]*dm[(i0+0)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+0)*nao+(l0+1)] + dmb[(j0+0)*nao+(l0+1)]*dmb[(i0+0)*nao+(k0+2)]);
                dd_cache16 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+1)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)]*dm[(i0+1)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+1)*nao+(l0+1)] + dmb[(j0+0)*nao+(l0+1)]*dmb[(i0+1)*nao+(k0+2)]);
                dd_cache17 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+2)*nao+(l0+1)] + dm[(j0+0)*nao+(l0+1)]*dm[(i0+2)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+2)*nao+(l0+1)] + dmb[(j0+0)*nao+(l0+1)]*dmb[(i0+2)*nao+(k0+2)]);
                dd_cache18 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+2)] + dmb[(j0+0)*nao+(l0+2)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache19 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+2)] + dmb[(j0+0)*nao+(l0+2)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache20 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+2)] + dmb[(j0+0)*nao+(l0+2)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache21 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+0)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)]*dm[(i0+0)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+0)*nao+(l0+2)] + dmb[(j0+0)*nao+(l0+2)]*dmb[(i0+0)*nao+(k0+1)]);
                dd_cache22 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+1)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)]*dm[(i0+1)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+1)*nao+(l0+2)] + dmb[(j0+0)*nao+(l0+2)]*dmb[(i0+1)*nao+(k0+1)]);
                dd_cache23 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+2)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)]*dm[(i0+2)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+2)*nao+(l0+2)] + dmb[(j0+0)*nao+(l0+2)]*dmb[(i0+2)*nao+(k0+1)]);
                dd_cache24 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+0)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)]*dm[(i0+0)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+0)*nao+(l0+2)] + dmb[(j0+0)*nao+(l0+2)]*dmb[(i0+0)*nao+(k0+2)]);
                dd_cache25 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+1)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)]*dm[(i0+1)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+1)*nao+(l0+2)] + dmb[(j0+0)*nao+(l0+2)]*dmb[(i0+1)*nao+(k0+2)]);
                dd_cache26 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+2)*nao+(l0+2)] + dm[(j0+0)*nao+(l0+2)]*dm[(i0+2)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+2)*nao+(l0+2)] + dmb[(j0+0)*nao+(l0+2)]*dmb[(i0+2)*nao+(k0+2)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache1 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache2 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache3 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache4 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache5 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache6 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache7 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache8 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache9 += fac * (dm[(l0+1)*nao+(k0+0)]+dmb[(l0+1)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache10 += fac * (dm[(l0+1)*nao+(k0+0)]+dmb[(l0+1)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache11 += fac * (dm[(l0+1)*nao+(k0+0)]+dmb[(l0+1)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache12 += fac * (dm[(l0+1)*nao+(k0+1)]+dmb[(l0+1)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache13 += fac * (dm[(l0+1)*nao+(k0+1)]+dmb[(l0+1)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache14 += fac * (dm[(l0+1)*nao+(k0+1)]+dmb[(l0+1)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache15 += fac * (dm[(l0+1)*nao+(k0+2)]+dmb[(l0+1)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache16 += fac * (dm[(l0+1)*nao+(k0+2)]+dmb[(l0+1)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache17 += fac * (dm[(l0+1)*nao+(k0+2)]+dmb[(l0+1)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache18 += fac * (dm[(l0+2)*nao+(k0+0)]+dmb[(l0+2)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache19 += fac * (dm[(l0+2)*nao+(k0+0)]+dmb[(l0+2)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache20 += fac * (dm[(l0+2)*nao+(k0+0)]+dmb[(l0+2)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache21 += fac * (dm[(l0+2)*nao+(k0+1)]+dmb[(l0+2)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache22 += fac * (dm[(l0+2)*nao+(k0+1)]+dmb[(l0+2)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache23 += fac * (dm[(l0+2)*nao+(k0+1)]+dmb[(l0+2)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache24 += fac * (dm[(l0+2)*nao+(k0+2)]+dmb[(l0+2)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache25 += fac * (dm[(l0+2)*nao+(k0+2)]+dmb[(l0+2)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache26 += fac * (dm[(l0+2)*nao+(k0+2)]+dmb[(l0+2)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = ck[kp] * cl[lp] * Kcd;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[ijp];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = rjri[0] * aj_aij;
                double ypa = rjri[1] * aj_aij;
                double zpa = rjri[2] * aj_aij;
                double xij = ri[0] + xpa;
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xqc = xlxk * al_akl;
                double yqc = ylyk * al_akl;
                double zqc = zlzk * al_akl;
                double xkl = rk[0] + xqc;
                double ykl = rk[1] + yqc;
                double zkl = rk[2] + zqc;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double rr = xpq*xpq + ypq*ypq + zpq*zpq;
                double theta = aij * akl / (aij + akl);
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < nroots; ++irys) {
                    double wt = rw[(2*irys+1)*256] * fac;
                    double rt = rw[ 2*irys   *256];
                    double rt_aa = rt / (aij + akl);
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    double b00 = .5 * rt_aa;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    double b01 = .5/akl * (1 - rt_akl);
                    double trr_01x = cpx * 1;
                    double trr_12x = cpx * trr_11x + 1*b01 * trr_10x + 1*b00 * trr_01x;
                    double hrr_1011x = trr_12x - xlxk * trr_11x;
                    dd = dd_cache0;
                    Ix = hrr_1011x;
                    Iy = 1;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    double trr_22x = cpx * trr_21x + 1*b01 * trr_20x + 2*b00 * trr_11x;
                    double hrr_2011x = trr_22x - xlxk * trr_21x;
                    fxi = ai2 * hrr_2011x;
                    double trr_02x = cpx * trr_01x + 1*b01 * 1;
                    double hrr_0011x = trr_02x - xlxk * trr_01x;
                    fxi -= 1 * hrr_0011x;
                    v_ix += fxi * prod_yz;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1111x = hrr_2011x - xjxi * hrr_1011x;
                    fxj = aj2 * hrr_1111x;
                    v_jx += fxj * prod_yz;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_13x = cpx * trr_12x + 2*b01 * trr_11x + 1*b00 * trr_02x;
                    double hrr_1021x = trr_13x - xlxk * trr_12x;
                    fxk = ak2 * hrr_1021x;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    fxk -= 1 * hrr_1001x;
                    v_kx += fxk * prod_yz;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_1012x = hrr_1021x - xlxk * hrr_1011x;
                    fxl = al2 * hrr_1012x;
                    fxl -= 1 * trr_11x;
                    v_lx += fxl * prod_yz;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache1;
                    Ix = hrr_0011x;
                    Iy = trr_10y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1011x;
                    v_ix += fxi * prod_yz;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0111x = hrr_1011x - xjxi * hrr_0011x;
                    fxj = aj2 * hrr_0111x;
                    v_jx += fxj * prod_yz;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_03x = cpx * trr_02x + 2*b01 * trr_01x;
                    double hrr_0021x = trr_03x - xlxk * trr_02x;
                    fxk = ak2 * hrr_0021x;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    fxk -= 1 * hrr_0001x;
                    v_kx += fxk * prod_yz;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0012x = hrr_0021x - xlxk * hrr_0011x;
                    fxl = al2 * hrr_0012x;
                    fxl -= 1 * trr_01x;
                    v_lx += fxl * prod_yz;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache2;
                    Ix = hrr_0011x;
                    Iy = 1;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1011x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0111x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0021x;
                    fxk -= 1 * hrr_0001x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0012x;
                    fxl -= 1 * trr_01x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache3;
                    Ix = hrr_1001x;
                    Iy = trr_01y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    double hrr_2001x = trr_21x - xlxk * trr_20x;
                    fxi = ai2 * hrr_2001x;
                    fxi -= 1 * hrr_0001x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1101x = hrr_2001x - xjxi * hrr_1001x;
                    fxj = aj2 * hrr_1101x;
                    v_jx += fxj * prod_yz;
                    double hrr_0110y = trr_11y - yjyi * trr_01y;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_1011x;
                    v_kx += fxk * prod_yz;
                    double trr_02y = cpy * trr_01y + 1*b01 * 1;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_1002x = hrr_1011x - xlxk * hrr_1001x;
                    fxl = al2 * hrr_1002x;
                    fxl -= 1 * trr_10x;
                    v_lx += fxl * prod_yz;
                    double hrr_0011y = trr_02y - ylyk * trr_01y;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache4;
                    Ix = hrr_0001x;
                    Iy = trr_11y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1001x;
                    v_ix += fxi * prod_yz;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    fyi = ai2 * trr_21y;
                    fyi -= 1 * trr_01y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0101x = hrr_1001x - xjxi * hrr_0001x;
                    fxj = aj2 * hrr_0101x;
                    v_jx += fxj * prod_yz;
                    double hrr_1110y = trr_21y - yjyi * trr_11y;
                    fyj = aj2 * hrr_1110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0011x;
                    v_kx += fxk * prod_yz;
                    double trr_12y = cpy * trr_11y + 1*b01 * trr_10y + 1*b00 * trr_01y;
                    fyk = ak2 * trr_12y;
                    fyk -= 1 * trr_10y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0002x = hrr_0011x - xlxk * hrr_0001x;
                    fxl = al2 * hrr_0002x;
                    fxl -= 1 * 1;
                    v_lx += fxl * prod_yz;
                    double hrr_1011y = trr_12y - ylyk * trr_11y;
                    fyl = al2 * hrr_1011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache5;
                    Ix = hrr_0001x;
                    Iy = trr_01y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1001x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0101x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0011x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0002x;
                    fxl -= 1 * 1;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache6;
                    Ix = hrr_1001x;
                    Iy = 1;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_2001x;
                    fxi -= 1 * hrr_0001x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1101x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0110z = trr_11z - zjzi * trr_01z;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_1011x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_02z = cpz * trr_01z + 1*b01 * wt;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1002x;
                    fxl -= 1 * trr_10x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0011z = trr_02z - zlzk * trr_01z;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache7;
                    Ix = hrr_0001x;
                    Iy = trr_10y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1001x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0101x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0011x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0002x;
                    fxl -= 1 * 1;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache8;
                    Ix = hrr_0001x;
                    Iy = 1;
                    Iz = trr_11z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1001x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    fzi = ai2 * trr_21z;
                    fzi -= 1 * trr_01z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0101x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1110z = trr_21z - zjzi * trr_11z;
                    fzj = aj2 * hrr_1110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0011x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_12z = cpz * trr_11z + 1*b01 * trr_10z + 1*b00 * trr_01z;
                    fzk = ak2 * trr_12z;
                    fzk -= 1 * trr_10z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0002x;
                    fxl -= 1 * 1;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1011z = trr_12z - zlzk * trr_11z;
                    fzl = al2 * hrr_1011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache9;
                    Ix = trr_11x;
                    Iy = hrr_0001y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_21x;
                    fxi -= 1 * trr_01x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1001y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1110x = trr_21x - xjxi * trr_11x;
                    fxj = aj2 * hrr_1110x;
                    v_jx += fxj * prod_yz;
                    double hrr_0101y = hrr_1001y - yjyi * hrr_0001y;
                    fyj = aj2 * hrr_0101y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_12x;
                    fxk -= 1 * trr_10x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0011y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1011x;
                    v_lx += fxl * prod_yz;
                    double hrr_0002y = hrr_0011y - ylyk * hrr_0001y;
                    fyl = al2 * hrr_0002y;
                    fyl -= 1 * 1;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache10;
                    Ix = trr_01x;
                    Iy = hrr_1001y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    double hrr_2001y = trr_21y - ylyk * trr_20y;
                    fyi = ai2 * hrr_2001y;
                    fyi -= 1 * hrr_0001y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0110x = trr_11x - xjxi * trr_01x;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    double hrr_1101y = hrr_2001y - yjyi * hrr_1001y;
                    fyj = aj2 * hrr_1101y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_1011y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    double hrr_1002y = hrr_1011y - ylyk * hrr_1001y;
                    fyl = al2 * hrr_1002y;
                    fyl -= 1 * trr_10y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache11;
                    Ix = trr_01x;
                    Iy = hrr_0001y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1001y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0101y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0011y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0002y;
                    fyl -= 1 * 1;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache12;
                    Ix = trr_10x;
                    Iy = hrr_0011y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1011y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    double hrr_0111y = hrr_1011y - yjyi * hrr_0011y;
                    fyj = aj2 * hrr_0111y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    double trr_03y = cpy * trr_02y + 2*b01 * trr_01y;
                    double hrr_0021y = trr_03y - ylyk * trr_02y;
                    fyk = ak2 * hrr_0021y;
                    fyk -= 1 * hrr_0001y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    double hrr_0012y = hrr_0021y - ylyk * hrr_0011y;
                    fyl = al2 * hrr_0012y;
                    fyl -= 1 * trr_01y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache13;
                    Ix = 1;
                    Iy = hrr_1011y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    double trr_22y = cpy * trr_21y + 1*b01 * trr_20y + 2*b00 * trr_11y;
                    double hrr_2011y = trr_22y - ylyk * trr_21y;
                    fyi = ai2 * hrr_2011y;
                    fyi -= 1 * hrr_0011y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    double hrr_1111y = hrr_2011y - yjyi * hrr_1011y;
                    fyj = aj2 * hrr_1111y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    double trr_13y = cpy * trr_12y + 2*b01 * trr_11y + 1*b00 * trr_02y;
                    double hrr_1021y = trr_13y - ylyk * trr_12y;
                    fyk = ak2 * hrr_1021y;
                    fyk -= 1 * hrr_1001y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    double hrr_1012y = hrr_1021y - ylyk * hrr_1011y;
                    fyl = al2 * hrr_1012y;
                    fyl -= 1 * trr_11y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache14;
                    Ix = 1;
                    Iy = hrr_0011y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1011y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0111y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0021y;
                    fyk -= 1 * hrr_0001y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0012y;
                    fyl -= 1 * trr_01y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache15;
                    Ix = trr_10x;
                    Iy = hrr_0001y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1001y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0101y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0011y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0002y;
                    fyl -= 1 * 1;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache16;
                    Ix = 1;
                    Iy = hrr_1001y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_2001y;
                    fyi -= 1 * hrr_0001y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1101y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_1011y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1002y;
                    fyl -= 1 * trr_10y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache17;
                    Ix = 1;
                    Iy = hrr_0001y;
                    Iz = trr_11z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1001y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_21z;
                    fzi -= 1 * trr_01z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0101y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0011y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_12z;
                    fzk -= 1 * trr_10z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0002y;
                    fyl -= 1 * 1;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache18;
                    Ix = trr_11x;
                    Iy = 1;
                    Iz = hrr_0001z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_21x;
                    fxi -= 1 * trr_01x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1001z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0101z = hrr_1001z - zjzi * hrr_0001z;
                    fzj = aj2 * hrr_0101z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_12x;
                    fxk -= 1 * trr_10x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0011z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0002z = hrr_0011z - zlzk * hrr_0001z;
                    fzl = al2 * hrr_0002z;
                    fzl -= 1 * wt;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache19;
                    Ix = trr_01x;
                    Iy = trr_10y;
                    Iz = hrr_0001z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1001z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0101z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0011z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0002z;
                    fzl -= 1 * wt;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache20;
                    Ix = trr_01x;
                    Iy = 1;
                    Iz = hrr_1001z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double hrr_2001z = trr_21z - zlzk * trr_20z;
                    fzi = ai2 * hrr_2001z;
                    fzi -= 1 * hrr_0001z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1101z = hrr_2001z - zjzi * hrr_1001z;
                    fzj = aj2 * hrr_1101z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_1011z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1002z = hrr_1011z - zlzk * hrr_1001z;
                    fzl = al2 * hrr_1002z;
                    fzl -= 1 * trr_10z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache21;
                    Ix = trr_10x;
                    Iy = trr_01y;
                    Iz = hrr_0001z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1001z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0101z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0011z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0002z;
                    fzl -= 1 * wt;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache22;
                    Ix = 1;
                    Iy = trr_11y;
                    Iz = hrr_0001z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_21y;
                    fyi -= 1 * trr_01y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1001z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0101z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_12y;
                    fyk -= 1 * trr_10y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0011z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0002z;
                    fzl -= 1 * wt;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache23;
                    Ix = 1;
                    Iy = trr_01y;
                    Iz = hrr_1001z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_2001z;
                    fzi -= 1 * hrr_0001z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1101z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_1011z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1002z;
                    fzl -= 1 * trr_10z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache24;
                    Ix = trr_10x;
                    Iy = 1;
                    Iz = hrr_0011z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1011z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0111z = hrr_1011z - zjzi * hrr_0011z;
                    fzj = aj2 * hrr_0111z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_03z = cpz * trr_02z + 2*b01 * trr_01z;
                    double hrr_0021z = trr_03z - zlzk * trr_02z;
                    fzk = ak2 * hrr_0021z;
                    fzk -= 1 * hrr_0001z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0012z = hrr_0021z - zlzk * hrr_0011z;
                    fzl = al2 * hrr_0012z;
                    fzl -= 1 * trr_01z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache25;
                    Ix = 1;
                    Iy = trr_10y;
                    Iz = hrr_0011z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1011z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0111z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0021z;
                    fzk -= 1 * hrr_0001z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0012z;
                    fzl -= 1 * trr_01z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache26;
                    Ix = 1;
                    Iy = 1;
                    Iz = hrr_1011z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_22z = cpz * trr_21z + 1*b01 * trr_20z + 2*b00 * trr_11z;
                    double hrr_2011z = trr_22z - zlzk * trr_21z;
                    fzi = ai2 * hrr_2011z;
                    fzi -= 1 * hrr_0011z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1111z = hrr_2011z - zjzi * hrr_1011z;
                    fzj = aj2 * hrr_1111z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_13z = cpz * trr_12z + 2*b01 * trr_11z + 1*b00 * trr_02z;
                    double hrr_1021z = trr_13z - zlzk * trr_12z;
                    fzk = ak2 * hrr_1021z;
                    fzk -= 1 * hrr_1001z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1012z = hrr_1021z - zlzk * hrr_1011z;
                    fzl = al2 * hrr_1012z;
                    fzl -= 1 * trr_11z;
                    v_lz += fzl * prod_xy;
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_1100(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 256;
    constexpr int gout_stride = 1;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rw = shared_memory + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        double fxi, fyi, fzi;
        double fxj, fyj, fzj;
        double fxk, fyk, fzk;
        double fxl, fyl, fzl;
        double dd_cache0 = 0.;
        double dd_cache1 = 0.;
        double dd_cache2 = 0.;
        double dd_cache3 = 0.;
        double dd_cache4 = 0.;
        double dd_cache5 = 0.;
        double dd_cache6 = 0.;
        double dd_cache7 = 0.;
        double dd_cache8 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache6 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache7 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache8 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache1 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache2 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache3 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+0)];
                dd_cache4 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+1)];
                dd_cache5 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+2)];
                dd_cache6 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+0)];
                dd_cache7 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+1)];
                dd_cache8 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+2)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache6 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache7 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache8 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache1 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache2 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache3 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+0)]+dmb[(j0+1)*nao+(i0+0)]);
                dd_cache4 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+1)]+dmb[(j0+1)*nao+(i0+1)]);
                dd_cache5 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+2)]+dmb[(j0+1)*nao+(i0+2)]);
                dd_cache6 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+0)]+dmb[(j0+2)*nao+(i0+0)]);
                dd_cache7 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+1)]+dmb[(j0+2)*nao+(i0+1)]);
                dd_cache8 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+2)]+dmb[(j0+2)*nao+(i0+2)]);
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = ck[kp] * cl[lp] * Kcd;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[ijp];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = rjri[0] * aj_aij;
                double ypa = rjri[1] * aj_aij;
                double zpa = rjri[2] * aj_aij;
                double xij = ri[0] + xpa;
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xqc = xlxk * al_akl;
                double yqc = ylyk * al_akl;
                double zqc = zlzk * al_akl;
                double xkl = rk[0] + xqc;
                double ykl = rk[1] + yqc;
                double zkl = rk[2] + zqc;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double rr = xpq*xpq + ypq*ypq + zpq*zpq;
                double theta = aij * akl / (aij + akl);
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < nroots; ++irys) {
                    double wt = rw[(2*irys+1)*256] * fac;
                    double rt = rw[ 2*irys   *256];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    dd = dd_cache0;
                    Ix = hrr_1100x;
                    Iy = 1;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    double trr_30x = c0x * trr_20x + 2*b10 * trr_10x;
                    double hrr_2100x = trr_30x - xjxi * trr_20x;
                    fxi = ai2 * hrr_2100x;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    fxi -= 1 * hrr_0100x;
                    v_ix += fxi * prod_yz;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1200x = hrr_2100x - xjxi * hrr_1100x;
                    fxj = aj2 * hrr_1200x;
                    fxj -= 1 * trr_10x;
                    v_jx += fxj * prod_yz;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double b00 = .5 * rt_aa;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    double hrr_1110x = trr_21x - xjxi * trr_11x;
                    fxk = ak2 * hrr_1110x;
                    v_kx += fxk * prod_yz;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_2001x = trr_21x - xlxk * trr_20x;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    double hrr_1101x = hrr_2001x - xjxi * hrr_1001x;
                    fxl = al2 * hrr_1101x;
                    v_lx += fxl * prod_yz;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache1;
                    Ix = hrr_0100x;
                    Iy = trr_10y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0200x = hrr_1100x - xjxi * hrr_0100x;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_01x = cpx * 1;
                    double hrr_0110x = trr_11x - xjxi * trr_01x;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    double hrr_0101x = hrr_1001x - xjxi * hrr_0001x;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache2;
                    Ix = hrr_0100x;
                    Iy = 1;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache3;
                    Ix = trr_10x;
                    Iy = hrr_0100y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    double hrr_0200y = hrr_1100y - yjyi * hrr_0100y;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    double hrr_0110y = trr_11y - yjyi * trr_01y;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    double hrr_0101y = hrr_1001y - yjyi * hrr_0001y;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache4;
                    Ix = 1;
                    Iy = hrr_1100y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    double trr_30y = c0y * trr_20y + 2*b10 * trr_10y;
                    double hrr_2100y = trr_30y - yjyi * trr_20y;
                    fyi = ai2 * hrr_2100y;
                    fyi -= 1 * hrr_0100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    double hrr_1200y = hrr_2100y - yjyi * hrr_1100y;
                    fyj = aj2 * hrr_1200y;
                    fyj -= 1 * trr_10y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    double hrr_1110y = trr_21y - yjyi * trr_11y;
                    fyk = ak2 * hrr_1110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    double hrr_2001y = trr_21y - ylyk * trr_20y;
                    double hrr_1101y = hrr_2001y - yjyi * hrr_1001y;
                    fyl = al2 * hrr_1101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache5;
                    Ix = 1;
                    Iy = hrr_0100y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache6;
                    Ix = trr_10x;
                    Iy = 1;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0200z = hrr_1100z - zjzi * hrr_0100z;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double hrr_0110z = trr_11z - zjzi * trr_01z;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0101z = hrr_1001z - zjzi * hrr_0001z;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache7;
                    Ix = 1;
                    Iy = trr_10y;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache8;
                    Ix = 1;
                    Iy = 1;
                    Iz = hrr_1100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_30z = c0z * trr_20z + 2*b10 * trr_10z;
                    double hrr_2100z = trr_30z - zjzi * trr_20z;
                    fzi = ai2 * hrr_2100z;
                    fzi -= 1 * hrr_0100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1200z = hrr_2100z - zjzi * hrr_1100z;
                    fzj = aj2 * hrr_1200z;
                    fzj -= 1 * trr_10z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    double hrr_1110z = trr_21z - zjzi * trr_11z;
                    fzk = ak2 * hrr_1110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_2001z = trr_21z - zlzk * trr_20z;
                    double hrr_1101z = hrr_2001z - zjzi * hrr_1001z;
                    fzl = al2 * hrr_1101z;
                    v_lz += fzl * prod_xy;
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_1110(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 256;
    constexpr int gout_stride = 1;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rw = shared_memory + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        double fxi, fyi, fzi;
        double fxj, fyj, fzj;
        double fxk, fyk, fzk;
        double fxl, fyl, fzl;
        double dd_cache0 = 0.;
        double dd_cache1 = 0.;
        double dd_cache2 = 0.;
        double dd_cache3 = 0.;
        double dd_cache4 = 0.;
        double dd_cache5 = 0.;
        double dd_cache6 = 0.;
        double dd_cache7 = 0.;
        double dd_cache8 = 0.;
        double dd_cache9 = 0.;
        double dd_cache10 = 0.;
        double dd_cache11 = 0.;
        double dd_cache12 = 0.;
        double dd_cache13 = 0.;
        double dd_cache14 = 0.;
        double dd_cache15 = 0.;
        double dd_cache16 = 0.;
        double dd_cache17 = 0.;
        double dd_cache18 = 0.;
        double dd_cache19 = 0.;
        double dd_cache20 = 0.;
        double dd_cache21 = 0.;
        double dd_cache22 = 0.;
        double dd_cache23 = 0.;
        double dd_cache24 = 0.;
        double dd_cache25 = 0.;
        double dd_cache26 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache6 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache7 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache8 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache9 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+1)]);
                dd_cache10 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+1)]);
                dd_cache11 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+1)]);
                dd_cache12 += fac * (dm[(j0+1)*nao+(k0+1)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+1)]);
                dd_cache13 += fac * (dm[(j0+1)*nao+(k0+1)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+1)]);
                dd_cache14 += fac * (dm[(j0+1)*nao+(k0+1)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+1)]);
                dd_cache15 += fac * (dm[(j0+2)*nao+(k0+1)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+1)]);
                dd_cache16 += fac * (dm[(j0+2)*nao+(k0+1)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+1)]);
                dd_cache17 += fac * (dm[(j0+2)*nao+(k0+1)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+1)]);
                dd_cache18 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+2)]);
                dd_cache19 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+2)]);
                dd_cache20 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+2)]);
                dd_cache21 += fac * (dm[(j0+1)*nao+(k0+2)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+2)]);
                dd_cache22 += fac * (dm[(j0+1)*nao+(k0+2)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+2)]);
                dd_cache23 += fac * (dm[(j0+1)*nao+(k0+2)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+2)]);
                dd_cache24 += fac * (dm[(j0+2)*nao+(k0+2)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+2)]);
                dd_cache25 += fac * (dm[(j0+2)*nao+(k0+2)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+2)]);
                dd_cache26 += fac * (dm[(j0+2)*nao+(k0+2)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+2)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache1 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache2 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache3 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+0)];
                dd_cache4 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+1)];
                dd_cache5 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+2)];
                dd_cache6 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+0)];
                dd_cache7 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+1)];
                dd_cache8 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+2)];
                dd_cache9 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache10 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache11 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache12 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+1)*nao+(i0+0)];
                dd_cache13 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+1)*nao+(i0+1)];
                dd_cache14 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+1)*nao+(i0+2)];
                dd_cache15 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+2)*nao+(i0+0)];
                dd_cache16 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+2)*nao+(i0+1)];
                dd_cache17 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+2)*nao+(i0+2)];
                dd_cache18 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache19 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache20 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache21 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+1)*nao+(i0+0)];
                dd_cache22 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+1)*nao+(i0+1)];
                dd_cache23 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+1)*nao+(i0+2)];
                dd_cache24 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+2)*nao+(i0+0)];
                dd_cache25 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+2)*nao+(i0+1)];
                dd_cache26 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+2)*nao+(i0+2)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache6 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache7 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache8 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache9 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+1)]);
                dd_cache10 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+1)]);
                dd_cache11 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+1)]);
                dd_cache12 += fac * (dm[(j0+1)*nao+(k0+1)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+1)] + dmb[(j0+1)*nao+(k0+1)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+1)]);
                dd_cache13 += fac * (dm[(j0+1)*nao+(k0+1)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+1)] + dmb[(j0+1)*nao+(k0+1)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+1)]);
                dd_cache14 += fac * (dm[(j0+1)*nao+(k0+1)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+1)] + dmb[(j0+1)*nao+(k0+1)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+1)]);
                dd_cache15 += fac * (dm[(j0+2)*nao+(k0+1)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+1)] + dmb[(j0+2)*nao+(k0+1)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+1)]);
                dd_cache16 += fac * (dm[(j0+2)*nao+(k0+1)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+1)] + dmb[(j0+2)*nao+(k0+1)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+1)]);
                dd_cache17 += fac * (dm[(j0+2)*nao+(k0+1)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+1)] + dmb[(j0+2)*nao+(k0+1)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+1)]);
                dd_cache18 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+2)]);
                dd_cache19 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+2)]);
                dd_cache20 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+2)]);
                dd_cache21 += fac * (dm[(j0+1)*nao+(k0+2)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+2)] + dmb[(j0+1)*nao+(k0+2)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+2)]);
                dd_cache22 += fac * (dm[(j0+1)*nao+(k0+2)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+2)] + dmb[(j0+1)*nao+(k0+2)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+2)]);
                dd_cache23 += fac * (dm[(j0+1)*nao+(k0+2)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+2)] + dmb[(j0+1)*nao+(k0+2)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+2)]);
                dd_cache24 += fac * (dm[(j0+2)*nao+(k0+2)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+2)] + dmb[(j0+2)*nao+(k0+2)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+2)]);
                dd_cache25 += fac * (dm[(j0+2)*nao+(k0+2)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+2)] + dmb[(j0+2)*nao+(k0+2)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+2)]);
                dd_cache26 += fac * (dm[(j0+2)*nao+(k0+2)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+2)] + dmb[(j0+2)*nao+(k0+2)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+2)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache1 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache2 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache3 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+0)]+dmb[(j0+1)*nao+(i0+0)]);
                dd_cache4 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+1)]+dmb[(j0+1)*nao+(i0+1)]);
                dd_cache5 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+2)]+dmb[(j0+1)*nao+(i0+2)]);
                dd_cache6 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+0)]+dmb[(j0+2)*nao+(i0+0)]);
                dd_cache7 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+1)]+dmb[(j0+2)*nao+(i0+1)]);
                dd_cache8 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+2)]+dmb[(j0+2)*nao+(i0+2)]);
                dd_cache9 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache10 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache11 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache12 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+1)*nao+(i0+0)]+dmb[(j0+1)*nao+(i0+0)]);
                dd_cache13 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+1)*nao+(i0+1)]+dmb[(j0+1)*nao+(i0+1)]);
                dd_cache14 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+1)*nao+(i0+2)]+dmb[(j0+1)*nao+(i0+2)]);
                dd_cache15 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+2)*nao+(i0+0)]+dmb[(j0+2)*nao+(i0+0)]);
                dd_cache16 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+2)*nao+(i0+1)]+dmb[(j0+2)*nao+(i0+1)]);
                dd_cache17 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+2)*nao+(i0+2)]+dmb[(j0+2)*nao+(i0+2)]);
                dd_cache18 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache19 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache20 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache21 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+1)*nao+(i0+0)]+dmb[(j0+1)*nao+(i0+0)]);
                dd_cache22 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+1)*nao+(i0+1)]+dmb[(j0+1)*nao+(i0+1)]);
                dd_cache23 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+1)*nao+(i0+2)]+dmb[(j0+1)*nao+(i0+2)]);
                dd_cache24 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+2)*nao+(i0+0)]+dmb[(j0+2)*nao+(i0+0)]);
                dd_cache25 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+2)*nao+(i0+1)]+dmb[(j0+2)*nao+(i0+1)]);
                dd_cache26 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+2)*nao+(i0+2)]+dmb[(j0+2)*nao+(i0+2)]);
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = ck[kp] * cl[lp] * Kcd;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[ijp];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = rjri[0] * aj_aij;
                double ypa = rjri[1] * aj_aij;
                double zpa = rjri[2] * aj_aij;
                double xij = ri[0] + xpa;
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xqc = xlxk * al_akl;
                double yqc = ylyk * al_akl;
                double zqc = zlzk * al_akl;
                double xkl = rk[0] + xqc;
                double ykl = rk[1] + yqc;
                double zkl = rk[2] + zqc;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double rr = xpq*xpq + ypq*ypq + zpq*zpq;
                double theta = aij * akl / (aij + akl);
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < nroots; ++irys) {
                    double wt = rw[(2*irys+1)*256] * fac;
                    double rt = rw[ 2*irys   *256];
                    double rt_aa = rt / (aij + akl);
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    double b00 = .5 * rt_aa;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    double hrr_1110x = trr_21x - xjxi * trr_11x;
                    dd = dd_cache0;
                    Ix = hrr_1110x;
                    Iy = 1;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    double trr_30x = c0x * trr_20x + 2*b10 * trr_10x;
                    double trr_31x = cpx * trr_30x + 3*b00 * trr_20x;
                    double hrr_2110x = trr_31x - xjxi * trr_21x;
                    fxi = ai2 * hrr_2110x;
                    double trr_01x = cpx * 1;
                    double hrr_0110x = trr_11x - xjxi * trr_01x;
                    fxi -= 1 * hrr_0110x;
                    v_ix += fxi * prod_yz;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1210x = hrr_2110x - xjxi * hrr_1110x;
                    fxj = aj2 * hrr_1210x;
                    fxj -= 1 * trr_11x;
                    v_jx += fxj * prod_yz;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double b01 = .5/akl * (1 - rt_akl);
                    double trr_22x = cpx * trr_21x + 1*b01 * trr_20x + 2*b00 * trr_11x;
                    double trr_12x = cpx * trr_11x + 1*b01 * trr_10x + 1*b00 * trr_01x;
                    double hrr_1120x = trr_22x - xjxi * trr_12x;
                    fxk = ak2 * hrr_1120x;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    fxk -= 1 * hrr_1100x;
                    v_kx += fxk * prod_yz;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_2011x = trr_22x - xlxk * trr_21x;
                    double hrr_1011x = trr_12x - xlxk * trr_11x;
                    double hrr_1111x = hrr_2011x - xjxi * hrr_1011x;
                    fxl = al2 * hrr_1111x;
                    v_lx += fxl * prod_yz;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache1;
                    Ix = hrr_0110x;
                    Iy = trr_10y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1110x;
                    v_ix += fxi * prod_yz;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0210x = hrr_1110x - xjxi * hrr_0110x;
                    fxj = aj2 * hrr_0210x;
                    fxj -= 1 * trr_01x;
                    v_jx += fxj * prod_yz;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_02x = cpx * trr_01x + 1*b01 * 1;
                    double hrr_0120x = trr_12x - xjxi * trr_02x;
                    fxk = ak2 * hrr_0120x;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    fxk -= 1 * hrr_0100x;
                    v_kx += fxk * prod_yz;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0011x = trr_02x - xlxk * trr_01x;
                    double hrr_0111x = hrr_1011x - xjxi * hrr_0011x;
                    fxl = al2 * hrr_0111x;
                    v_lx += fxl * prod_yz;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache2;
                    Ix = hrr_0110x;
                    Iy = 1;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1110x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0210x;
                    fxj -= 1 * trr_01x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0120x;
                    fxk -= 1 * hrr_0100x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0111x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache3;
                    Ix = trr_11x;
                    Iy = hrr_0100y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_21x;
                    fxi -= 1 * trr_01x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1110x;
                    v_jx += fxj * prod_yz;
                    double hrr_0200y = hrr_1100y - yjyi * hrr_0100y;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_12x;
                    fxk -= 1 * trr_10x;
                    v_kx += fxk * prod_yz;
                    double hrr_0110y = trr_11y - yjyi * trr_01y;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1011x;
                    v_lx += fxl * prod_yz;
                    double hrr_0101y = hrr_1001y - yjyi * hrr_0001y;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache4;
                    Ix = trr_01x;
                    Iy = hrr_1100y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    double trr_30y = c0y * trr_20y + 2*b10 * trr_10y;
                    double hrr_2100y = trr_30y - yjyi * trr_20y;
                    fyi = ai2 * hrr_2100y;
                    fyi -= 1 * hrr_0100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    double hrr_1200y = hrr_2100y - yjyi * hrr_1100y;
                    fyj = aj2 * hrr_1200y;
                    fyj -= 1 * trr_10y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    double hrr_1110y = trr_21y - yjyi * trr_11y;
                    fyk = ak2 * hrr_1110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    double hrr_2001y = trr_21y - ylyk * trr_20y;
                    double hrr_1101y = hrr_2001y - yjyi * hrr_1001y;
                    fyl = al2 * hrr_1101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache5;
                    Ix = trr_01x;
                    Iy = hrr_0100y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache6;
                    Ix = trr_11x;
                    Iy = 1;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_21x;
                    fxi -= 1 * trr_01x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0200z = hrr_1100z - zjzi * hrr_0100z;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_12x;
                    fxk -= 1 * trr_10x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double hrr_0110z = trr_11z - zjzi * trr_01z;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0101z = hrr_1001z - zjzi * hrr_0001z;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache7;
                    Ix = trr_01x;
                    Iy = trr_10y;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache8;
                    Ix = trr_01x;
                    Iy = 1;
                    Iz = hrr_1100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_30z = c0z * trr_20z + 2*b10 * trr_10z;
                    double hrr_2100z = trr_30z - zjzi * trr_20z;
                    fzi = ai2 * hrr_2100z;
                    fzi -= 1 * hrr_0100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1200z = hrr_2100z - zjzi * hrr_1100z;
                    fzj = aj2 * hrr_1200z;
                    fzj -= 1 * trr_10z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    double hrr_1110z = trr_21z - zjzi * trr_11z;
                    fzk = ak2 * hrr_1110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_2001z = trr_21z - zlzk * trr_20z;
                    double hrr_1101z = hrr_2001z - zjzi * hrr_1001z;
                    fzl = al2 * hrr_1101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache9;
                    Ix = hrr_1100x;
                    Iy = trr_01y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    double hrr_2100x = trr_30x - xjxi * trr_20x;
                    fxi = ai2 * hrr_2100x;
                    fxi -= 1 * hrr_0100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1200x = hrr_2100x - xjxi * hrr_1100x;
                    fxj = aj2 * hrr_1200x;
                    fxj -= 1 * trr_10x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_1110x;
                    v_kx += fxk * prod_yz;
                    double trr_02y = cpy * trr_01y + 1*b01 * 1;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_2001x = trr_21x - xlxk * trr_20x;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    double hrr_1101x = hrr_2001x - xjxi * hrr_1001x;
                    fxl = al2 * hrr_1101x;
                    v_lx += fxl * prod_yz;
                    double hrr_0011y = trr_02y - ylyk * trr_01y;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache10;
                    Ix = hrr_0100x;
                    Iy = trr_11y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_21y;
                    fyi -= 1 * trr_01y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0200x = hrr_1100x - xjxi * hrr_0100x;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    double trr_12y = cpy * trr_11y + 1*b01 * trr_10y + 1*b00 * trr_01y;
                    fyk = ak2 * trr_12y;
                    fyk -= 1 * trr_10y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    double hrr_0101x = hrr_1001x - xjxi * hrr_0001x;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    double hrr_1011y = trr_12y - ylyk * trr_11y;
                    fyl = al2 * hrr_1011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache11;
                    Ix = hrr_0100x;
                    Iy = trr_01y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache12;
                    Ix = trr_10x;
                    Iy = hrr_0110y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1110y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    double hrr_0210y = hrr_1110y - yjyi * hrr_0110y;
                    fyj = aj2 * hrr_0210y;
                    fyj -= 1 * trr_01y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    double hrr_0120y = trr_12y - yjyi * trr_02y;
                    fyk = ak2 * hrr_0120y;
                    fyk -= 1 * hrr_0100y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    double hrr_0111y = hrr_1011y - yjyi * hrr_0011y;
                    fyl = al2 * hrr_0111y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache13;
                    Ix = 1;
                    Iy = hrr_1110y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    double trr_31y = cpy * trr_30y + 3*b00 * trr_20y;
                    double hrr_2110y = trr_31y - yjyi * trr_21y;
                    fyi = ai2 * hrr_2110y;
                    fyi -= 1 * hrr_0110y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    double hrr_1210y = hrr_2110y - yjyi * hrr_1110y;
                    fyj = aj2 * hrr_1210y;
                    fyj -= 1 * trr_11y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    double trr_22y = cpy * trr_21y + 1*b01 * trr_20y + 2*b00 * trr_11y;
                    double hrr_1120y = trr_22y - yjyi * trr_12y;
                    fyk = ak2 * hrr_1120y;
                    fyk -= 1 * hrr_1100y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    double hrr_2011y = trr_22y - ylyk * trr_21y;
                    double hrr_1111y = hrr_2011y - yjyi * hrr_1011y;
                    fyl = al2 * hrr_1111y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache14;
                    Ix = 1;
                    Iy = hrr_0110y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1110y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0210y;
                    fyj -= 1 * trr_01y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0120y;
                    fyk -= 1 * hrr_0100y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0111y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache15;
                    Ix = trr_10x;
                    Iy = trr_01y;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache16;
                    Ix = 1;
                    Iy = trr_11y;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_21y;
                    fyi -= 1 * trr_01y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_12y;
                    fyk -= 1 * trr_10y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache17;
                    Ix = 1;
                    Iy = trr_01y;
                    Iz = hrr_1100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_2100z;
                    fzi -= 1 * hrr_0100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1200z;
                    fzj -= 1 * trr_10z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_1110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache18;
                    Ix = hrr_1100x;
                    Iy = 1;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_2100x;
                    fxi -= 1 * hrr_0100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1200x;
                    fxj -= 1 * trr_10x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_1110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_02z = cpz * trr_01z + 1*b01 * wt;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0011z = trr_02z - zlzk * trr_01z;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache19;
                    Ix = hrr_0100x;
                    Iy = trr_10y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache20;
                    Ix = hrr_0100x;
                    Iy = 1;
                    Iz = trr_11z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_21z;
                    fzi -= 1 * trr_01z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_12z = cpz * trr_11z + 1*b01 * trr_10z + 1*b00 * trr_01z;
                    fzk = ak2 * trr_12z;
                    fzk -= 1 * trr_10z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1011z = trr_12z - zlzk * trr_11z;
                    fzl = al2 * hrr_1011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache21;
                    Ix = trr_10x;
                    Iy = hrr_0100y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache22;
                    Ix = 1;
                    Iy = hrr_1100y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_2100y;
                    fyi -= 1 * hrr_0100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1200y;
                    fyj -= 1 * trr_10y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_1110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache23;
                    Ix = 1;
                    Iy = hrr_0100y;
                    Iz = trr_11z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_21z;
                    fzi -= 1 * trr_01z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_12z;
                    fzk -= 1 * trr_10z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache24;
                    Ix = trr_10x;
                    Iy = 1;
                    Iz = hrr_0110z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1110z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0210z = hrr_1110z - zjzi * hrr_0110z;
                    fzj = aj2 * hrr_0210z;
                    fzj -= 1 * trr_01z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double hrr_0120z = trr_12z - zjzi * trr_02z;
                    fzk = ak2 * hrr_0120z;
                    fzk -= 1 * hrr_0100z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0111z = hrr_1011z - zjzi * hrr_0011z;
                    fzl = al2 * hrr_0111z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache25;
                    Ix = 1;
                    Iy = trr_10y;
                    Iz = hrr_0110z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1110z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0210z;
                    fzj -= 1 * trr_01z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0120z;
                    fzk -= 1 * hrr_0100z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0111z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache26;
                    Ix = 1;
                    Iy = 1;
                    Iz = hrr_1110z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_31z = cpz * trr_30z + 3*b00 * trr_20z;
                    double hrr_2110z = trr_31z - zjzi * trr_21z;
                    fzi = ai2 * hrr_2110z;
                    fzi -= 1 * hrr_0110z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1210z = hrr_2110z - zjzi * hrr_1110z;
                    fzj = aj2 * hrr_1210z;
                    fzj -= 1 * trr_11z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_22z = cpz * trr_21z + 1*b01 * trr_20z + 2*b00 * trr_11z;
                    double hrr_1120z = trr_22z - zjzi * trr_12z;
                    fzk = ak2 * hrr_1120z;
                    fzk -= 1 * hrr_1100z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_2011z = trr_22z - zlzk * trr_21z;
                    double hrr_1111z = hrr_2011z - zjzi * hrr_1011z;
                    fzl = al2 * hrr_1111z;
                    v_lz += fzl * prod_xy;
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_1111(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 32;
    constexpr int gout_stride = 8;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    double *dd_cache = dd_pool + blockIdx.x * 2592 + sq_id;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rlrk = shared_memory + sq_id;
    double *Rpq = shared_memory + nsq_per_block * 3 + sq_id;
    double *gx = shared_memory + nsq_per_block * 6 + sq_id;
    double *rw = shared_memory + nsq_per_block * 114 + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (114+nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        if (gout_id == 0) {
            rlrk[0] = xlxk;
            rlrk[32] = ylyk;
            rlrk[64] = zlzk;
        }
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        int do_j = jk.j_factor != 0.;
        int do_k = jk.k_factor != 0.;
        if (jk.n_dm == 1) {
            for (int n = gout_id; n < 81; n+=8) {
                int kl = n / 9;
                int ij = n % 9;
                int i = ij % 3;
                int j = ij / 3;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm[_jk] * dm[_il] + dm[_jl] * dm[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * dm[_ji] * dm[_lk];
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        } else {
            double *dmb = dm + nao * nao;
            for (int n = gout_id; n < 81; n+=8) {
                int kl = n / 9;
                int ij = n % 9;
                int i = ij % 3;
                int j = ij / 3;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm [_jk] * dm [_il] + dm [_jl] * dm [_ik] +
                                         dmb[_jk] * dmb[_il] + dmb[_jl] * dmb[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * (dm[_ji] + dmb[_ji]) * (dm[_lk] + dmb[_lk]);
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            __syncthreads();
            if (gout_id == 0) {
                double xlxk = rlrk[0];
                double ylyk = rlrk[32];
                double zlzk = rlrk[64];
                double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
                double ckcl = ck[kp] * cl[lp] * Kcd;
                gx[0] = ckcl;
            }
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double xij = ri[0] + (rjri[0]) * aj_aij;
                double yij = ri[1] + (rjri[1]) * aj_aij;
                double zij = ri[2] + (rjri[2]) * aj_aij;
                double xkl = rk[0] + rlrk[0] * al_akl;
                double ykl = rk[1] + rlrk[32] * al_akl;
                double zkl = rk[2] + rlrk[64] * al_akl;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                __syncthreads();
                if (gout_id == 0) {
                    Rpq[0] = xpq;
                    Rpq[32] = ypq;
                    Rpq[64] = zpq;
                    double cicj = cicj_cache[ijp];
                    gx[1152] = cicj / (aij*akl*sqrt(aij+akl));
                }
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                double s0, s1, s2;
                for (int irys = 0; irys < nroots; ++irys) {
                    __syncthreads();
                    double rt = rw[irys*64];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double rt_akl = rt_aa * aij;
                    double b00 = .5 * rt_aa;
                    double b10 = .5/aij * (1 - rt_aij);
                    double b01 = .5/akl * (1 - rt_akl);
                    for (int n = gout_id; n < 3; n += 8) {
                        if (n == 2) {
                            gx[2304] = rw[irys*64+32];
                        }
                        double *_gx = gx + n * 1152;
                        double xjxi = rjri[n];
                        double Rpa = xjxi * aj_aij;
                        double c0x = Rpa - rt_aij * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = c0x * s0;
                        _gx[32] = s1;
                        s2 = c0x * s1 + 1 * b10 * s0;
                        _gx[64] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 2 * b10 * s0;
                        _gx[96] = s2;
                        double xlxk = rlrk[n*32];
                        double Rqc = xlxk * al_akl;
                        double cpx = Rqc + rt_akl * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = cpx * s0;
                        _gx[192] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        _gx[384] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        _gx[576] = s2;
                        s0 = _gx[32];
                        s1 = cpx * s0;
                        s1 += 1 * b00 * _gx[0];
                        _gx[224] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 1 * b00 * _gx[192];
                        _gx[416] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 1 * b00 * _gx[384];
                        _gx[608] = s2;
                        s0 = _gx[64];
                        s1 = cpx * s0;
                        s1 += 2 * b00 * _gx[32];
                        _gx[256] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 2 * b00 * _gx[224];
                        _gx[448] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 2 * b00 * _gx[416];
                        _gx[640] = s2;
                        s0 = _gx[96];
                        s1 = cpx * s0;
                        s1 += 3 * b00 * _gx[64];
                        _gx[288] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 3 * b00 * _gx[256];
                        _gx[480] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 3 * b00 * _gx[448];
                        _gx[672] = s2;
                        s1 = _gx[96];
                        s0 = _gx[64];
                        _gx[160] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[128] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[96] = s1 - xjxi * s0;
                        s1 = _gx[288];
                        s0 = _gx[256];
                        _gx[352] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[224];
                        _gx[320] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[192];
                        _gx[288] = s1 - xjxi * s0;
                        s1 = _gx[480];
                        s0 = _gx[448];
                        _gx[544] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[416];
                        _gx[512] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[384];
                        _gx[480] = s1 - xjxi * s0;
                        s1 = _gx[672];
                        s0 = _gx[640];
                        _gx[736] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[608];
                        _gx[704] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[576];
                        _gx[672] = s1 - xjxi * s0;
                        s1 = _gx[576];
                        s0 = _gx[384];
                        _gx[960] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[192];
                        _gx[768] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[576] = s1 - xlxk * s0;
                        s1 = _gx[608];
                        s0 = _gx[416];
                        _gx[992] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[224];
                        _gx[800] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[608] = s1 - xlxk * s0;
                        s1 = _gx[640];
                        s0 = _gx[448];
                        _gx[1024] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[256];
                        _gx[832] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[64];
                        _gx[640] = s1 - xlxk * s0;
                        s1 = _gx[672];
                        s0 = _gx[480];
                        _gx[1056] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[288];
                        _gx[864] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[96];
                        _gx[672] = s1 - xlxk * s0;
                        s1 = _gx[704];
                        s0 = _gx[512];
                        _gx[1088] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[320];
                        _gx[896] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[128];
                        _gx[704] = s1 - xlxk * s0;
                        s1 = _gx[736];
                        s0 = _gx[544];
                        _gx[1120] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[352];
                        _gx[928] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[160];
                        _gx[736] = s1 - xlxk * s0;
                    }
                    __syncthreads();
                    double xjxi = rjri[0];
                    double yjyi = rjri[1];
                    double zjzi = rjri[2];
                    double xlxk = rlrk[0];
                    double ylyk = rlrk[32];
                    double zlzk = rlrk[64];
                    switch (gout_id) {
                    case 0:
                        dd = dd_cache[0];
                        Ix = gx[896];
                        Iy = gx[1152];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[928] - 1 * gx[864]) * prod_yz;
                        v_kx += (ak2 * gx[1088] - 1 * gx[704]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += (aj2 * (gx[928] - xjxi * Ix) - 1 * gx[800]) * prod_yz;
                        v_lx += (al2 * (gx[1088] - xlxk * Ix) - 1 * gx[320]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[256];
                        Ix = gx[768];
                        Iy = gx[1152];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += (ak2 * gx[960] - 1 * gx[576]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += (ai2 * gx[2464] - 1 * gx[2400]) * prod_xy;
                        v_kz += ak2 * gx[2624] * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[960] - xlxk * Ix) - 1 * gx[192]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2624] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[512];
                        Ix = gx[576];
                        Iy = gx[1376];
                        Iz = gx[2400];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[608] * prod_yz;
                        v_kx += ak2 * gx[768] * prod_yz;
                        v_iy += (ai2 * gx[1408] - 1 * gx[1344]) * prod_xz;
                        v_ky += (ak2 * gx[1568] - 1 * gx[1184]) * prod_xz;
                        v_iz += ai2 * gx[2432] * prod_xy;
                        v_kz += ak2 * gx[2592] * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1408] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2432] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[768];
                        Ix = gx[608];
                        Iy = gx[1152];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[640] - 1 * gx[576]) * prod_yz;
                        v_kx += ak2 * gx[800] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[2624] * prod_xy;
                        v_kz += (ak2 * gx[2784] - 1 * gx[2400]) * prod_xy;
                        v_jx += aj2 * (gx[640] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[800] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2624] - zjzi * Iz) - 1 * gx[2496]) * prod_xy;
                        v_lz += al2 * (gx[2784] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1024];
                        Ix = gx[192];
                        Iy = gx[1824];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[224] * prod_yz;
                        v_kx += (ak2 * gx[384] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1856] * prod_xz;
                        v_ky += ak2 * gx[2016] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2528] * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1856] - yjyi * Iy) - 1 * gx[1728]) * prod_xz;
                        v_ly += (al2 * (gx[2016] - ylyk * Iy) - 1 * gx[1248]) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2528] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1280];
                        Ix = gx[0];
                        Iy = gx[2048];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += (ai2 * gx[2080] - 1 * gx[2016]) * prod_xz;
                        v_ky += (ak2 * gx[2240] - 1 * gx[1856]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2080] - yjyi * Iy) - 1 * gx[1952]) * prod_xz;
                        v_ly += (al2 * (gx[2240] - ylyk * Iy) - 1 * gx[1472]) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1536];
                        Ix = gx[32];
                        Iy = gx[1824];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[224] * prod_yz;
                        v_iy += ai2 * gx[1856] * prod_xz;
                        v_ky += ak2 * gx[2016] * prod_xz;
                        v_iz += ai2 * gx[2528] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2304]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[224] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1856] - yjyi * Iy) - 1 * gx[1728]) * prod_xz;
                        v_ly += (al2 * (gx[2016] - ylyk * Iy) - 1 * gx[1248]) * prod_xz;
                        v_jz += aj2 * (gx[2528] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1792];
                        Ix = gx[288];
                        Iy = gx[1152];
                        Iz = gx[2912];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[320] * prod_yz;
                        v_kx += (ak2 * gx[480] - 1 * gx[96]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += (ai2 * gx[2944] - 1 * gx[2880]) * prod_xy;
                        v_kz += ak2 * gx[3104] * prod_xy;
                        v_jx += (aj2 * (gx[320] - xjxi * Ix) - 1 * gx[192]) * prod_yz;
                        v_lx += al2 * (gx[480] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2944] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3104] - zlzk * Iz) - 1 * gx[2336]) * prod_xy;
                        dd = dd_cache[2048];
                        Ix = gx[96];
                        Iy = gx[1376];
                        Iz = gx[2880];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[128] * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1408] - 1 * gx[1344]) * prod_xz;
                        v_ky += (ak2 * gx[1568] - 1 * gx[1184]) * prod_xz;
                        v_iz += ai2 * gx[2912] * prod_xy;
                        v_kz += ak2 * gx[3072] * prod_xy;
                        v_jx += (aj2 * (gx[128] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1408] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2912] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3072] - zlzk * Iz) - 1 * gx[2304]) * prod_xy;
                        dd = dd_cache[2304];
                        Ix = gx[128];
                        Iy = gx[1152];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[160] - 1 * gx[96]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += (ak2 * gx[3264] - 1 * gx[2880]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3264] - zlzk * Iz) - 1 * gx[2496]) * prod_xy;
                        dd = dd_cache[2560];
                        Ix = gx[0];
                        Iy = gx[1152];
                        Iz = gx[3200];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += (ai2 * gx[3232] - 1 * gx[3168]) * prod_xy;
                        v_kz += (ak2 * gx[3392] - 1 * gx[3008]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3232] - zjzi * Iz) - 1 * gx[3104]) * prod_xy;
                        v_lz += (al2 * (gx[3392] - zlzk * Iz) - 1 * gx[2624]) * prod_xy;
                        break;
                    case 1:
                        dd = dd_cache[32];
                        Ix = gx[864];
                        Iy = gx[1184];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[896] * prod_yz;
                        v_kx += (ak2 * gx[1056] - 1 * gx[672]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1376] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += (aj2 * (gx[896] - xjxi * Ix) - 1 * gx[768]) * prod_yz;
                        v_lx += (al2 * (gx[1056] - xlxk * Ix) - 1 * gx[288]) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1376] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[288];
                        Ix = gx[704];
                        Iy = gx[1344];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[736] - 1 * gx[672]) * prod_yz;
                        v_kx += ak2 * gx[896] * prod_yz;
                        v_iy += ai2 * gx[1376] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1152]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += (aj2 * (gx[736] - xjxi * Ix) - 1 * gx[608]) * prod_yz;
                        v_lx += (al2 * (gx[896] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[544];
                        Ix = gx[576];
                        Iy = gx[1344];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[608] * prod_yz;
                        v_kx += ak2 * gx[768] * prod_yz;
                        v_iy += ai2 * gx[1376] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2464] - 1 * gx[2400]) * prod_xy;
                        v_kz += ak2 * gx[2624] * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2624] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[800];
                        Ix = gx[576];
                        Iy = gx[1184];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[608] * prod_yz;
                        v_kx += ak2 * gx[768] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1376] * prod_xz;
                        v_iz += ai2 * gx[2624] * prod_xy;
                        v_kz += (ak2 * gx[2784] - 1 * gx[2400]) * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1376] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2624] - zjzi * Iz) - 1 * gx[2496]) * prod_xy;
                        v_lz += al2 * (gx[2784] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1056];
                        Ix = gx[224];
                        Iy = gx[1728];
                        Iz = gx[2400];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[256] - 1 * gx[192]) * prod_yz;
                        v_kx += (ak2 * gx[416] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1760] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += ai2 * gx[2432] * prod_xy;
                        v_kz += ak2 * gx[2592] * prod_xy;
                        v_jx += aj2 * (gx[256] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1760] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1920] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += (aj2 * (gx[2432] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1312];
                        Ix = gx[0];
                        Iy = gx[2016];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[2048] * prod_xz;
                        v_ky += (ak2 * gx[2208] - 1 * gx[1824]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2528] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2048] - yjyi * Iy) - 1 * gx[1920]) * prod_xz;
                        v_ly += (al2 * (gx[2208] - ylyk * Iy) - 1 * gx[1440]) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2528] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1568];
                        Ix = gx[0];
                        Iy = gx[1856];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += (ai2 * gx[1888] - 1 * gx[1824]) * prod_xz;
                        v_ky += ak2 * gx[2048] * prod_xz;
                        v_iz += ai2 * gx[2528] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2304]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1888] - yjyi * Iy) - 1 * gx[1760]) * prod_xz;
                        v_ly += (al2 * (gx[2048] - ylyk * Iy) - 1 * gx[1280]) * prod_xz;
                        v_jz += aj2 * (gx[2528] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1824];
                        Ix = gx[224];
                        Iy = gx[1248];
                        Iz = gx[2880];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[256] - 1 * gx[192]) * prod_yz;
                        v_kx += (ak2 * gx[416] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1280] * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += ai2 * gx[2912] * prod_xy;
                        v_kz += ak2 * gx[3072] * prod_xy;
                        v_jx += aj2 * (gx[256] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1280] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2912] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3072] - zlzk * Iz) - 1 * gx[2304]) * prod_xy;
                        dd = dd_cache[2080];
                        Ix = gx[96];
                        Iy = gx[1344];
                        Iz = gx[2912];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[128] * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1376] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2944] - 1 * gx[2880]) * prod_xy;
                        v_kz += ak2 * gx[3104] * prod_xy;
                        v_jx += (aj2 * (gx[128] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2944] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3104] - zlzk * Iz) - 1 * gx[2336]) * prod_xy;
                        dd = dd_cache[2336];
                        Ix = gx[96];
                        Iy = gx[1184];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[128] * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1376] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += (ak2 * gx[3264] - 1 * gx[2880]) * prod_xy;
                        v_jx += (aj2 * (gx[128] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1376] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3264] - zlzk * Iz) - 1 * gx[2496]) * prod_xy;
                        break;
                    case 2:
                        dd = dd_cache[64];
                        Ix = gx[864];
                        Iy = gx[1152];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[896] * prod_yz;
                        v_kx += (ak2 * gx[1056] - 1 * gx[672]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2528] * prod_xy;
                        v_jx += (aj2 * (gx[896] - xjxi * Ix) - 1 * gx[768]) * prod_yz;
                        v_lx += (al2 * (gx[1056] - xlxk * Ix) - 1 * gx[288]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2528] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[320];
                        Ix = gx[672];
                        Iy = gx[1376];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[704] * prod_yz;
                        v_kx += ak2 * gx[864] * prod_yz;
                        v_iy += (ai2 * gx[1408] - 1 * gx[1344]) * prod_xz;
                        v_ky += (ak2 * gx[1568] - 1 * gx[1184]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += (aj2 * (gx[704] - xjxi * Ix) - 1 * gx[576]) * prod_yz;
                        v_lx += (al2 * (gx[864] - xlxk * Ix) - 1 * gx[96]) * prod_yz;
                        v_jy += aj2 * (gx[1408] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[576];
                        Ix = gx[704];
                        Iy = gx[1152];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[736] - 1 * gx[672]) * prod_yz;
                        v_kx += ak2 * gx[896] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[2528] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2304]) * prod_xy;
                        v_jx += (aj2 * (gx[736] - xjxi * Ix) - 1 * gx[608]) * prod_yz;
                        v_lx += (al2 * (gx[896] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2528] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[832];
                        Ix = gx[576];
                        Iy = gx[1152];
                        Iz = gx[2624];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[608] * prod_yz;
                        v_kx += ak2 * gx[768] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += (ai2 * gx[2656] - 1 * gx[2592]) * prod_xy;
                        v_kz += (ak2 * gx[2816] - 1 * gx[2432]) * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2656] - zjzi * Iz) - 1 * gx[2528]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1088];
                        Ix = gx[192];
                        Iy = gx[1760];
                        Iz = gx[2400];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[224] * prod_yz;
                        v_kx += (ak2 * gx[384] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1792] - 1 * gx[1728]) * prod_xz;
                        v_ky += ak2 * gx[1952] * prod_xz;
                        v_iz += ai2 * gx[2432] * prod_xy;
                        v_kz += ak2 * gx[2592] * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1792] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1952] - ylyk * Iy) - 1 * gx[1184]) * prod_xz;
                        v_jz += (aj2 * (gx[2432] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1344];
                        Ix = gx[32];
                        Iy = gx[1920];
                        Iz = gx[2400];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[224] * prod_yz;
                        v_iy += ai2 * gx[1952] * prod_xz;
                        v_ky += (ak2 * gx[2112] - 1 * gx[1728]) * prod_xz;
                        v_iz += ai2 * gx[2432] * prod_xy;
                        v_kz += ak2 * gx[2592] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[224] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1952] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2112] - ylyk * Iy) - 1 * gx[1344]) * prod_xz;
                        v_jz += (aj2 * (gx[2432] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1600];
                        Ix = gx[0];
                        Iy = gx[1824];
                        Iz = gx[2528];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1856] * prod_xz;
                        v_ky += ak2 * gx[2016] * prod_xz;
                        v_iz += (ai2 * gx[2560] - 1 * gx[2496]) * prod_xy;
                        v_kz += (ak2 * gx[2720] - 1 * gx[2336]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1856] - yjyi * Iy) - 1 * gx[1728]) * prod_xz;
                        v_ly += (al2 * (gx[2016] - ylyk * Iy) - 1 * gx[1248]) * prod_xz;
                        v_jz += aj2 * (gx[2560] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1856];
                        Ix = gx[192];
                        Iy = gx[1280];
                        Iz = gx[2880];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[224] * prod_yz;
                        v_kx += (ak2 * gx[384] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1312] - 1 * gx[1248]) * prod_xz;
                        v_ky += ak2 * gx[1472] * prod_xz;
                        v_iz += ai2 * gx[2912] * prod_xy;
                        v_kz += ak2 * gx[3072] * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1184]) * prod_xz;
                        v_ly += al2 * (gx[1472] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2912] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3072] - zlzk * Iz) - 1 * gx[2304]) * prod_xy;
                        dd = dd_cache[2112];
                        Ix = gx[32];
                        Iy = gx[1440];
                        Iz = gx[2880];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[224] * prod_yz;
                        v_iy += ai2 * gx[1472] * prod_xz;
                        v_ky += (ak2 * gx[1632] - 1 * gx[1248]) * prod_xz;
                        v_iz += ai2 * gx[2912] * prod_xy;
                        v_kz += ak2 * gx[3072] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[224] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1472] - yjyi * Iy) - 1 * gx[1344]) * prod_xz;
                        v_ly += al2 * (gx[1632] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2912] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3072] - zlzk * Iz) - 1 * gx[2304]) * prod_xy;
                        dd = dd_cache[2368];
                        Ix = gx[96];
                        Iy = gx[1152];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[128] * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += (ak2 * gx[3296] - 1 * gx[2912]) * prod_xy;
                        v_jx += (aj2 * (gx[128] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3296] - zlzk * Iz) - 1 * gx[2528]) * prod_xy;
                        break;
                    case 3:
                        dd = dd_cache[96];
                        Ix = gx[800];
                        Iy = gx[1248];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[832] - 1 * gx[768]) * prod_yz;
                        v_kx += (ak2 * gx[992] - 1 * gx[608]) * prod_yz;
                        v_iy += ai2 * gx[1280] * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += aj2 * (gx[832] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[992] - xlxk * Ix) - 1 * gx[224]) * prod_yz;
                        v_jy += (aj2 * (gx[1280] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[352];
                        Ix = gx[672];
                        Iy = gx[1344];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[704] * prod_yz;
                        v_kx += ak2 * gx[864] * prod_yz;
                        v_iy += ai2 * gx[1376] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2528] * prod_xy;
                        v_jx += (aj2 * (gx[704] - xjxi * Ix) - 1 * gx[576]) * prod_yz;
                        v_lx += (al2 * (gx[864] - xlxk * Ix) - 1 * gx[96]) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2528] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[608];
                        Ix = gx[672];
                        Iy = gx[1184];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[704] * prod_yz;
                        v_kx += ak2 * gx[864] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1376] * prod_xz;
                        v_iz += ai2 * gx[2528] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2304]) * prod_xy;
                        v_jx += (aj2 * (gx[704] - xjxi * Ix) - 1 * gx[576]) * prod_yz;
                        v_lx += (al2 * (gx[864] - xlxk * Ix) - 1 * gx[96]) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1376] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2528] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[864];
                        Ix = gx[320];
                        Iy = gx[1728];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 1 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[128]) * prod_yz;
                        v_iy += ai2 * gx[1760] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += (aj2 * (gx[352] - xjxi * Ix) - 1 * gx[224]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1760] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1920] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1120];
                        Ix = gx[192];
                        Iy = gx[1728];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[224] * prod_yz;
                        v_kx += (ak2 * gx[384] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1760] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += (ai2 * gx[2464] - 1 * gx[2400]) * prod_xy;
                        v_kz += ak2 * gx[2624] * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1760] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1920] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2624] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1376];
                        Ix = gx[0];
                        Iy = gx[1952];
                        Iz = gx[2400];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += (ai2 * gx[1984] - 1 * gx[1920]) * prod_xz;
                        v_ky += (ak2 * gx[2144] - 1 * gx[1760]) * prod_xz;
                        v_iz += ai2 * gx[2432] * prod_xy;
                        v_kz += ak2 * gx[2592] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1984] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2144] - ylyk * Iy) - 1 * gx[1376]) * prod_xz;
                        v_jz += (aj2 * (gx[2432] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1632];
                        Ix = gx[32];
                        Iy = gx[1728];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[224] * prod_yz;
                        v_iy += ai2 * gx[1760] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += ai2 * gx[2624] * prod_xy;
                        v_kz += (ak2 * gx[2784] - 1 * gx[2400]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[224] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1760] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1920] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += (aj2 * (gx[2624] - zjzi * Iz) - 1 * gx[2496]) * prod_xy;
                        v_lz += al2 * (gx[2784] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1888];
                        Ix = gx[192];
                        Iy = gx[1248];
                        Iz = gx[2912];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[224] * prod_yz;
                        v_kx += (ak2 * gx[384] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1280] * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += (ai2 * gx[2944] - 1 * gx[2880]) * prod_xy;
                        v_kz += ak2 * gx[3104] * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1280] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2944] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3104] - zlzk * Iz) - 1 * gx[2336]) * prod_xy;
                        dd = dd_cache[2144];
                        Ix = gx[0];
                        Iy = gx[1472];
                        Iz = gx[2880];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += (ai2 * gx[1504] - 1 * gx[1440]) * prod_xz;
                        v_ky += (ak2 * gx[1664] - 1 * gx[1280]) * prod_xz;
                        v_iz += ai2 * gx[2912] * prod_xy;
                        v_kz += ak2 * gx[3072] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1504] - yjyi * Iy) - 1 * gx[1376]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2912] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3072] - zlzk * Iz) - 1 * gx[2304]) * prod_xy;
                        dd = dd_cache[2400];
                        Ix = gx[32];
                        Iy = gx[1248];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[224] * prod_yz;
                        v_iy += ai2 * gx[1280] * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += (ak2 * gx[3264] - 1 * gx[2880]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[224] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1280] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3264] - zlzk * Iz) - 1 * gx[2496]) * prod_xy;
                        break;
                    case 4:
                        dd = dd_cache[128];
                        Ix = gx[768];
                        Iy = gx[1280];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += (ak2 * gx[960] - 1 * gx[576]) * prod_yz;
                        v_iy += (ai2 * gx[1312] - 1 * gx[1248]) * prod_xz;
                        v_ky += ak2 * gx[1472] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[960] - xlxk * Ix) - 1 * gx[192]) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1184]) * prod_xz;
                        v_ly += al2 * (gx[1472] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[384];
                        Ix = gx[608];
                        Iy = gx[1440];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[640] - 1 * gx[576]) * prod_yz;
                        v_kx += ak2 * gx[800] * prod_yz;
                        v_iy += ai2 * gx[1472] * prod_xz;
                        v_ky += (ak2 * gx[1632] - 1 * gx[1248]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += aj2 * (gx[640] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[800] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += (aj2 * (gx[1472] - yjyi * Iy) - 1 * gx[1344]) * prod_xz;
                        v_ly += al2 * (gx[1632] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[640];
                        Ix = gx[672];
                        Iy = gx[1152];
                        Iz = gx[2528];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[704] * prod_yz;
                        v_kx += ak2 * gx[864] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += (ai2 * gx[2560] - 1 * gx[2496]) * prod_xy;
                        v_kz += (ak2 * gx[2720] - 1 * gx[2336]) * prod_xy;
                        v_jx += (aj2 * (gx[704] - xjxi * Ix) - 1 * gx[576]) * prod_yz;
                        v_lx += (al2 * (gx[864] - xlxk * Ix) - 1 * gx[96]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2560] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[896];
                        Ix = gx[288];
                        Iy = gx[1760];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[320] * prod_yz;
                        v_kx += (ak2 * gx[480] - 1 * gx[96]) * prod_yz;
                        v_iy += (ai2 * gx[1792] - 1 * gx[1728]) * prod_xz;
                        v_ky += ak2 * gx[1952] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += (aj2 * (gx[320] - xjxi * Ix) - 1 * gx[192]) * prod_yz;
                        v_lx += al2 * (gx[480] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1792] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1952] - ylyk * Iy) - 1 * gx[1184]) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1152];
                        Ix = gx[128];
                        Iy = gx[1920];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[160] - 1 * gx[96]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1952] * prod_xz;
                        v_ky += (ak2 * gx[2112] - 1 * gx[1728]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1952] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2112] - ylyk * Iy) - 1 * gx[1344]) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1408];
                        Ix = gx[0];
                        Iy = gx[1920];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1952] * prod_xz;
                        v_ky += (ak2 * gx[2112] - 1 * gx[1728]) * prod_xz;
                        v_iz += (ai2 * gx[2464] - 1 * gx[2400]) * prod_xy;
                        v_kz += ak2 * gx[2624] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1952] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2112] - ylyk * Iy) - 1 * gx[1344]) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2624] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1664];
                        Ix = gx[0];
                        Iy = gx[1760];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += (ai2 * gx[1792] - 1 * gx[1728]) * prod_xz;
                        v_ky += ak2 * gx[1952] * prod_xz;
                        v_iz += ai2 * gx[2624] * prod_xy;
                        v_kz += (ak2 * gx[2784] - 1 * gx[2400]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1792] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1952] - ylyk * Iy) - 1 * gx[1184]) * prod_xz;
                        v_jz += (aj2 * (gx[2624] - zjzi * Iz) - 1 * gx[2496]) * prod_xy;
                        v_lz += al2 * (gx[2784] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1920];
                        Ix = gx[224];
                        Iy = gx[1152];
                        Iz = gx[2976];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[256] - 1 * gx[192]) * prod_yz;
                        v_kx += (ak2 * gx[416] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[3008] * prod_xy;
                        v_kz += ak2 * gx[3168] * prod_xy;
                        v_jx += aj2 * (gx[256] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3008] - zjzi * Iz) - 1 * gx[2880]) * prod_xy;
                        v_lz += (al2 * (gx[3168] - zlzk * Iz) - 1 * gx[2400]) * prod_xy;
                        dd = dd_cache[2176];
                        Ix = gx[0];
                        Iy = gx[1440];
                        Iz = gx[2912];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1472] * prod_xz;
                        v_ky += (ak2 * gx[1632] - 1 * gx[1248]) * prod_xz;
                        v_iz += (ai2 * gx[2944] - 1 * gx[2880]) * prod_xy;
                        v_kz += ak2 * gx[3104] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1472] - yjyi * Iy) - 1 * gx[1344]) * prod_xz;
                        v_ly += al2 * (gx[1632] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2944] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3104] - zlzk * Iz) - 1 * gx[2336]) * prod_xy;
                        dd = dd_cache[2432];
                        Ix = gx[0];
                        Iy = gx[1280];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += (ai2 * gx[1312] - 1 * gx[1248]) * prod_xz;
                        v_ky += ak2 * gx[1472] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += (ak2 * gx[3264] - 1 * gx[2880]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1184]) * prod_xz;
                        v_ly += al2 * (gx[1472] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3264] - zlzk * Iz) - 1 * gx[2496]) * prod_xy;
                        break;
                    case 5:
                        dd = dd_cache[160];
                        Ix = gx[768];
                        Iy = gx[1248];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += (ak2 * gx[960] - 1 * gx[576]) * prod_yz;
                        v_iy += ai2 * gx[1280] * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2528] * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[960] - xlxk * Ix) - 1 * gx[192]) * prod_yz;
                        v_jy += (aj2 * (gx[1280] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2528] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[416];
                        Ix = gx[576];
                        Iy = gx[1472];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[608] * prod_yz;
                        v_kx += ak2 * gx[768] * prod_yz;
                        v_iy += (ai2 * gx[1504] - 1 * gx[1440]) * prod_xz;
                        v_ky += (ak2 * gx[1664] - 1 * gx[1280]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += (aj2 * (gx[1504] - yjyi * Iy) - 1 * gx[1376]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[672];
                        Ix = gx[608];
                        Iy = gx[1248];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[640] - 1 * gx[576]) * prod_yz;
                        v_kx += ak2 * gx[800] * prod_yz;
                        v_iy += ai2 * gx[1280] * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += ai2 * gx[2528] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2304]) * prod_xy;
                        v_jx += aj2 * (gx[640] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[800] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += (aj2 * (gx[1280] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2528] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[928];
                        Ix = gx[288];
                        Iy = gx[1728];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[320] * prod_yz;
                        v_kx += (ak2 * gx[480] - 1 * gx[96]) * prod_yz;
                        v_iy += ai2 * gx[1760] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2528] * prod_xy;
                        v_jx += (aj2 * (gx[320] - xjxi * Ix) - 1 * gx[192]) * prod_yz;
                        v_lx += al2 * (gx[480] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1760] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1920] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2528] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1184];
                        Ix = gx[96];
                        Iy = gx[1952];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[128] * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1984] - 1 * gx[1920]) * prod_xz;
                        v_ky += (ak2 * gx[2144] - 1 * gx[1760]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += (aj2 * (gx[128] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1984] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2144] - ylyk * Iy) - 1 * gx[1376]) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1440];
                        Ix = gx[128];
                        Iy = gx[1728];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[160] - 1 * gx[96]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1760] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += ai2 * gx[2528] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2304]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1760] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1920] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += aj2 * (gx[2528] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1696];
                        Ix = gx[0];
                        Iy = gx[1728];
                        Iz = gx[2624];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1760] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += (ai2 * gx[2656] - 1 * gx[2592]) * prod_xy;
                        v_kz += (ak2 * gx[2816] - 1 * gx[2432]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1760] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1920] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += (aj2 * (gx[2656] - zjzi * Iz) - 1 * gx[2528]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1952];
                        Ix = gx[192];
                        Iy = gx[1184];
                        Iz = gx[2976];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[224] * prod_yz;
                        v_kx += (ak2 * gx[384] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1376] * prod_xz;
                        v_iz += ai2 * gx[3008] * prod_xy;
                        v_kz += ak2 * gx[3168] * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1376] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3008] - zjzi * Iz) - 1 * gx[2880]) * prod_xy;
                        v_lz += (al2 * (gx[3168] - zlzk * Iz) - 1 * gx[2400]) * prod_xy;
                        dd = dd_cache[2208];
                        Ix = gx[32];
                        Iy = gx[1344];
                        Iz = gx[2976];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[224] * prod_yz;
                        v_iy += ai2 * gx[1376] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1152]) * prod_xz;
                        v_iz += ai2 * gx[3008] * prod_xy;
                        v_kz += ak2 * gx[3168] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[224] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3008] - zjzi * Iz) - 1 * gx[2880]) * prod_xy;
                        v_lz += (al2 * (gx[3168] - zlzk * Iz) - 1 * gx[2400]) * prod_xy;
                        dd = dd_cache[2464];
                        Ix = gx[0];
                        Iy = gx[1248];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1280] * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += (ak2 * gx[3296] - 1 * gx[2912]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1280] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3296] - zlzk * Iz) - 1 * gx[2528]) * prod_xy;
                        break;
                    case 6:
                        dd = dd_cache[192];
                        Ix = gx[800];
                        Iy = gx[1152];
                        Iz = gx[2400];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[832] - 1 * gx[768]) * prod_yz;
                        v_kx += (ak2 * gx[992] - 1 * gx[608]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[2432] * prod_xy;
                        v_kz += ak2 * gx[2592] * prod_xy;
                        v_jx += aj2 * (gx[832] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[992] - xlxk * Ix) - 1 * gx[224]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2432] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[448];
                        Ix = gx[576];
                        Iy = gx[1440];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[608] * prod_yz;
                        v_kx += ak2 * gx[768] * prod_yz;
                        v_iy += ai2 * gx[1472] * prod_xz;
                        v_ky += (ak2 * gx[1632] - 1 * gx[1248]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2528] * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += (aj2 * (gx[1472] - yjyi * Iy) - 1 * gx[1344]) * prod_xz;
                        v_ly += al2 * (gx[1632] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2528] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[704];
                        Ix = gx[576];
                        Iy = gx[1280];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[608] * prod_yz;
                        v_kx += ak2 * gx[768] * prod_yz;
                        v_iy += (ai2 * gx[1312] - 1 * gx[1248]) * prod_xz;
                        v_ky += ak2 * gx[1472] * prod_xz;
                        v_iz += ai2 * gx[2528] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2304]) * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1184]) * prod_xz;
                        v_ly += al2 * (gx[1472] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2528] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[960];
                        Ix = gx[224];
                        Iy = gx[1824];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[256] - 1 * gx[192]) * prod_yz;
                        v_kx += (ak2 * gx[416] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1856] * prod_xz;
                        v_ky += ak2 * gx[2016] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += aj2 * (gx[256] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1856] - yjyi * Iy) - 1 * gx[1728]) * prod_xz;
                        v_ly += (al2 * (gx[2016] - ylyk * Iy) - 1 * gx[1248]) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1216];
                        Ix = gx[96];
                        Iy = gx[1920];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[128] * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1952] * prod_xz;
                        v_ky += (ak2 * gx[2112] - 1 * gx[1728]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2528] * prod_xy;
                        v_jx += (aj2 * (gx[128] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1952] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2112] - ylyk * Iy) - 1 * gx[1344]) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2528] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1472];
                        Ix = gx[96];
                        Iy = gx[1760];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[128] * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1792] - 1 * gx[1728]) * prod_xz;
                        v_ky += ak2 * gx[1952] * prod_xz;
                        v_iz += ai2 * gx[2528] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2304]) * prod_xy;
                        v_jx += (aj2 * (gx[128] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1792] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1952] - ylyk * Iy) - 1 * gx[1184]) * prod_xz;
                        v_jz += aj2 * (gx[2528] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1728];
                        Ix = gx[320];
                        Iy = gx[1152];
                        Iz = gx[2880];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 1 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[128]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[2912] * prod_xy;
                        v_kz += ak2 * gx[3072] * prod_xy;
                        v_jx += (aj2 * (gx[352] - xjxi * Ix) - 1 * gx[224]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2912] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3072] - zlzk * Iz) - 1 * gx[2304]) * prod_xy;
                        dd = dd_cache[1984];
                        Ix = gx[192];
                        Iy = gx[1152];
                        Iz = gx[3008];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[224] * prod_yz;
                        v_kx += (ak2 * gx[384] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += (ai2 * gx[3040] - 1 * gx[2976]) * prod_xy;
                        v_kz += ak2 * gx[3200] * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3040] - zjzi * Iz) - 1 * gx[2912]) * prod_xy;
                        v_lz += (al2 * (gx[3200] - zlzk * Iz) - 1 * gx[2432]) * prod_xy;
                        dd = dd_cache[2240];
                        Ix = gx[0];
                        Iy = gx[1376];
                        Iz = gx[2976];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += (ai2 * gx[1408] - 1 * gx[1344]) * prod_xz;
                        v_ky += (ak2 * gx[1568] - 1 * gx[1184]) * prod_xz;
                        v_iz += ai2 * gx[3008] * prod_xy;
                        v_kz += ak2 * gx[3168] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1408] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3008] - zjzi * Iz) - 1 * gx[2880]) * prod_xy;
                        v_lz += (al2 * (gx[3168] - zlzk * Iz) - 1 * gx[2400]) * prod_xy;
                        dd = dd_cache[2496];
                        Ix = gx[32];
                        Iy = gx[1152];
                        Iz = gx[3168];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[224] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[3200] * prod_xy;
                        v_kz += (ak2 * gx[3360] - 1 * gx[2976]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[224] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3200] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += (al2 * (gx[3360] - zlzk * Iz) - 1 * gx[2592]) * prod_xy;
                        break;
                    case 7:
                        dd = dd_cache[224];
                        Ix = gx[768];
                        Iy = gx[1184];
                        Iz = gx[2400];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += (ak2 * gx[960] - 1 * gx[576]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1376] * prod_xz;
                        v_iz += ai2 * gx[2432] * prod_xy;
                        v_kz += ak2 * gx[2592] * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[960] - xlxk * Ix) - 1 * gx[192]) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1376] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2432] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[480];
                        Ix = gx[608];
                        Iy = gx[1344];
                        Iz = gx[2400];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[640] - 1 * gx[576]) * prod_yz;
                        v_kx += ak2 * gx[800] * prod_yz;
                        v_iy += ai2 * gx[1376] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1152]) * prod_xz;
                        v_iz += ai2 * gx[2432] * prod_xy;
                        v_kz += ak2 * gx[2592] * prod_xy;
                        v_jx += aj2 * (gx[640] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[800] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2432] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[736];
                        Ix = gx[576];
                        Iy = gx[1248];
                        Iz = gx[2528];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[608] * prod_yz;
                        v_kx += ak2 * gx[768] * prod_yz;
                        v_iy += ai2 * gx[1280] * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += (ai2 * gx[2560] - 1 * gx[2496]) * prod_xy;
                        v_kz += (ak2 * gx[2720] - 1 * gx[2336]) * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += (aj2 * (gx[1280] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2560] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[992];
                        Ix = gx[192];
                        Iy = gx[1856];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[224] * prod_yz;
                        v_kx += (ak2 * gx[384] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1888] - 1 * gx[1824]) * prod_xz;
                        v_ky += ak2 * gx[2048] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1888] - yjyi * Iy) - 1 * gx[1760]) * prod_xz;
                        v_ly += (al2 * (gx[2048] - ylyk * Iy) - 1 * gx[1280]) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1248];
                        Ix = gx[32];
                        Iy = gx[2016];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[224] * prod_yz;
                        v_iy += ai2 * gx[2048] * prod_xz;
                        v_ky += (ak2 * gx[2208] - 1 * gx[1824]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[224] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2048] - yjyi * Iy) - 1 * gx[1920]) * prod_xz;
                        v_ly += (al2 * (gx[2208] - ylyk * Iy) - 1 * gx[1440]) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1504];
                        Ix = gx[96];
                        Iy = gx[1728];
                        Iz = gx[2528];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[128] * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1760] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += (ai2 * gx[2560] - 1 * gx[2496]) * prod_xy;
                        v_kz += (ak2 * gx[2720] - 1 * gx[2336]) * prod_xy;
                        v_jx += (aj2 * (gx[128] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1760] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1920] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += aj2 * (gx[2560] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1760];
                        Ix = gx[288];
                        Iy = gx[1184];
                        Iz = gx[2880];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[320] * prod_yz;
                        v_kx += (ak2 * gx[480] - 1 * gx[96]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1376] * prod_xz;
                        v_iz += ai2 * gx[2912] * prod_xy;
                        v_kz += ak2 * gx[3072] * prod_xy;
                        v_jx += (aj2 * (gx[320] - xjxi * Ix) - 1 * gx[192]) * prod_yz;
                        v_lx += al2 * (gx[480] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1376] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2912] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3072] - zlzk * Iz) - 1 * gx[2304]) * prod_xy;
                        dd = dd_cache[2016];
                        Ix = gx[128];
                        Iy = gx[1344];
                        Iz = gx[2880];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[160] - 1 * gx[96]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1376] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1152]) * prod_xz;
                        v_iz += ai2 * gx[2912] * prod_xy;
                        v_kz += ak2 * gx[3072] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2912] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3072] - zlzk * Iz) - 1 * gx[2304]) * prod_xy;
                        dd = dd_cache[2272];
                        Ix = gx[0];
                        Iy = gx[1344];
                        Iz = gx[3008];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1376] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[3040] - 1 * gx[2976]) * prod_xy;
                        v_kz += ak2 * gx[3200] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3040] - zjzi * Iz) - 1 * gx[2912]) * prod_xy;
                        v_lz += (al2 * (gx[3200] - zlzk * Iz) - 1 * gx[2432]) * prod_xy;
                        dd = dd_cache[2528];
                        Ix = gx[0];
                        Iy = gx[1184];
                        Iz = gx[3168];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1376] * prod_xz;
                        v_iz += ai2 * gx[3200] * prod_xy;
                        v_kz += (ak2 * gx[3360] - 1 * gx[2976]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1376] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3200] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += (al2 * (gx[3360] - zlzk * Iz) - 1 * gx[2592]) * prod_xy;
                        break;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_2000(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 256;
    constexpr int gout_stride = 1;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rw = shared_memory + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        double fxi, fyi, fzi;
        double fxj, fyj, fzj;
        double fxk, fyk, fzk;
        double fxl, fyl, fzl;
        double dd_cache0 = 0.;
        double dd_cache1 = 0.;
        double dd_cache2 = 0.;
        double dd_cache3 = 0.;
        double dd_cache4 = 0.;
        double dd_cache5 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache1 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache2 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache3 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+3)];
                dd_cache4 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+4)];
                dd_cache5 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+5)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache1 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache2 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache3 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+3)]+dmb[(j0+0)*nao+(i0+3)]);
                dd_cache4 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+4)]+dmb[(j0+0)*nao+(i0+4)]);
                dd_cache5 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+5)]+dmb[(j0+0)*nao+(i0+5)]);
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = ck[kp] * cl[lp] * Kcd;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[ijp];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = rjri[0] * aj_aij;
                double ypa = rjri[1] * aj_aij;
                double zpa = rjri[2] * aj_aij;
                double xij = ri[0] + xpa;
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xqc = xlxk * al_akl;
                double yqc = ylyk * al_akl;
                double zqc = zlzk * al_akl;
                double xkl = rk[0] + xqc;
                double ykl = rk[1] + yqc;
                double zkl = rk[2] + zqc;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double rr = xpq*xpq + ypq*ypq + zpq*zpq;
                double theta = aij * akl / (aij + akl);
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < nroots; ++irys) {
                    double wt = rw[(2*irys+1)*256] * fac;
                    double rt = rw[ 2*irys   *256];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    dd = dd_cache0;
                    Ix = trr_20x;
                    Iy = 1;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    double trr_30x = c0x * trr_20x + 2*b10 * trr_10x;
                    fxi = ai2 * trr_30x;
                    fxi -= 2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_2100x = trr_30x - xjxi * trr_20x;
                    fxj = aj2 * hrr_2100x;
                    v_jx += fxj * prod_yz;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double b00 = .5 * rt_aa;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    fxk = ak2 * trr_21x;
                    v_kx += fxk * prod_yz;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_2001x = trr_21x - xlxk * trr_20x;
                    fxl = al2 * hrr_2001x;
                    v_lx += fxl * prod_yz;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache1;
                    Ix = trr_10x;
                    Iy = trr_10y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache2;
                    Ix = trr_10x;
                    Iy = 1;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache3;
                    Ix = 1;
                    Iy = trr_20y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    double trr_30y = c0y * trr_20y + 2*b10 * trr_10y;
                    fyi = ai2 * trr_30y;
                    fyi -= 2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    double hrr_2100y = trr_30y - yjyi * trr_20y;
                    fyj = aj2 * hrr_2100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_01x = cpx * 1;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    fyk = ak2 * trr_21y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    double hrr_2001y = trr_21y - ylyk * trr_20y;
                    fyl = al2 * hrr_2001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache4;
                    Ix = 1;
                    Iy = trr_10y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache5;
                    Ix = 1;
                    Iy = 1;
                    Iz = trr_20z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_30z = c0z * trr_20z + 2*b10 * trr_10z;
                    fzi = ai2 * trr_30z;
                    fzi -= 2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_2100z = trr_30z - zjzi * trr_20z;
                    fzj = aj2 * hrr_2100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    fzk = ak2 * trr_21z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_2001z = trr_21z - zlzk * trr_20z;
                    fzl = al2 * hrr_2001z;
                    v_lz += fzl * prod_xy;
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_2010(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 256;
    constexpr int gout_stride = 1;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rw = shared_memory + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        double fxi, fyi, fzi;
        double fxj, fyj, fzj;
        double fxk, fyk, fzk;
        double fxl, fyl, fzl;
        double dd_cache0 = 0.;
        double dd_cache1 = 0.;
        double dd_cache2 = 0.;
        double dd_cache3 = 0.;
        double dd_cache4 = 0.;
        double dd_cache5 = 0.;
        double dd_cache6 = 0.;
        double dd_cache7 = 0.;
        double dd_cache8 = 0.;
        double dd_cache9 = 0.;
        double dd_cache10 = 0.;
        double dd_cache11 = 0.;
        double dd_cache12 = 0.;
        double dd_cache13 = 0.;
        double dd_cache14 = 0.;
        double dd_cache15 = 0.;
        double dd_cache16 = 0.;
        double dd_cache17 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+0)]);
                dd_cache6 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+1)]);
                dd_cache7 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+1)]);
                dd_cache8 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+1)]);
                dd_cache9 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+1)]);
                dd_cache10 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+1)]);
                dd_cache11 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+1)]);
                dd_cache12 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+2)]);
                dd_cache13 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+2)]);
                dd_cache14 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+2)]);
                dd_cache15 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+2)]);
                dd_cache16 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+2)]);
                dd_cache17 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+2)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache1 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache2 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache3 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+3)];
                dd_cache4 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+4)];
                dd_cache5 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+5)];
                dd_cache6 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache7 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache8 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache9 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+3)];
                dd_cache10 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+4)];
                dd_cache11 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+5)];
                dd_cache12 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache13 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache14 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache15 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+3)];
                dd_cache16 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+4)];
                dd_cache17 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+5)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+0)]);
                dd_cache6 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+1)]);
                dd_cache7 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+1)]);
                dd_cache8 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+1)]);
                dd_cache9 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+1)]);
                dd_cache10 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+1)]);
                dd_cache11 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+1)]);
                dd_cache12 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+2)]);
                dd_cache13 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+2)]);
                dd_cache14 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+2)]);
                dd_cache15 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+2)]);
                dd_cache16 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+2)]);
                dd_cache17 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+2)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache1 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache2 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache3 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+3)]+dmb[(j0+0)*nao+(i0+3)]);
                dd_cache4 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+4)]+dmb[(j0+0)*nao+(i0+4)]);
                dd_cache5 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+5)]+dmb[(j0+0)*nao+(i0+5)]);
                dd_cache6 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache7 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache8 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache9 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+3)]+dmb[(j0+0)*nao+(i0+3)]);
                dd_cache10 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+4)]+dmb[(j0+0)*nao+(i0+4)]);
                dd_cache11 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+5)]+dmb[(j0+0)*nao+(i0+5)]);
                dd_cache12 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache13 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache14 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache15 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+3)]+dmb[(j0+0)*nao+(i0+3)]);
                dd_cache16 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+4)]+dmb[(j0+0)*nao+(i0+4)]);
                dd_cache17 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+5)]+dmb[(j0+0)*nao+(i0+5)]);
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = ck[kp] * cl[lp] * Kcd;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[ijp];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = rjri[0] * aj_aij;
                double ypa = rjri[1] * aj_aij;
                double zpa = rjri[2] * aj_aij;
                double xij = ri[0] + xpa;
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xqc = xlxk * al_akl;
                double yqc = ylyk * al_akl;
                double zqc = zlzk * al_akl;
                double xkl = rk[0] + xqc;
                double ykl = rk[1] + yqc;
                double zkl = rk[2] + zqc;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double rr = xpq*xpq + ypq*ypq + zpq*zpq;
                double theta = aij * akl / (aij + akl);
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < nroots; ++irys) {
                    double wt = rw[(2*irys+1)*256] * fac;
                    double rt = rw[ 2*irys   *256];
                    double rt_aa = rt / (aij + akl);
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    double b00 = .5 * rt_aa;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    dd = dd_cache0;
                    Ix = trr_21x;
                    Iy = 1;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    double trr_30x = c0x * trr_20x + 2*b10 * trr_10x;
                    double trr_31x = cpx * trr_30x + 3*b00 * trr_20x;
                    fxi = ai2 * trr_31x;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    fxi -= 2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_2110x = trr_31x - xjxi * trr_21x;
                    fxj = aj2 * hrr_2110x;
                    v_jx += fxj * prod_yz;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double b01 = .5/akl * (1 - rt_akl);
                    double trr_22x = cpx * trr_21x + 1*b01 * trr_20x + 2*b00 * trr_11x;
                    fxk = ak2 * trr_22x;
                    fxk -= 1 * trr_20x;
                    v_kx += fxk * prod_yz;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_2011x = trr_22x - xlxk * trr_21x;
                    fxl = al2 * hrr_2011x;
                    v_lx += fxl * prod_yz;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache1;
                    Ix = trr_11x;
                    Iy = trr_10y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_21x;
                    double trr_01x = cpx * 1;
                    fxi -= 1 * trr_01x;
                    v_ix += fxi * prod_yz;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1110x = trr_21x - xjxi * trr_11x;
                    fxj = aj2 * hrr_1110x;
                    v_jx += fxj * prod_yz;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_12x = cpx * trr_11x + 1*b01 * trr_10x + 1*b00 * trr_01x;
                    fxk = ak2 * trr_12x;
                    fxk -= 1 * trr_10x;
                    v_kx += fxk * prod_yz;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_1011x = trr_12x - xlxk * trr_11x;
                    fxl = al2 * hrr_1011x;
                    v_lx += fxl * prod_yz;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache2;
                    Ix = trr_11x;
                    Iy = 1;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_21x;
                    fxi -= 1 * trr_01x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_12x;
                    fxk -= 1 * trr_10x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache3;
                    Ix = trr_01x;
                    Iy = trr_20y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    double trr_30y = c0y * trr_20y + 2*b10 * trr_10y;
                    fyi = ai2 * trr_30y;
                    fyi -= 2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0110x = trr_11x - xjxi * trr_01x;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    double hrr_2100y = trr_30y - yjyi * trr_20y;
                    fyj = aj2 * hrr_2100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_02x = cpx * trr_01x + 1*b01 * 1;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    fyk = ak2 * trr_21y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0011x = trr_02x - xlxk * trr_01x;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    double hrr_2001y = trr_21y - ylyk * trr_20y;
                    fyl = al2 * hrr_2001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache4;
                    Ix = trr_01x;
                    Iy = trr_10y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache5;
                    Ix = trr_01x;
                    Iy = 1;
                    Iz = trr_20z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_30z = c0z * trr_20z + 2*b10 * trr_10z;
                    fzi = ai2 * trr_30z;
                    fzi -= 2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_2100z = trr_30z - zjzi * trr_20z;
                    fzj = aj2 * hrr_2100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    fzk = ak2 * trr_21z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_2001z = trr_21z - zlzk * trr_20z;
                    fzl = al2 * hrr_2001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache6;
                    Ix = trr_20x;
                    Iy = trr_01y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_30x;
                    fxi -= 2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_2100x = trr_30x - xjxi * trr_20x;
                    fxj = aj2 * hrr_2100x;
                    v_jx += fxj * prod_yz;
                    double hrr_0110y = trr_11y - yjyi * trr_01y;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_21x;
                    v_kx += fxk * prod_yz;
                    double trr_02y = cpy * trr_01y + 1*b01 * 1;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_2001x = trr_21x - xlxk * trr_20x;
                    fxl = al2 * hrr_2001x;
                    v_lx += fxl * prod_yz;
                    double hrr_0011y = trr_02y - ylyk * trr_01y;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache7;
                    Ix = trr_10x;
                    Iy = trr_11y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_21y;
                    fyi -= 1 * trr_01y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    double hrr_1110y = trr_21y - yjyi * trr_11y;
                    fyj = aj2 * hrr_1110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    double trr_12y = cpy * trr_11y + 1*b01 * trr_10y + 1*b00 * trr_01y;
                    fyk = ak2 * trr_12y;
                    fyk -= 1 * trr_10y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    double hrr_1011y = trr_12y - ylyk * trr_11y;
                    fyl = al2 * hrr_1011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache8;
                    Ix = trr_10x;
                    Iy = trr_01y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache9;
                    Ix = 1;
                    Iy = trr_21y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    double trr_31y = cpy * trr_30y + 3*b00 * trr_20y;
                    fyi = ai2 * trr_31y;
                    fyi -= 2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    double hrr_2110y = trr_31y - yjyi * trr_21y;
                    fyj = aj2 * hrr_2110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    double trr_22y = cpy * trr_21y + 1*b01 * trr_20y + 2*b00 * trr_11y;
                    fyk = ak2 * trr_22y;
                    fyk -= 1 * trr_20y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    double hrr_2011y = trr_22y - ylyk * trr_21y;
                    fyl = al2 * hrr_2011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache10;
                    Ix = 1;
                    Iy = trr_11y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_21y;
                    fyi -= 1 * trr_01y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_12y;
                    fyk -= 1 * trr_10y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache11;
                    Ix = 1;
                    Iy = trr_01y;
                    Iz = trr_20z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_30z;
                    fzi -= 2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_2100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_21z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_2001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache12;
                    Ix = trr_20x;
                    Iy = 1;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_30x;
                    fxi -= 2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_2100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0110z = trr_11z - zjzi * trr_01z;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_21x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_02z = cpz * trr_01z + 1*b01 * wt;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_2001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0011z = trr_02z - zlzk * trr_01z;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache13;
                    Ix = trr_10x;
                    Iy = trr_10y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache14;
                    Ix = trr_10x;
                    Iy = 1;
                    Iz = trr_11z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_21z;
                    fzi -= 1 * trr_01z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1110z = trr_21z - zjzi * trr_11z;
                    fzj = aj2 * hrr_1110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_12z = cpz * trr_11z + 1*b01 * trr_10z + 1*b00 * trr_01z;
                    fzk = ak2 * trr_12z;
                    fzk -= 1 * trr_10z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1011z = trr_12z - zlzk * trr_11z;
                    fzl = al2 * hrr_1011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache15;
                    Ix = 1;
                    Iy = trr_20y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_30y;
                    fyi -= 2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_2100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_21y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_2001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache16;
                    Ix = 1;
                    Iy = trr_10y;
                    Iz = trr_11z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_21z;
                    fzi -= 1 * trr_01z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_12z;
                    fzk -= 1 * trr_10z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache17;
                    Ix = 1;
                    Iy = 1;
                    Iz = trr_21z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_31z = cpz * trr_30z + 3*b00 * trr_20z;
                    fzi = ai2 * trr_31z;
                    fzi -= 2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_2110z = trr_31z - zjzi * trr_21z;
                    fzj = aj2 * hrr_2110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_22z = cpz * trr_21z + 1*b01 * trr_20z + 2*b00 * trr_11z;
                    fzk = ak2 * trr_22z;
                    fzk -= 1 * trr_20z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_2011z = trr_22z - zlzk * trr_21z;
                    fzl = al2 * hrr_2011z;
                    v_lz += fzl * prod_xy;
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_2011(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 32;
    constexpr int gout_stride = 8;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    double *dd_cache = dd_pool + blockIdx.x * 1728 + sq_id;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rlrk = shared_memory + sq_id;
    double *Rpq = shared_memory + nsq_per_block * 3 + sq_id;
    double *gx = shared_memory + nsq_per_block * 6 + sq_id;
    double *rw = shared_memory + nsq_per_block * 78 + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (78+nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        if (gout_id == 0) {
            rlrk[0] = xlxk;
            rlrk[32] = ylyk;
            rlrk[64] = zlzk;
        }
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        int do_j = jk.j_factor != 0.;
        int do_k = jk.k_factor != 0.;
        if (jk.n_dm == 1) {
            for (int n = gout_id; n < 54; n+=8) {
                int kl = n / 6;
                int ij = n % 6;
                int i = ij % 6;
                int j = ij / 6;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm[_jk] * dm[_il] + dm[_jl] * dm[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * dm[_ji] * dm[_lk];
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        } else {
            double *dmb = dm + nao * nao;
            for (int n = gout_id; n < 54; n+=8) {
                int kl = n / 6;
                int ij = n % 6;
                int i = ij % 6;
                int j = ij / 6;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm [_jk] * dm [_il] + dm [_jl] * dm [_ik] +
                                         dmb[_jk] * dmb[_il] + dmb[_jl] * dmb[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * (dm[_ji] + dmb[_ji]) * (dm[_lk] + dmb[_lk]);
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            __syncthreads();
            if (gout_id == 0) {
                double xlxk = rlrk[0];
                double ylyk = rlrk[32];
                double zlzk = rlrk[64];
                double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
                double ckcl = ck[kp] * cl[lp] * Kcd;
                gx[0] = ckcl;
            }
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double xij = ri[0] + (rjri[0]) * aj_aij;
                double yij = ri[1] + (rjri[1]) * aj_aij;
                double zij = ri[2] + (rjri[2]) * aj_aij;
                double xkl = rk[0] + rlrk[0] * al_akl;
                double ykl = rk[1] + rlrk[32] * al_akl;
                double zkl = rk[2] + rlrk[64] * al_akl;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                __syncthreads();
                if (gout_id == 0) {
                    Rpq[0] = xpq;
                    Rpq[32] = ypq;
                    Rpq[64] = zpq;
                    double cicj = cicj_cache[ijp];
                    gx[768] = cicj / (aij*akl*sqrt(aij+akl));
                }
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                double s0, s1, s2;
                for (int irys = 0; irys < nroots; ++irys) {
                    __syncthreads();
                    double rt = rw[irys*64];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double rt_akl = rt_aa * aij;
                    double b00 = .5 * rt_aa;
                    double b10 = .5/aij * (1 - rt_aij);
                    double b01 = .5/akl * (1 - rt_akl);
                    for (int n = gout_id; n < 3; n += 8) {
                        if (n == 2) {
                            gx[1536] = rw[irys*64+32];
                        }
                        double *_gx = gx + n * 768;
                        double xjxi = rjri[n];
                        double Rpa = xjxi * aj_aij;
                        double c0x = Rpa - rt_aij * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = c0x * s0;
                        _gx[32] = s1;
                        s2 = c0x * s1 + 1 * b10 * s0;
                        _gx[64] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 2 * b10 * s0;
                        _gx[96] = s2;
                        double xlxk = rlrk[n*32];
                        double Rqc = xlxk * al_akl;
                        double cpx = Rqc + rt_akl * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = cpx * s0;
                        _gx[128] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        _gx[256] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        _gx[384] = s2;
                        s0 = _gx[32];
                        s1 = cpx * s0;
                        s1 += 1 * b00 * _gx[0];
                        _gx[160] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 1 * b00 * _gx[128];
                        _gx[288] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 1 * b00 * _gx[256];
                        _gx[416] = s2;
                        s0 = _gx[64];
                        s1 = cpx * s0;
                        s1 += 2 * b00 * _gx[32];
                        _gx[192] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 2 * b00 * _gx[160];
                        _gx[320] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 2 * b00 * _gx[288];
                        _gx[448] = s2;
                        s0 = _gx[96];
                        s1 = cpx * s0;
                        s1 += 3 * b00 * _gx[64];
                        _gx[224] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 3 * b00 * _gx[192];
                        _gx[352] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 3 * b00 * _gx[320];
                        _gx[480] = s2;
                        s1 = _gx[384];
                        s0 = _gx[256];
                        _gx[640] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[128];
                        _gx[512] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[384] = s1 - xlxk * s0;
                        s1 = _gx[416];
                        s0 = _gx[288];
                        _gx[672] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[160];
                        _gx[544] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[416] = s1 - xlxk * s0;
                        s1 = _gx[448];
                        s0 = _gx[320];
                        _gx[704] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[192];
                        _gx[576] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[64];
                        _gx[448] = s1 - xlxk * s0;
                        s1 = _gx[480];
                        s0 = _gx[352];
                        _gx[736] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[224];
                        _gx[608] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[96];
                        _gx[480] = s1 - xlxk * s0;
                    }
                    __syncthreads();
                    double xjxi = rjri[0];
                    double yjyi = rjri[1];
                    double zjzi = rjri[2];
                    double xlxk = rlrk[0];
                    double ylyk = rlrk[32];
                    double zlzk = rlrk[64];
                    switch (gout_id) {
                    case 0:
                        dd = dd_cache[0];
                        Ix = gx[576];
                        Iy = gx[768];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[608] - 2 * gx[544]) * prod_yz;
                        v_kx += (ak2 * gx[704] - 1 * gx[448]) * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[896] * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1664] * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[704] - xlxk * Ix) - 1 * gx[192]) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[896] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1664] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[256];
                        Ix = gx[416];
                        Iy = gx[896];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += ak2 * gx[544] * prod_yz;
                        v_iy += ai2 * gx[928] * prod_xz;
                        v_ky += (ak2 * gx[1024] - 1 * gx[768]) * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1696] * prod_xy;
                        v_jx += aj2 * (gx[448] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[544] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[928] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1696] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[512];
                        Ix = gx[384];
                        Iy = gx[800];
                        Iz = gx[1696];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[928] * prod_xz;
                        v_iz += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xy;
                        v_kz += (ak2 * gx[1824] - 1 * gx[1568]) * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[512] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[928] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1728] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1824] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[768];
                        Ix = gx[64];
                        Iy = gx[1280];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1408] - 1 * gx[1152]) * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1664] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1408] - ylyk * Iy) - 1 * gx[896]) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1664] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1024];
                        Ix = gx[32];
                        Iy = gx[1152];
                        Iz = gx[1696];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xy;
                        v_kz += (ak2 * gx[1824] - 1 * gx[1568]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1280] - ylyk * Iy) - 1 * gx[768]) * prod_xz;
                        v_jz += aj2 * (gx[1728] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1824] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1280];
                        Ix = gx[128];
                        Iy = gx[800];
                        Iz = gx[1952];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[928] * prod_xz;
                        v_iz += (ai2 * gx[1984] - 1 * gx[1920]) * prod_xy;
                        v_kz += ak2 * gx[2080] * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[928] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1984] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2080] - zlzk * Iz) - 1 * gx[1568]) * prod_xy;
                        dd = dd_cache[1536];
                        Ix = gx[64];
                        Iy = gx[768];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[896] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += (ak2 * gx[2176] - 1 * gx[1920]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[896] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2176] - zlzk * Iz) - 1 * gx[1664]) * prod_xy;
                        break;
                    case 1:
                        dd = dd_cache[32];
                        Ix = gx[544];
                        Iy = gx[800];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += (ak2 * gx[672] - 1 * gx[416]) * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[928] * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1664] * prod_xy;
                        v_jx += aj2 * (gx[576] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[672] - xlxk * Ix) - 1 * gx[160]) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[928] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1664] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[288];
                        Ix = gx[384];
                        Iy = gx[960];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += (ai2 * gx[992] - 2 * gx[928]) * prod_xz;
                        v_ky += (ak2 * gx[1088] - 1 * gx[832]) * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1664] * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[512] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[992] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1088] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1664] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[544];
                        Ix = gx[384];
                        Iy = gx[768];
                        Iz = gx[1728];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[896] * prod_xz;
                        v_iz += (ai2 * gx[1760] - 2 * gx[1696]) * prod_xy;
                        v_kz += (ak2 * gx[1856] - 1 * gx[1600]) * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[512] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[896] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1760] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1856] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[800];
                        Ix = gx[32];
                        Iy = gx[1312];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1440] - 1 * gx[1184]) * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1664] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1440] - ylyk * Iy) - 1 * gx[928]) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1664] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1056];
                        Ix = gx[0];
                        Iy = gx[1216];
                        Iz = gx[1664];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[1696] * prod_xy;
                        v_kz += (ak2 * gx[1792] - 1 * gx[1536]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1248] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1344] - ylyk * Iy) - 1 * gx[832]) * prod_xz;
                        v_jz += aj2 * (gx[1696] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1312];
                        Ix = gx[128];
                        Iy = gx[768];
                        Iz = gx[1984];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[896] * prod_xz;
                        v_iz += (ai2 * gx[2016] - 2 * gx[1952]) * prod_xy;
                        v_kz += ak2 * gx[2112] * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[896] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2016] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2112] - zlzk * Iz) - 1 * gx[1600]) * prod_xy;
                        dd = dd_cache[1568];
                        Ix = gx[32];
                        Iy = gx[800];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[928] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += (ak2 * gx[2176] - 1 * gx[1920]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[928] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2176] - zlzk * Iz) - 1 * gx[1664]) * prod_xy;
                        break;
                    case 2:
                        dd = dd_cache[64];
                        Ix = gx[544];
                        Iy = gx[768];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += (ak2 * gx[672] - 1 * gx[416]) * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[896] * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1696] * prod_xy;
                        v_jx += aj2 * (gx[576] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[672] - xlxk * Ix) - 1 * gx[160]) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[896] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1696] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[320];
                        Ix = gx[384];
                        Iy = gx[928];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += (ai2 * gx[960] - 1 * gx[896]) * prod_xz;
                        v_ky += (ak2 * gx[1056] - 1 * gx[800]) * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1696] * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[512] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[960] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1056] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1696] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[576];
                        Ix = gx[192];
                        Iy = gx[1152];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += (ak2 * gx[320] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1664] * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1280] - ylyk * Iy) - 1 * gx[768]) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1664] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[832];
                        Ix = gx[32];
                        Iy = gx[1280];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1408] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1696] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1408] - ylyk * Iy) - 1 * gx[896]) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1696] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1088];
                        Ix = gx[0];
                        Iy = gx[1184];
                        Iz = gx[1696];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xy;
                        v_kz += (ak2 * gx[1824] - 1 * gx[1568]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1312] - ylyk * Iy) - 1 * gx[800]) * prod_xz;
                        v_jz += aj2 * (gx[1728] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1824] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1344];
                        Ix = gx[64];
                        Iy = gx[896];
                        Iz = gx[1920];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[928] * prod_xz;
                        v_ky += (ak2 * gx[1024] - 1 * gx[768]) * prod_xz;
                        v_iz += ai2 * gx[1952] * prod_xy;
                        v_kz += ak2 * gx[2048] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[928] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1952] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2048] - zlzk * Iz) - 1 * gx[1536]) * prod_xy;
                        dd = dd_cache[1600];
                        Ix = gx[32];
                        Iy = gx[768];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[896] * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += (ak2 * gx[2208] - 1 * gx[1952]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[896] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2208] - zlzk * Iz) - 1 * gx[1696]) * prod_xy;
                        break;
                    case 3:
                        dd = dd_cache[96];
                        Ix = gx[512];
                        Iy = gx[832];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[384]) * prod_yz;
                        v_iy += (ai2 * gx[864] - 2 * gx[800]) * prod_xz;
                        v_ky += ak2 * gx[960] * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1664] * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[640] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[864] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[960] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1664] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[352];
                        Ix = gx[384];
                        Iy = gx[896];
                        Iz = gx[1600];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += ai2 * gx[928] * prod_xz;
                        v_ky += (ak2 * gx[1024] - 1 * gx[768]) * prod_xz;
                        v_iz += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xy;
                        v_kz += ak2 * gx[1728] * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[512] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[928] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1632] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1728] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[608];
                        Ix = gx[160];
                        Iy = gx[1184];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += (ak2 * gx[288] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1664] * prod_xy;
                        v_jx += aj2 * (gx[192] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1312] - ylyk * Iy) - 1 * gx[800]) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1664] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[864];
                        Ix = gx[0];
                        Iy = gx[1344];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1376] - 2 * gx[1312]) * prod_xz;
                        v_ky += (ak2 * gx[1472] - 1 * gx[1216]) * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1664] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1472] - ylyk * Iy) - 1 * gx[960]) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1664] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1120];
                        Ix = gx[0];
                        Iy = gx[1152];
                        Iz = gx[1728];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[1760] - 2 * gx[1696]) * prod_xy;
                        v_kz += (ak2 * gx[1856] - 1 * gx[1600]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1280] - ylyk * Iy) - 1 * gx[768]) * prod_xz;
                        v_jz += aj2 * (gx[1760] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1856] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1376];
                        Ix = gx[32];
                        Iy = gx[928];
                        Iz = gx[1920];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += (ai2 * gx[960] - 1 * gx[896]) * prod_xz;
                        v_ky += (ak2 * gx[1056] - 1 * gx[800]) * prod_xz;
                        v_iz += ai2 * gx[1952] * prod_xy;
                        v_kz += ak2 * gx[2048] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[960] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1056] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1952] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2048] - zlzk * Iz) - 1 * gx[1536]) * prod_xy;
                        dd = dd_cache[1632];
                        Ix = gx[0];
                        Iy = gx[832];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[864] - 2 * gx[800]) * prod_xz;
                        v_ky += ak2 * gx[960] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += (ak2 * gx[2176] - 1 * gx[1920]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[864] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[960] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2176] - zlzk * Iz) - 1 * gx[1664]) * prod_xy;
                        break;
                    case 4:
                        dd = dd_cache[128];
                        Ix = gx[512];
                        Iy = gx[800];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[384]) * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[928] * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1696] * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[640] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[928] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1696] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[384];
                        Ix = gx[448];
                        Iy = gx[768];
                        Iz = gx[1664];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[480] - 2 * gx[416]) * prod_yz;
                        v_kx += ak2 * gx[576] * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[896] * prod_xz;
                        v_iz += ai2 * gx[1696] * prod_xy;
                        v_kz += (ak2 * gx[1792] - 1 * gx[1536]) * prod_xy;
                        v_jx += aj2 * (gx[480] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[576] - xlxk * Ix) - 1 * gx[64]) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[896] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1696] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[640];
                        Ix = gx[160];
                        Iy = gx[1152];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += (ak2 * gx[288] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1696] * prod_xy;
                        v_jx += aj2 * (gx[192] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1280] - ylyk * Iy) - 1 * gx[768]) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1696] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[896];
                        Ix = gx[0];
                        Iy = gx[1312];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1440] - 1 * gx[1184]) * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1696] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1440] - ylyk * Iy) - 1 * gx[928]) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1696] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1152];
                        Ix = gx[192];
                        Iy = gx[768];
                        Iz = gx[1920];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += (ak2 * gx[320] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[896] * prod_xz;
                        v_iz += ai2 * gx[1952] * prod_xy;
                        v_kz += ak2 * gx[2048] * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[896] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1952] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2048] - zlzk * Iz) - 1 * gx[1536]) * prod_xy;
                        dd = dd_cache[1408];
                        Ix = gx[32];
                        Iy = gx[896];
                        Iz = gx[1952];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += ai2 * gx[928] * prod_xz;
                        v_ky += (ak2 * gx[1024] - 1 * gx[768]) * prod_xz;
                        v_iz += (ai2 * gx[1984] - 1 * gx[1920]) * prod_xy;
                        v_kz += ak2 * gx[2080] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[928] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1984] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2080] - zlzk * Iz) - 1 * gx[1568]) * prod_xy;
                        dd = dd_cache[1664];
                        Ix = gx[0];
                        Iy = gx[800];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[928] * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += (ak2 * gx[2208] - 1 * gx[1952]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[928] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2208] - zlzk * Iz) - 1 * gx[1696]) * prod_xy;
                        break;
                    case 5:
                        dd = dd_cache[160];
                        Ix = gx[512];
                        Iy = gx[768];
                        Iz = gx[1600];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[384]) * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[896] * prod_xz;
                        v_iz += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xy;
                        v_kz += ak2 * gx[1728] * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[640] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[896] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1632] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1728] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[416];
                        Ix = gx[416];
                        Iy = gx[800];
                        Iz = gx[1664];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += ak2 * gx[544] * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[928] * prod_xz;
                        v_iz += ai2 * gx[1696] * prod_xy;
                        v_kz += (ak2 * gx[1792] - 1 * gx[1536]) * prod_xy;
                        v_jx += aj2 * (gx[448] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[544] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[928] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1696] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[672];
                        Ix = gx[128];
                        Iy = gx[1216];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1664] * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1248] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1344] - ylyk * Iy) - 1 * gx[832]) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1664] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[928];
                        Ix = gx[0];
                        Iy = gx[1280];
                        Iz = gx[1600];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1408] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xy;
                        v_kz += ak2 * gx[1728] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1408] - ylyk * Iy) - 1 * gx[896]) * prod_xz;
                        v_jz += aj2 * (gx[1632] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1728] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1184];
                        Ix = gx[160];
                        Iy = gx[800];
                        Iz = gx[1920];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += (ak2 * gx[288] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[928] * prod_xz;
                        v_iz += ai2 * gx[1952] * prod_xy;
                        v_kz += ak2 * gx[2048] * prod_xy;
                        v_jx += aj2 * (gx[192] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[928] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1952] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2048] - zlzk * Iz) - 1 * gx[1536]) * prod_xy;
                        dd = dd_cache[1440];
                        Ix = gx[0];
                        Iy = gx[960];
                        Iz = gx[1920];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[992] - 2 * gx[928]) * prod_xz;
                        v_ky += (ak2 * gx[1088] - 1 * gx[832]) * prod_xz;
                        v_iz += ai2 * gx[1952] * prod_xy;
                        v_kz += ak2 * gx[2048] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[992] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1088] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1952] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2048] - zlzk * Iz) - 1 * gx[1536]) * prod_xy;
                        dd = dd_cache[1696];
                        Ix = gx[0];
                        Iy = gx[768];
                        Iz = gx[2112];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[896] * prod_xz;
                        v_iz += (ai2 * gx[2144] - 2 * gx[2080]) * prod_xy;
                        v_kz += (ak2 * gx[2240] - 1 * gx[1984]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[896] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2144] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2240] - zlzk * Iz) - 1 * gx[1728]) * prod_xy;
                        break;
                    case 6:
                        dd = dd_cache[192];
                        Ix = gx[448];
                        Iy = gx[896];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[480] - 2 * gx[416]) * prod_yz;
                        v_kx += ak2 * gx[576] * prod_yz;
                        v_iy += ai2 * gx[928] * prod_xz;
                        v_ky += (ak2 * gx[1024] - 1 * gx[768]) * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1664] * prod_xy;
                        v_jx += aj2 * (gx[480] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[576] - xlxk * Ix) - 1 * gx[64]) * prod_yz;
                        v_jy += aj2 * (gx[928] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1664] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[448];
                        Ix = gx[416];
                        Iy = gx[768];
                        Iz = gx[1696];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += ak2 * gx[544] * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[896] * prod_xz;
                        v_iz += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xy;
                        v_kz += (ak2 * gx[1824] - 1 * gx[1568]) * prod_xy;
                        v_jx += aj2 * (gx[448] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[544] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[896] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1728] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1824] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[704];
                        Ix = gx[128];
                        Iy = gx[1184];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1696] * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1312] - ylyk * Iy) - 1 * gx[800]) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1696] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[960];
                        Ix = gx[64];
                        Iy = gx[1152];
                        Iz = gx[1664];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += ai2 * gx[1696] * prod_xy;
                        v_kz += (ak2 * gx[1792] - 1 * gx[1536]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1280] - ylyk * Iy) - 1 * gx[768]) * prod_xz;
                        v_jz += aj2 * (gx[1696] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1216];
                        Ix = gx[160];
                        Iy = gx[768];
                        Iz = gx[1952];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += (ak2 * gx[288] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[896] * prod_xz;
                        v_iz += (ai2 * gx[1984] - 1 * gx[1920]) * prod_xy;
                        v_kz += ak2 * gx[2080] * prod_xy;
                        v_jx += aj2 * (gx[192] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[896] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1984] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2080] - zlzk * Iz) - 1 * gx[1568]) * prod_xy;
                        dd = dd_cache[1472];
                        Ix = gx[0];
                        Iy = gx[928];
                        Iz = gx[1952];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[960] - 1 * gx[896]) * prod_xz;
                        v_ky += (ak2 * gx[1056] - 1 * gx[800]) * prod_xz;
                        v_iz += (ai2 * gx[1984] - 1 * gx[1920]) * prod_xy;
                        v_kz += ak2 * gx[2080] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[960] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1056] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1984] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2080] - zlzk * Iz) - 1 * gx[1568]) * prod_xy;
                        break;
                    case 7:
                        dd = dd_cache[224];
                        Ix = gx[416];
                        Iy = gx[928];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += ak2 * gx[544] * prod_yz;
                        v_iy += (ai2 * gx[960] - 1 * gx[896]) * prod_xz;
                        v_ky += (ak2 * gx[1056] - 1 * gx[800]) * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1664] * prod_xy;
                        v_jx += aj2 * (gx[448] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[544] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[960] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1056] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1664] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[480];
                        Ix = gx[384];
                        Iy = gx[832];
                        Iz = gx[1664];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += (ai2 * gx[864] - 2 * gx[800]) * prod_xz;
                        v_ky += ak2 * gx[960] * prod_xz;
                        v_iz += ai2 * gx[1696] * prod_xy;
                        v_kz += (ak2 * gx[1792] - 1 * gx[1536]) * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[512] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[864] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[960] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1696] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[736];
                        Ix = gx[128];
                        Iy = gx[1152];
                        Iz = gx[1600];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xy;
                        v_kz += ak2 * gx[1728] * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1280] - ylyk * Iy) - 1 * gx[768]) * prod_xz;
                        v_jz += aj2 * (gx[1632] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1728] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[992];
                        Ix = gx[32];
                        Iy = gx[1184];
                        Iz = gx[1664];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += ai2 * gx[1696] * prod_xy;
                        v_kz += (ak2 * gx[1792] - 1 * gx[1536]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1312] - ylyk * Iy) - 1 * gx[800]) * prod_xz;
                        v_jz += aj2 * (gx[1696] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1248];
                        Ix = gx[128];
                        Iy = gx[832];
                        Iz = gx[1920];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[864] - 2 * gx[800]) * prod_xz;
                        v_ky += ak2 * gx[960] * prod_xz;
                        v_iz += ai2 * gx[1952] * prod_xy;
                        v_kz += ak2 * gx[2048] * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[864] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[960] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1952] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2048] - zlzk * Iz) - 1 * gx[1536]) * prod_xy;
                        dd = dd_cache[1504];
                        Ix = gx[0];
                        Iy = gx[896];
                        Iz = gx[1984];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += ai2 * gx[928] * prod_xz;
                        v_ky += (ak2 * gx[1024] - 1 * gx[768]) * prod_xz;
                        v_iz += (ai2 * gx[2016] - 2 * gx[1952]) * prod_xy;
                        v_kz += ak2 * gx[2112] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[928] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2016] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2112] - zlzk * Iz) - 1 * gx[1600]) * prod_xy;
                        break;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_2020(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 256;
    constexpr int gout_stride = 1;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rw = shared_memory + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        double fxi, fyi, fzi;
        double fxj, fyj, fzj;
        double fxk, fyk, fzk;
        double fxl, fyl, fzl;
        double dd_cache0 = 0.;
        double dd_cache1 = 0.;
        double dd_cache2 = 0.;
        double dd_cache3 = 0.;
        double dd_cache4 = 0.;
        double dd_cache5 = 0.;
        double dd_cache6 = 0.;
        double dd_cache7 = 0.;
        double dd_cache8 = 0.;
        double dd_cache9 = 0.;
        double dd_cache10 = 0.;
        double dd_cache11 = 0.;
        double dd_cache12 = 0.;
        double dd_cache13 = 0.;
        double dd_cache14 = 0.;
        double dd_cache15 = 0.;
        double dd_cache16 = 0.;
        double dd_cache17 = 0.;
        double dd_cache18 = 0.;
        double dd_cache19 = 0.;
        double dd_cache20 = 0.;
        double dd_cache21 = 0.;
        double dd_cache22 = 0.;
        double dd_cache23 = 0.;
        double dd_cache24 = 0.;
        double dd_cache25 = 0.;
        double dd_cache26 = 0.;
        double dd_cache27 = 0.;
        double dd_cache28 = 0.;
        double dd_cache29 = 0.;
        double dd_cache30 = 0.;
        double dd_cache31 = 0.;
        double dd_cache32 = 0.;
        double dd_cache33 = 0.;
        double dd_cache34 = 0.;
        double dd_cache35 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+0)]);
                dd_cache6 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+1)]);
                dd_cache7 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+1)]);
                dd_cache8 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+1)]);
                dd_cache9 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+1)]);
                dd_cache10 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+1)]);
                dd_cache11 += fac * (dm[(j0+0)*nao+(k0+1)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+1)]);
                dd_cache12 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+2)]);
                dd_cache13 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+2)]);
                dd_cache14 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+2)]);
                dd_cache15 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+2)]);
                dd_cache16 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+2)]);
                dd_cache17 += fac * (dm[(j0+0)*nao+(k0+2)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+2)]);
                dd_cache18 += fac * (dm[(j0+0)*nao+(k0+3)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+3)]);
                dd_cache19 += fac * (dm[(j0+0)*nao+(k0+3)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+3)]);
                dd_cache20 += fac * (dm[(j0+0)*nao+(k0+3)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+3)]);
                dd_cache21 += fac * (dm[(j0+0)*nao+(k0+3)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+3)]);
                dd_cache22 += fac * (dm[(j0+0)*nao+(k0+3)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+3)]);
                dd_cache23 += fac * (dm[(j0+0)*nao+(k0+3)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+3)]);
                dd_cache24 += fac * (dm[(j0+0)*nao+(k0+4)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+4)]);
                dd_cache25 += fac * (dm[(j0+0)*nao+(k0+4)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+4)]);
                dd_cache26 += fac * (dm[(j0+0)*nao+(k0+4)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+4)]);
                dd_cache27 += fac * (dm[(j0+0)*nao+(k0+4)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+4)]);
                dd_cache28 += fac * (dm[(j0+0)*nao+(k0+4)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+4)]);
                dd_cache29 += fac * (dm[(j0+0)*nao+(k0+4)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+4)]);
                dd_cache30 += fac * (dm[(j0+0)*nao+(k0+5)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+5)]);
                dd_cache31 += fac * (dm[(j0+0)*nao+(k0+5)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+5)]);
                dd_cache32 += fac * (dm[(j0+0)*nao+(k0+5)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+5)]);
                dd_cache33 += fac * (dm[(j0+0)*nao+(k0+5)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+5)]);
                dd_cache34 += fac * (dm[(j0+0)*nao+(k0+5)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+5)]);
                dd_cache35 += fac * (dm[(j0+0)*nao+(k0+5)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+5)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache1 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache2 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache3 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+3)];
                dd_cache4 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+4)];
                dd_cache5 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+5)];
                dd_cache6 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache7 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache8 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache9 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+3)];
                dd_cache10 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+4)];
                dd_cache11 += fac * dm[(l0+0)*nao+(k0+1)] * dm[(j0+0)*nao+(i0+5)];
                dd_cache12 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache13 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache14 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache15 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+3)];
                dd_cache16 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+4)];
                dd_cache17 += fac * dm[(l0+0)*nao+(k0+2)] * dm[(j0+0)*nao+(i0+5)];
                dd_cache18 += fac * dm[(l0+0)*nao+(k0+3)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache19 += fac * dm[(l0+0)*nao+(k0+3)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache20 += fac * dm[(l0+0)*nao+(k0+3)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache21 += fac * dm[(l0+0)*nao+(k0+3)] * dm[(j0+0)*nao+(i0+3)];
                dd_cache22 += fac * dm[(l0+0)*nao+(k0+3)] * dm[(j0+0)*nao+(i0+4)];
                dd_cache23 += fac * dm[(l0+0)*nao+(k0+3)] * dm[(j0+0)*nao+(i0+5)];
                dd_cache24 += fac * dm[(l0+0)*nao+(k0+4)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache25 += fac * dm[(l0+0)*nao+(k0+4)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache26 += fac * dm[(l0+0)*nao+(k0+4)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache27 += fac * dm[(l0+0)*nao+(k0+4)] * dm[(j0+0)*nao+(i0+3)];
                dd_cache28 += fac * dm[(l0+0)*nao+(k0+4)] * dm[(j0+0)*nao+(i0+4)];
                dd_cache29 += fac * dm[(l0+0)*nao+(k0+4)] * dm[(j0+0)*nao+(i0+5)];
                dd_cache30 += fac * dm[(l0+0)*nao+(k0+5)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache31 += fac * dm[(l0+0)*nao+(k0+5)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache32 += fac * dm[(l0+0)*nao+(k0+5)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache33 += fac * dm[(l0+0)*nao+(k0+5)] * dm[(j0+0)*nao+(i0+3)];
                dd_cache34 += fac * dm[(l0+0)*nao+(k0+5)] * dm[(j0+0)*nao+(i0+4)];
                dd_cache35 += fac * dm[(l0+0)*nao+(k0+5)] * dm[(j0+0)*nao+(i0+5)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+0)]);
                dd_cache6 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+1)]);
                dd_cache7 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+1)]);
                dd_cache8 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+1)]);
                dd_cache9 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+1)]);
                dd_cache10 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+1)]);
                dd_cache11 += fac * (dm[(j0+0)*nao+(k0+1)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+1)] + dmb[(j0+0)*nao+(k0+1)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+1)]);
                dd_cache12 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+2)]);
                dd_cache13 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+2)]);
                dd_cache14 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+2)]);
                dd_cache15 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+2)]);
                dd_cache16 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+2)]);
                dd_cache17 += fac * (dm[(j0+0)*nao+(k0+2)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+2)] + dmb[(j0+0)*nao+(k0+2)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+2)]);
                dd_cache18 += fac * (dm[(j0+0)*nao+(k0+3)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+3)] + dmb[(j0+0)*nao+(k0+3)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+3)]);
                dd_cache19 += fac * (dm[(j0+0)*nao+(k0+3)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+3)] + dmb[(j0+0)*nao+(k0+3)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+3)]);
                dd_cache20 += fac * (dm[(j0+0)*nao+(k0+3)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+3)] + dmb[(j0+0)*nao+(k0+3)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+3)]);
                dd_cache21 += fac * (dm[(j0+0)*nao+(k0+3)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+3)] + dmb[(j0+0)*nao+(k0+3)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+3)]);
                dd_cache22 += fac * (dm[(j0+0)*nao+(k0+3)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+3)] + dmb[(j0+0)*nao+(k0+3)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+3)]);
                dd_cache23 += fac * (dm[(j0+0)*nao+(k0+3)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+3)] + dmb[(j0+0)*nao+(k0+3)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+3)]);
                dd_cache24 += fac * (dm[(j0+0)*nao+(k0+4)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+4)] + dmb[(j0+0)*nao+(k0+4)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+4)]);
                dd_cache25 += fac * (dm[(j0+0)*nao+(k0+4)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+4)] + dmb[(j0+0)*nao+(k0+4)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+4)]);
                dd_cache26 += fac * (dm[(j0+0)*nao+(k0+4)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+4)] + dmb[(j0+0)*nao+(k0+4)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+4)]);
                dd_cache27 += fac * (dm[(j0+0)*nao+(k0+4)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+4)] + dmb[(j0+0)*nao+(k0+4)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+4)]);
                dd_cache28 += fac * (dm[(j0+0)*nao+(k0+4)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+4)] + dmb[(j0+0)*nao+(k0+4)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+4)]);
                dd_cache29 += fac * (dm[(j0+0)*nao+(k0+4)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+4)] + dmb[(j0+0)*nao+(k0+4)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+4)]);
                dd_cache30 += fac * (dm[(j0+0)*nao+(k0+5)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+5)] + dmb[(j0+0)*nao+(k0+5)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+5)]);
                dd_cache31 += fac * (dm[(j0+0)*nao+(k0+5)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+5)] + dmb[(j0+0)*nao+(k0+5)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+5)]);
                dd_cache32 += fac * (dm[(j0+0)*nao+(k0+5)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+5)] + dmb[(j0+0)*nao+(k0+5)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+5)]);
                dd_cache33 += fac * (dm[(j0+0)*nao+(k0+5)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+5)] + dmb[(j0+0)*nao+(k0+5)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+5)]);
                dd_cache34 += fac * (dm[(j0+0)*nao+(k0+5)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+5)] + dmb[(j0+0)*nao+(k0+5)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+5)]);
                dd_cache35 += fac * (dm[(j0+0)*nao+(k0+5)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+5)] + dmb[(j0+0)*nao+(k0+5)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+5)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache1 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache2 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache3 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+3)]+dmb[(j0+0)*nao+(i0+3)]);
                dd_cache4 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+4)]+dmb[(j0+0)*nao+(i0+4)]);
                dd_cache5 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+5)]+dmb[(j0+0)*nao+(i0+5)]);
                dd_cache6 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache7 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache8 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache9 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+3)]+dmb[(j0+0)*nao+(i0+3)]);
                dd_cache10 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+4)]+dmb[(j0+0)*nao+(i0+4)]);
                dd_cache11 += fac * (dm[(l0+0)*nao+(k0+1)]+dmb[(l0+0)*nao+(k0+1)]) * (dm[(j0+0)*nao+(i0+5)]+dmb[(j0+0)*nao+(i0+5)]);
                dd_cache12 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache13 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache14 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache15 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+3)]+dmb[(j0+0)*nao+(i0+3)]);
                dd_cache16 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+4)]+dmb[(j0+0)*nao+(i0+4)]);
                dd_cache17 += fac * (dm[(l0+0)*nao+(k0+2)]+dmb[(l0+0)*nao+(k0+2)]) * (dm[(j0+0)*nao+(i0+5)]+dmb[(j0+0)*nao+(i0+5)]);
                dd_cache18 += fac * (dm[(l0+0)*nao+(k0+3)]+dmb[(l0+0)*nao+(k0+3)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache19 += fac * (dm[(l0+0)*nao+(k0+3)]+dmb[(l0+0)*nao+(k0+3)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache20 += fac * (dm[(l0+0)*nao+(k0+3)]+dmb[(l0+0)*nao+(k0+3)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache21 += fac * (dm[(l0+0)*nao+(k0+3)]+dmb[(l0+0)*nao+(k0+3)]) * (dm[(j0+0)*nao+(i0+3)]+dmb[(j0+0)*nao+(i0+3)]);
                dd_cache22 += fac * (dm[(l0+0)*nao+(k0+3)]+dmb[(l0+0)*nao+(k0+3)]) * (dm[(j0+0)*nao+(i0+4)]+dmb[(j0+0)*nao+(i0+4)]);
                dd_cache23 += fac * (dm[(l0+0)*nao+(k0+3)]+dmb[(l0+0)*nao+(k0+3)]) * (dm[(j0+0)*nao+(i0+5)]+dmb[(j0+0)*nao+(i0+5)]);
                dd_cache24 += fac * (dm[(l0+0)*nao+(k0+4)]+dmb[(l0+0)*nao+(k0+4)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache25 += fac * (dm[(l0+0)*nao+(k0+4)]+dmb[(l0+0)*nao+(k0+4)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache26 += fac * (dm[(l0+0)*nao+(k0+4)]+dmb[(l0+0)*nao+(k0+4)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache27 += fac * (dm[(l0+0)*nao+(k0+4)]+dmb[(l0+0)*nao+(k0+4)]) * (dm[(j0+0)*nao+(i0+3)]+dmb[(j0+0)*nao+(i0+3)]);
                dd_cache28 += fac * (dm[(l0+0)*nao+(k0+4)]+dmb[(l0+0)*nao+(k0+4)]) * (dm[(j0+0)*nao+(i0+4)]+dmb[(j0+0)*nao+(i0+4)]);
                dd_cache29 += fac * (dm[(l0+0)*nao+(k0+4)]+dmb[(l0+0)*nao+(k0+4)]) * (dm[(j0+0)*nao+(i0+5)]+dmb[(j0+0)*nao+(i0+5)]);
                dd_cache30 += fac * (dm[(l0+0)*nao+(k0+5)]+dmb[(l0+0)*nao+(k0+5)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache31 += fac * (dm[(l0+0)*nao+(k0+5)]+dmb[(l0+0)*nao+(k0+5)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache32 += fac * (dm[(l0+0)*nao+(k0+5)]+dmb[(l0+0)*nao+(k0+5)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache33 += fac * (dm[(l0+0)*nao+(k0+5)]+dmb[(l0+0)*nao+(k0+5)]) * (dm[(j0+0)*nao+(i0+3)]+dmb[(j0+0)*nao+(i0+3)]);
                dd_cache34 += fac * (dm[(l0+0)*nao+(k0+5)]+dmb[(l0+0)*nao+(k0+5)]) * (dm[(j0+0)*nao+(i0+4)]+dmb[(j0+0)*nao+(i0+4)]);
                dd_cache35 += fac * (dm[(l0+0)*nao+(k0+5)]+dmb[(l0+0)*nao+(k0+5)]) * (dm[(j0+0)*nao+(i0+5)]+dmb[(j0+0)*nao+(i0+5)]);
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = ck[kp] * cl[lp] * Kcd;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[ijp];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = rjri[0] * aj_aij;
                double ypa = rjri[1] * aj_aij;
                double zpa = rjri[2] * aj_aij;
                double xij = ri[0] + xpa;
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xqc = xlxk * al_akl;
                double yqc = ylyk * al_akl;
                double zqc = zlzk * al_akl;
                double xkl = rk[0] + xqc;
                double ykl = rk[1] + yqc;
                double zkl = rk[2] + zqc;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double rr = xpq*xpq + ypq*ypq + zpq*zpq;
                double theta = aij * akl / (aij + akl);
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < nroots; ++irys) {
                    double wt = rw[(2*irys+1)*256] * fac;
                    double rt = rw[ 2*irys   *256];
                    double rt_aa = rt / (aij + akl);
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    double b00 = .5 * rt_aa;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    double b01 = .5/akl * (1 - rt_akl);
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    double trr_22x = cpx * trr_21x + 1*b01 * trr_20x + 2*b00 * trr_11x;
                    dd = dd_cache0;
                    Ix = trr_22x;
                    Iy = 1;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    double trr_30x = c0x * trr_20x + 2*b10 * trr_10x;
                    double trr_31x = cpx * trr_30x + 3*b00 * trr_20x;
                    double trr_32x = cpx * trr_31x + 1*b01 * trr_30x + 3*b00 * trr_21x;
                    fxi = ai2 * trr_32x;
                    double trr_01x = cpx * 1;
                    double trr_12x = cpx * trr_11x + 1*b01 * trr_10x + 1*b00 * trr_01x;
                    fxi -= 2 * trr_12x;
                    v_ix += fxi * prod_yz;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_2120x = trr_32x - xjxi * trr_22x;
                    fxj = aj2 * hrr_2120x;
                    v_jx += fxj * prod_yz;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_23x = cpx * trr_22x + 2*b01 * trr_21x + 2*b00 * trr_12x;
                    fxk = ak2 * trr_23x;
                    fxk -= 2 * trr_21x;
                    v_kx += fxk * prod_yz;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_2021x = trr_23x - xlxk * trr_22x;
                    fxl = al2 * hrr_2021x;
                    v_lx += fxl * prod_yz;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache1;
                    Ix = trr_12x;
                    Iy = trr_10y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_22x;
                    double trr_02x = cpx * trr_01x + 1*b01 * 1;
                    fxi -= 1 * trr_02x;
                    v_ix += fxi * prod_yz;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1120x = trr_22x - xjxi * trr_12x;
                    fxj = aj2 * hrr_1120x;
                    v_jx += fxj * prod_yz;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_13x = cpx * trr_12x + 2*b01 * trr_11x + 1*b00 * trr_02x;
                    fxk = ak2 * trr_13x;
                    fxk -= 2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_1021x = trr_13x - xlxk * trr_12x;
                    fxl = al2 * hrr_1021x;
                    v_lx += fxl * prod_yz;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache2;
                    Ix = trr_12x;
                    Iy = 1;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_22x;
                    fxi -= 1 * trr_02x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1120x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_13x;
                    fxk -= 2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1021x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache3;
                    Ix = trr_02x;
                    Iy = trr_20y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_12x;
                    v_ix += fxi * prod_yz;
                    double trr_30y = c0y * trr_20y + 2*b10 * trr_10y;
                    fyi = ai2 * trr_30y;
                    fyi -= 2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0120x = trr_12x - xjxi * trr_02x;
                    fxj = aj2 * hrr_0120x;
                    v_jx += fxj * prod_yz;
                    double hrr_2100y = trr_30y - yjyi * trr_20y;
                    fyj = aj2 * hrr_2100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_03x = cpx * trr_02x + 2*b01 * trr_01x;
                    fxk = ak2 * trr_03x;
                    fxk -= 2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    fyk = ak2 * trr_21y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0021x = trr_03x - xlxk * trr_02x;
                    fxl = al2 * hrr_0021x;
                    v_lx += fxl * prod_yz;
                    double hrr_2001y = trr_21y - ylyk * trr_20y;
                    fyl = al2 * hrr_2001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache4;
                    Ix = trr_02x;
                    Iy = trr_10y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_12x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0120x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_03x;
                    fxk -= 2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0021x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache5;
                    Ix = trr_02x;
                    Iy = 1;
                    Iz = trr_20z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_12x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_30z = c0z * trr_20z + 2*b10 * trr_10z;
                    fzi = ai2 * trr_30z;
                    fzi -= 2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0120x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_2100z = trr_30z - zjzi * trr_20z;
                    fzj = aj2 * hrr_2100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_03x;
                    fxk -= 2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    fzk = ak2 * trr_21z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0021x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_2001z = trr_21z - zlzk * trr_20z;
                    fzl = al2 * hrr_2001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache6;
                    Ix = trr_21x;
                    Iy = trr_01y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_31x;
                    fxi -= 2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_2110x = trr_31x - xjxi * trr_21x;
                    fxj = aj2 * hrr_2110x;
                    v_jx += fxj * prod_yz;
                    double hrr_0110y = trr_11y - yjyi * trr_01y;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_22x;
                    fxk -= 1 * trr_20x;
                    v_kx += fxk * prod_yz;
                    double trr_02y = cpy * trr_01y + 1*b01 * 1;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_2011x = trr_22x - xlxk * trr_21x;
                    fxl = al2 * hrr_2011x;
                    v_lx += fxl * prod_yz;
                    double hrr_0011y = trr_02y - ylyk * trr_01y;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache7;
                    Ix = trr_11x;
                    Iy = trr_11y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_21x;
                    fxi -= 1 * trr_01x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_21y;
                    fyi -= 1 * trr_01y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1110x = trr_21x - xjxi * trr_11x;
                    fxj = aj2 * hrr_1110x;
                    v_jx += fxj * prod_yz;
                    double hrr_1110y = trr_21y - yjyi * trr_11y;
                    fyj = aj2 * hrr_1110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_12x;
                    fxk -= 1 * trr_10x;
                    v_kx += fxk * prod_yz;
                    double trr_12y = cpy * trr_11y + 1*b01 * trr_10y + 1*b00 * trr_01y;
                    fyk = ak2 * trr_12y;
                    fyk -= 1 * trr_10y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_1011x = trr_12x - xlxk * trr_11x;
                    fxl = al2 * hrr_1011x;
                    v_lx += fxl * prod_yz;
                    double hrr_1011y = trr_12y - ylyk * trr_11y;
                    fyl = al2 * hrr_1011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache8;
                    Ix = trr_11x;
                    Iy = trr_01y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_21x;
                    fxi -= 1 * trr_01x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_12x;
                    fxk -= 1 * trr_10x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache9;
                    Ix = trr_01x;
                    Iy = trr_21y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    double trr_31y = cpy * trr_30y + 3*b00 * trr_20y;
                    fyi = ai2 * trr_31y;
                    fyi -= 2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0110x = trr_11x - xjxi * trr_01x;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    double hrr_2110y = trr_31y - yjyi * trr_21y;
                    fyj = aj2 * hrr_2110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    double trr_22y = cpy * trr_21y + 1*b01 * trr_20y + 2*b00 * trr_11y;
                    fyk = ak2 * trr_22y;
                    fyk -= 1 * trr_20y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0011x = trr_02x - xlxk * trr_01x;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    double hrr_2011y = trr_22y - ylyk * trr_21y;
                    fyl = al2 * hrr_2011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache10;
                    Ix = trr_01x;
                    Iy = trr_11y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_21y;
                    fyi -= 1 * trr_01y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_12y;
                    fyk -= 1 * trr_10y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache11;
                    Ix = trr_01x;
                    Iy = trr_01y;
                    Iz = trr_20z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_30z;
                    fzi -= 2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_2100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_21z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_2001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache12;
                    Ix = trr_21x;
                    Iy = 1;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_31x;
                    fxi -= 2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_2110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0110z = trr_11z - zjzi * trr_01z;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_22x;
                    fxk -= 1 * trr_20x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_02z = cpz * trr_01z + 1*b01 * wt;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_2011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0011z = trr_02z - zlzk * trr_01z;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache13;
                    Ix = trr_11x;
                    Iy = trr_10y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_21x;
                    fxi -= 1 * trr_01x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_12x;
                    fxk -= 1 * trr_10x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache14;
                    Ix = trr_11x;
                    Iy = 1;
                    Iz = trr_11z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_21x;
                    fxi -= 1 * trr_01x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_21z;
                    fzi -= 1 * trr_01z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1110z = trr_21z - zjzi * trr_11z;
                    fzj = aj2 * hrr_1110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_12x;
                    fxk -= 1 * trr_10x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_12z = cpz * trr_11z + 1*b01 * trr_10z + 1*b00 * trr_01z;
                    fzk = ak2 * trr_12z;
                    fzk -= 1 * trr_10z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1011z = trr_12z - zlzk * trr_11z;
                    fzl = al2 * hrr_1011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache15;
                    Ix = trr_01x;
                    Iy = trr_20y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_30y;
                    fyi -= 2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_2100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_21y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_2001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache16;
                    Ix = trr_01x;
                    Iy = trr_10y;
                    Iz = trr_11z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_21z;
                    fzi -= 1 * trr_01z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_12z;
                    fzk -= 1 * trr_10z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache17;
                    Ix = trr_01x;
                    Iy = 1;
                    Iz = trr_21z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_11x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_31z = cpz * trr_30z + 3*b00 * trr_20z;
                    fzi = ai2 * trr_31z;
                    fzi -= 2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0110x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_2110z = trr_31z - zjzi * trr_21z;
                    fzj = aj2 * hrr_2110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_02x;
                    fxk -= 1 * 1;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_22z = cpz * trr_21z + 1*b01 * trr_20z + 2*b00 * trr_11z;
                    fzk = ak2 * trr_22z;
                    fzk -= 1 * trr_20z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0011x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_2011z = trr_22z - zlzk * trr_21z;
                    fzl = al2 * hrr_2011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache18;
                    Ix = trr_20x;
                    Iy = trr_02y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_30x;
                    fxi -= 2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_12y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_2100x = trr_30x - xjxi * trr_20x;
                    fxj = aj2 * hrr_2100x;
                    v_jx += fxj * prod_yz;
                    double hrr_0120y = trr_12y - yjyi * trr_02y;
                    fyj = aj2 * hrr_0120y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_21x;
                    v_kx += fxk * prod_yz;
                    double trr_03y = cpy * trr_02y + 2*b01 * trr_01y;
                    fyk = ak2 * trr_03y;
                    fyk -= 2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_2001x = trr_21x - xlxk * trr_20x;
                    fxl = al2 * hrr_2001x;
                    v_lx += fxl * prod_yz;
                    double hrr_0021y = trr_03y - ylyk * trr_02y;
                    fyl = al2 * hrr_0021y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache19;
                    Ix = trr_10x;
                    Iy = trr_12y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_22y;
                    fyi -= 1 * trr_02y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    double hrr_1120y = trr_22y - yjyi * trr_12y;
                    fyj = aj2 * hrr_1120y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    double trr_13y = cpy * trr_12y + 2*b01 * trr_11y + 1*b00 * trr_02y;
                    fyk = ak2 * trr_13y;
                    fyk -= 2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    double hrr_1021y = trr_13y - ylyk * trr_12y;
                    fyl = al2 * hrr_1021y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache20;
                    Ix = trr_10x;
                    Iy = trr_02y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_12y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0120y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_03y;
                    fyk -= 2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0021y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache21;
                    Ix = 1;
                    Iy = trr_22y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    double trr_32y = cpy * trr_31y + 1*b01 * trr_30y + 3*b00 * trr_21y;
                    fyi = ai2 * trr_32y;
                    fyi -= 2 * trr_12y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    double hrr_2120y = trr_32y - yjyi * trr_22y;
                    fyj = aj2 * hrr_2120y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    double trr_23y = cpy * trr_22y + 2*b01 * trr_21y + 2*b00 * trr_12y;
                    fyk = ak2 * trr_23y;
                    fyk -= 2 * trr_21y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    double hrr_2021y = trr_23y - ylyk * trr_22y;
                    fyl = al2 * hrr_2021y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache22;
                    Ix = 1;
                    Iy = trr_12y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_22y;
                    fyi -= 1 * trr_02y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1120y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_13y;
                    fyk -= 2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1021y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache23;
                    Ix = 1;
                    Iy = trr_02y;
                    Iz = trr_20z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_12y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_30z;
                    fzi -= 2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0120y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_2100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_03y;
                    fyk -= 2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_21z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0021y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_2001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache24;
                    Ix = trr_20x;
                    Iy = trr_01y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_30x;
                    fxi -= 2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_2100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_21x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_2001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache25;
                    Ix = trr_10x;
                    Iy = trr_11y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_21y;
                    fyi -= 1 * trr_01y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_12y;
                    fyk -= 1 * trr_10y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache26;
                    Ix = trr_10x;
                    Iy = trr_01y;
                    Iz = trr_11z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_21z;
                    fzi -= 1 * trr_01z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_12z;
                    fzk -= 1 * trr_10z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache27;
                    Ix = 1;
                    Iy = trr_21y;
                    Iz = trr_01z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_31y;
                    fyi -= 2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_2110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_22y;
                    fyk -= 1 * trr_20y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_02z;
                    fzk -= 1 * wt;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_2011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache28;
                    Ix = 1;
                    Iy = trr_11y;
                    Iz = trr_11z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_21y;
                    fyi -= 1 * trr_01y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_21z;
                    fzi -= 1 * trr_01z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_12y;
                    fyk -= 1 * trr_10y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_12z;
                    fzk -= 1 * trr_10z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache29;
                    Ix = 1;
                    Iy = trr_01y;
                    Iz = trr_21z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_11y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_31z;
                    fzi -= 2 * trr_11z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0110y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_2110z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_02y;
                    fyk -= 1 * 1;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_22z;
                    fzk -= 1 * trr_20z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0011y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_2011z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache30;
                    Ix = trr_20x;
                    Iy = 1;
                    Iz = trr_02z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_30x;
                    fxi -= 2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_12z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_2100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0120z = trr_12z - zjzi * trr_02z;
                    fzj = aj2 * hrr_0120z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_21x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_03z = cpz * trr_02z + 2*b01 * trr_01z;
                    fzk = ak2 * trr_03z;
                    fzk -= 2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_2001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0021z = trr_03z - zlzk * trr_02z;
                    fzl = al2 * hrr_0021z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache31;
                    Ix = trr_10x;
                    Iy = trr_10y;
                    Iz = trr_02z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_12z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0120z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_03z;
                    fzk -= 2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0021z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache32;
                    Ix = trr_10x;
                    Iy = 1;
                    Iz = trr_12z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_22z;
                    fzi -= 1 * trr_02z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1120z = trr_22z - zjzi * trr_12z;
                    fzj = aj2 * hrr_1120z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_13z = cpz * trr_12z + 2*b01 * trr_11z + 1*b00 * trr_02z;
                    fzk = ak2 * trr_13z;
                    fzk -= 2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1021z = trr_13z - zlzk * trr_12z;
                    fzl = al2 * hrr_1021z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache33;
                    Ix = 1;
                    Iy = trr_20y;
                    Iz = trr_02z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_30y;
                    fyi -= 2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_12z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_2100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0120z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_21y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_03z;
                    fzk -= 2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_2001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0021z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache34;
                    Ix = 1;
                    Iy = trr_10y;
                    Iz = trr_12z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_22z;
                    fzi -= 1 * trr_02z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1120z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_13z;
                    fzk -= 2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1021z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache35;
                    Ix = 1;
                    Iy = 1;
                    Iz = trr_22z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_32z = cpz * trr_31z + 1*b01 * trr_30z + 3*b00 * trr_21z;
                    fzi = ai2 * trr_32z;
                    fzi -= 2 * trr_12z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_2120z = trr_32z - zjzi * trr_22z;
                    fzj = aj2 * hrr_2120z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_23z = cpz * trr_22z + 2*b01 * trr_21z + 2*b00 * trr_12z;
                    fzk = ak2 * trr_23z;
                    fzk -= 2 * trr_21z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_2021z = trr_23z - zlzk * trr_22z;
                    fzl = al2 * hrr_2021z;
                    v_lz += fzl * prod_xy;
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_2021(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 32;
    constexpr int gout_stride = 8;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    double *dd_cache = dd_pool + blockIdx.x * 3456 + sq_id;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rlrk = shared_memory + sq_id;
    double *Rpq = shared_memory + nsq_per_block * 3 + sq_id;
    double *gx = shared_memory + nsq_per_block * 6 + sq_id;
    double *rw = shared_memory + nsq_per_block * 102 + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (102+nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        if (gout_id == 0) {
            rlrk[0] = xlxk;
            rlrk[32] = ylyk;
            rlrk[64] = zlzk;
        }
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        int do_j = jk.j_factor != 0.;
        int do_k = jk.k_factor != 0.;
        if (jk.n_dm == 1) {
            for (int n = gout_id; n < 108; n+=8) {
                int kl = n / 6;
                int ij = n % 6;
                int i = ij % 6;
                int j = ij / 6;
                int k = kl % 6;
                int l = kl / 6;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm[_jk] * dm[_il] + dm[_jl] * dm[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * dm[_ji] * dm[_lk];
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        } else {
            double *dmb = dm + nao * nao;
            for (int n = gout_id; n < 108; n+=8) {
                int kl = n / 6;
                int ij = n % 6;
                int i = ij % 6;
                int j = ij / 6;
                int k = kl % 6;
                int l = kl / 6;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm [_jk] * dm [_il] + dm [_jl] * dm [_ik] +
                                         dmb[_jk] * dmb[_il] + dmb[_jl] * dmb[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * (dm[_ji] + dmb[_ji]) * (dm[_lk] + dmb[_lk]);
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            __syncthreads();
            if (gout_id == 0) {
                double xlxk = rlrk[0];
                double ylyk = rlrk[32];
                double zlzk = rlrk[64];
                double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
                double ckcl = ck[kp] * cl[lp] * Kcd;
                gx[0] = ckcl;
            }
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double xij = ri[0] + (rjri[0]) * aj_aij;
                double yij = ri[1] + (rjri[1]) * aj_aij;
                double zij = ri[2] + (rjri[2]) * aj_aij;
                double xkl = rk[0] + rlrk[0] * al_akl;
                double ykl = rk[1] + rlrk[32] * al_akl;
                double zkl = rk[2] + rlrk[64] * al_akl;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                __syncthreads();
                if (gout_id == 0) {
                    Rpq[0] = xpq;
                    Rpq[32] = ypq;
                    Rpq[64] = zpq;
                    double cicj = cicj_cache[ijp];
                    gx[1024] = cicj / (aij*akl*sqrt(aij+akl));
                }
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                double s0, s1, s2;
                for (int irys = 0; irys < nroots; ++irys) {
                    __syncthreads();
                    double rt = rw[irys*64];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double rt_akl = rt_aa * aij;
                    double b00 = .5 * rt_aa;
                    double b10 = .5/aij * (1 - rt_aij);
                    double b01 = .5/akl * (1 - rt_akl);
                    for (int n = gout_id; n < 3; n += 8) {
                        if (n == 2) {
                            gx[2048] = rw[irys*64+32];
                        }
                        double *_gx = gx + n * 1024;
                        double xjxi = rjri[n];
                        double Rpa = xjxi * aj_aij;
                        double c0x = Rpa - rt_aij * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = c0x * s0;
                        _gx[32] = s1;
                        s2 = c0x * s1 + 1 * b10 * s0;
                        _gx[64] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 2 * b10 * s0;
                        _gx[96] = s2;
                        double xlxk = rlrk[n*32];
                        double Rqc = xlxk * al_akl;
                        double cpx = Rqc + rt_akl * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = cpx * s0;
                        _gx[128] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        _gx[256] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        _gx[384] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 3 * b01 *s0;
                        _gx[512] = s2;
                        s0 = _gx[32];
                        s1 = cpx * s0;
                        s1 += 1 * b00 * _gx[0];
                        _gx[160] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 1 * b00 * _gx[128];
                        _gx[288] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 1 * b00 * _gx[256];
                        _gx[416] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 3 * b01 *s0;
                        s2 += 1 * b00 * _gx[384];
                        _gx[544] = s2;
                        s0 = _gx[64];
                        s1 = cpx * s0;
                        s1 += 2 * b00 * _gx[32];
                        _gx[192] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 2 * b00 * _gx[160];
                        _gx[320] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 2 * b00 * _gx[288];
                        _gx[448] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 3 * b01 *s0;
                        s2 += 2 * b00 * _gx[416];
                        _gx[576] = s2;
                        s0 = _gx[96];
                        s1 = cpx * s0;
                        s1 += 3 * b00 * _gx[64];
                        _gx[224] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 3 * b00 * _gx[192];
                        _gx[352] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 3 * b00 * _gx[320];
                        _gx[480] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 3 * b01 *s0;
                        s2 += 3 * b00 * _gx[448];
                        _gx[608] = s2;
                        s1 = _gx[512];
                        s0 = _gx[384];
                        _gx[896] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[256];
                        _gx[768] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[128];
                        _gx[640] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[512] = s1 - xlxk * s0;
                        s1 = _gx[544];
                        s0 = _gx[416];
                        _gx[928] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[288];
                        _gx[800] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[160];
                        _gx[672] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[544] = s1 - xlxk * s0;
                        s1 = _gx[576];
                        s0 = _gx[448];
                        _gx[960] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[320];
                        _gx[832] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[192];
                        _gx[704] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[64];
                        _gx[576] = s1 - xlxk * s0;
                        s1 = _gx[608];
                        s0 = _gx[480];
                        _gx[992] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[352];
                        _gx[864] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[224];
                        _gx[736] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[96];
                        _gx[608] = s1 - xlxk * s0;
                    }
                    __syncthreads();
                    double xjxi = rjri[0];
                    double yjyi = rjri[1];
                    double zjzi = rjri[2];
                    double xlxk = rlrk[0];
                    double ylyk = rlrk[32];
                    double zlzk = rlrk[64];
                    switch (gout_id) {
                    case 0:
                        dd = dd_cache[0];
                        Ix = gx[832];
                        Iy = gx[1024];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[864] - 2 * gx[800]) * prod_yz;
                        v_kx += (ak2 * gx[960] - 2 * gx[704]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[864] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[960] - xlxk * Ix) - 1 * gx[320]) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[256];
                        Ix = gx[672];
                        Iy = gx[1152];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[704] - 1 * gx[640]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 1 * gx[544]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2208] * prod_xy;
                        v_jx += aj2 * (gx[704] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[800] - xlxk * Ix) - 1 * gx[160]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[512];
                        Ix = gx[640];
                        Iy = gx[1056];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[672] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[512]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += (ak2 * gx[2336] - 1 * gx[2080]) * prod_xy;
                        v_jx += aj2 * (gx[672] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2240] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[768];
                        Ix = gx[576];
                        Iy = gx[1152];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[608] - 2 * gx[544]) * prod_yz;
                        v_kx += ak2 * gx[704] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[1024]) * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += (ak2 * gx[2304] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[704] - xlxk * Ix) - 1 * gx[64]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2208] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1024];
                        Ix = gx[544];
                        Iy = gx[1024];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += ak2 * gx[672] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += (ak2 * gx[2464] - 2 * gx[2208]) * prod_xy;
                        v_jx += aj2 * (gx[576] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[672] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2464] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1280];
                        Ix = gx[256];
                        Iy = gx[1568];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[384] - 2 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2208] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1696] - ylyk * Iy) - 1 * gx[1056]) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1536];
                        Ix = gx[192];
                        Iy = gx[1536];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += (ak2 * gx[320] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += (ak2 * gx[2304] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1664] - ylyk * Iy) - 1 * gx[1024]) * prod_xz;
                        v_jz += aj2 * (gx[2208] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1792];
                        Ix = gx[32];
                        Iy = gx[1792];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 2 * gx[1664]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2208] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1920] - ylyk * Iy) - 1 * gx[1280]) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2048];
                        Ix = gx[0];
                        Iy = gx[1696];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += (ak2 * gx[1824] - 1 * gx[1568]) * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += (ak2 * gx[2336] - 1 * gx[2080]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1728] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1824] - ylyk * Iy) - 1 * gx[1184]) * prod_xz;
                        v_jz += aj2 * (gx[2240] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2304];
                        Ix = gx[320];
                        Iy = gx[1024];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[448] - 2 * gx[192]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[352] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2688] - zlzk * Iz) - 1 * gx[2048]) * prod_xy;
                        dd = dd_cache[2560];
                        Ix = gx[160];
                        Iy = gx[1152];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += (ak2 * gx[288] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += aj2 * (gx[192] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2624] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2720] - zlzk * Iz) - 1 * gx[2080]) * prod_xy;
                        dd = dd_cache[2816];
                        Ix = gx[128];
                        Iy = gx[1056];
                        Iz = gx[2720];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xy;
                        v_kz += (ak2 * gx[2848] - 1 * gx[2592]) * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2752] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2848] - zlzk * Iz) - 1 * gx[2208]) * prod_xy;
                        dd = dd_cache[3072];
                        Ix = gx[64];
                        Iy = gx[1152];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[1024]) * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[2816] - 1 * gx[2560]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2816] - zlzk * Iz) - 1 * gx[2176]) * prod_xy;
                        dd = dd_cache[3328];
                        Ix = gx[32];
                        Iy = gx[1024];
                        Iz = gx[2848];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[2880] - 1 * gx[2816]) * prod_xy;
                        v_kz += (ak2 * gx[2976] - 2 * gx[2720]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2880] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2976] - zlzk * Iz) - 1 * gx[2336]) * prod_xy;
                        break;
                    case 1:
                        dd = dd_cache[32];
                        Ix = gx[800];
                        Iy = gx[1056];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[832] - 1 * gx[768]) * prod_yz;
                        v_kx += (ak2 * gx[928] - 2 * gx[672]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[832] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[928] - xlxk * Ix) - 1 * gx[288]) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[288];
                        Ix = gx[640];
                        Iy = gx[1216];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[672] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[512]) * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += (ak2 * gx[1344] - 1 * gx[1088]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[672] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1248] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[544];
                        Ix = gx[640];
                        Iy = gx[1024];
                        Iz = gx[2240];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[672] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[512]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[2272] - 2 * gx[2208]) * prod_xy;
                        v_kz += (ak2 * gx[2368] - 1 * gx[2112]) * prod_xy;
                        v_jx += aj2 * (gx[672] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2272] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2368] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[800];
                        Ix = gx[544];
                        Iy = gx[1184];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += ak2 * gx[672] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += (ak2 * gx[1312] - 1 * gx[1056]) * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += (ak2 * gx[2304] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[576] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[672] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2208] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1056];
                        Ix = gx[512];
                        Iy = gx[1088];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += ak2 * gx[1216] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2432] - 2 * gx[2176]) * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[640] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1216] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1312];
                        Ix = gx[256];
                        Iy = gx[1536];
                        Iz = gx[2112];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[384] - 2 * gx[128]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2144] - 2 * gx[2080]) * prod_xy;
                        v_kz += ak2 * gx[2240] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1664] - ylyk * Iy) - 1 * gx[1024]) * prod_xz;
                        v_jz += aj2 * (gx[2144] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2240] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1568];
                        Ix = gx[160];
                        Iy = gx[1568];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += (ak2 * gx[288] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += (ak2 * gx[2304] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[192] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1696] - ylyk * Iy) - 1 * gx[1056]) * prod_xz;
                        v_jz += aj2 * (gx[2208] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1824];
                        Ix = gx[0];
                        Iy = gx[1856];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1888] - 2 * gx[1824]) * prod_xz;
                        v_ky += (ak2 * gx[1984] - 2 * gx[1728]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1888] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1984] - ylyk * Iy) - 1 * gx[1344]) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2080];
                        Ix = gx[0];
                        Iy = gx[1664];
                        Iz = gx[2240];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[1792] - 1 * gx[1536]) * prod_xz;
                        v_iz += (ai2 * gx[2272] - 2 * gx[2208]) * prod_xy;
                        v_kz += (ak2 * gx[2368] - 1 * gx[2112]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1696] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1792] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += aj2 * (gx[2272] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2368] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2336];
                        Ix = gx[288];
                        Iy = gx[1056];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[416] - 2 * gx[160]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2688] - zlzk * Iz) - 1 * gx[2048]) * prod_xy;
                        dd = dd_cache[2592];
                        Ix = gx[128];
                        Iy = gx[1216];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += (ak2 * gx[1344] - 1 * gx[1088]) * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1248] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2688] - zlzk * Iz) - 1 * gx[2048]) * prod_xy;
                        dd = dd_cache[2848];
                        Ix = gx[128];
                        Iy = gx[1024];
                        Iz = gx[2752];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[2784] - 2 * gx[2720]) * prod_xy;
                        v_kz += (ak2 * gx[2880] - 1 * gx[2624]) * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2784] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2880] - zlzk * Iz) - 1 * gx[2240]) * prod_xy;
                        dd = dd_cache[3104];
                        Ix = gx[32];
                        Iy = gx[1184];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += (ak2 * gx[1312] - 1 * gx[1056]) * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[2816] - 1 * gx[2560]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2816] - zlzk * Iz) - 1 * gx[2176]) * prod_xy;
                        dd = dd_cache[3360];
                        Ix = gx[0];
                        Iy = gx[1088];
                        Iz = gx[2816];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += ak2 * gx[1216] * prod_xz;
                        v_iz += ai2 * gx[2848] * prod_xy;
                        v_kz += (ak2 * gx[2944] - 2 * gx[2688]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1216] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2848] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2944] - zlzk * Iz) - 1 * gx[2304]) * prod_xy;
                        break;
                    case 2:
                        dd = dd_cache[64];
                        Ix = gx[800];
                        Iy = gx[1024];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[832] - 1 * gx[768]) * prod_yz;
                        v_kx += (ak2 * gx[928] - 2 * gx[672]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2208] * prod_xy;
                        v_jx += aj2 * (gx[832] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[928] - xlxk * Ix) - 1 * gx[288]) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[320];
                        Ix = gx[640];
                        Iy = gx[1184];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[672] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[512]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += (ak2 * gx[1312] - 1 * gx[1056]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2208] * prod_xy;
                        v_jx += aj2 * (gx[672] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[576];
                        Ix = gx[576];
                        Iy = gx[1280];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[608] - 2 * gx[544]) * prod_yz;
                        v_kx += ak2 * gx[704] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1408] - 2 * gx[1152]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[704] - xlxk * Ix) - 1 * gx[64]) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[832];
                        Ix = gx[544];
                        Iy = gx[1152];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += ak2 * gx[672] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += (ak2 * gx[2336] - 1 * gx[2080]) * prod_xy;
                        v_jx += aj2 * (gx[576] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[672] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2240] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1088];
                        Ix = gx[512];
                        Iy = gx[1056];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += (ak2 * gx[2464] - 2 * gx[2208]) * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[640] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2464] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1344];
                        Ix = gx[192];
                        Iy = gx[1664];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += (ak2 * gx[320] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[1792] - 1 * gx[1536]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1696] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1792] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1600];
                        Ix = gx[160];
                        Iy = gx[1536];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += (ak2 * gx[288] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += (ak2 * gx[2336] - 1 * gx[2080]) * prod_xy;
                        v_jx += aj2 * (gx[192] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1664] - ylyk * Iy) - 1 * gx[1024]) * prod_xz;
                        v_jz += aj2 * (gx[2240] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1856];
                        Ix = gx[0];
                        Iy = gx[1824];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xz;
                        v_ky += (ak2 * gx[1952] - 2 * gx[1696]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2208] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1856] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1952] - ylyk * Iy) - 1 * gx[1312]) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2112];
                        Ix = gx[64];
                        Iy = gx[1536];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2432] - 2 * gx[2176]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1664] - ylyk * Iy) - 1 * gx[1024]) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2368];
                        Ix = gx[288];
                        Iy = gx[1024];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[416] - 2 * gx[160]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2624] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2720] - zlzk * Iz) - 1 * gx[2080]) * prod_xy;
                        dd = dd_cache[2624];
                        Ix = gx[128];
                        Iy = gx[1184];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += (ak2 * gx[1312] - 1 * gx[1056]) * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2624] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2720] - zlzk * Iz) - 1 * gx[2080]) * prod_xy;
                        dd = dd_cache[2880];
                        Ix = gx[64];
                        Iy = gx[1280];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1408] - 2 * gx[1152]) * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2688] - zlzk * Iz) - 1 * gx[2048]) * prod_xy;
                        dd = dd_cache[3136];
                        Ix = gx[32];
                        Iy = gx[1152];
                        Iz = gx[2720];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xy;
                        v_kz += (ak2 * gx[2848] - 1 * gx[2592]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2752] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2848] - zlzk * Iz) - 1 * gx[2208]) * prod_xy;
                        dd = dd_cache[3392];
                        Ix = gx[0];
                        Iy = gx[1056];
                        Iz = gx[2848];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += (ai2 * gx[2880] - 1 * gx[2816]) * prod_xy;
                        v_kz += (ak2 * gx[2976] - 2 * gx[2720]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2880] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2976] - zlzk * Iz) - 1 * gx[2336]) * prod_xy;
                        break;
                    case 3:
                        dd = dd_cache[96];
                        Ix = gx[768];
                        Iy = gx[1088];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += (ak2 * gx[896] - 2 * gx[640]) * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += ak2 * gx[1216] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[896] - xlxk * Ix) - 1 * gx[256]) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1216] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[352];
                        Ix = gx[640];
                        Iy = gx[1152];
                        Iz = gx[2112];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[672] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[512]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2144] - 2 * gx[2080]) * prod_xy;
                        v_kz += ak2 * gx[2240] * prod_xy;
                        v_jx += aj2 * (gx[672] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2144] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2240] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[608];
                        Ix = gx[544];
                        Iy = gx[1312];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += ak2 * gx[672] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1440] - 2 * gx[1184]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[576] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[672] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[864];
                        Ix = gx[512];
                        Iy = gx[1216];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += (ak2 * gx[1344] - 1 * gx[1088]) * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += (ak2 * gx[2304] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[640] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1248] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2208] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1120];
                        Ix = gx[512];
                        Iy = gx[1024];
                        Iz = gx[2368];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xy;
                        v_kz += (ak2 * gx[2496] - 2 * gx[2240]) * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[640] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2400] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1376];
                        Ix = gx[160];
                        Iy = gx[1696];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += (ak2 * gx[288] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += (ak2 * gx[1824] - 1 * gx[1568]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[192] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1728] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1824] - ylyk * Iy) - 1 * gx[1184]) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1632];
                        Ix = gx[128];
                        Iy = gx[1600];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += ak2 * gx[1728] * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += (ak2 * gx[2304] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1728] - ylyk * Iy) - 1 * gx[1088]) * prod_xz;
                        v_jz += aj2 * (gx[2208] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1888];
                        Ix = gx[0];
                        Iy = gx[1792];
                        Iz = gx[2112];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 2 * gx[1664]) * prod_xz;
                        v_iz += (ai2 * gx[2144] - 2 * gx[2080]) * prod_xy;
                        v_kz += ak2 * gx[2240] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1920] - ylyk * Iy) - 1 * gx[1280]) * prod_xz;
                        v_jz += aj2 * (gx[2144] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2240] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2144];
                        Ix = gx[32];
                        Iy = gx[1568];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2432] - 2 * gx[2176]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1696] - ylyk * Iy) - 1 * gx[1056]) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2400];
                        Ix = gx[256];
                        Iy = gx[1088];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[384] - 2 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += ak2 * gx[1216] * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1216] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2688] - zlzk * Iz) - 1 * gx[2048]) * prod_xy;
                        dd = dd_cache[2656];
                        Ix = gx[128];
                        Iy = gx[1152];
                        Iz = gx[2624];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2656] - 2 * gx[2592]) * prod_xy;
                        v_kz += ak2 * gx[2752] * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2656] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2752] - zlzk * Iz) - 1 * gx[2112]) * prod_xy;
                        dd = dd_cache[2912];
                        Ix = gx[32];
                        Iy = gx[1312];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1440] - 2 * gx[1184]) * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2688] - zlzk * Iz) - 1 * gx[2048]) * prod_xy;
                        dd = dd_cache[3168];
                        Ix = gx[0];
                        Iy = gx[1216];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += (ak2 * gx[1344] - 1 * gx[1088]) * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[2816] - 1 * gx[2560]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1248] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2816] - zlzk * Iz) - 1 * gx[2176]) * prod_xy;
                        dd = dd_cache[3424];
                        Ix = gx[0];
                        Iy = gx[1024];
                        Iz = gx[2880];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[2912] - 2 * gx[2848]) * prod_xy;
                        v_kz += (ak2 * gx[3008] - 2 * gx[2752]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2912] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[3008] - zlzk * Iz) - 1 * gx[2368]) * prod_xy;
                        break;
                    case 4:
                        dd = dd_cache[128];
                        Ix = gx[768];
                        Iy = gx[1056];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += (ak2 * gx[896] - 2 * gx[640]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2208] * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[896] - xlxk * Ix) - 1 * gx[256]) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[384];
                        Ix = gx[704];
                        Iy = gx[1024];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[736] - 2 * gx[672]) * prod_yz;
                        v_kx += (ak2 * gx[832] - 1 * gx[576]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += (ak2 * gx[2304] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[736] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[832] - xlxk * Ix) - 1 * gx[192]) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2208] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[640];
                        Ix = gx[544];
                        Iy = gx[1280];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += ak2 * gx[672] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1408] - 2 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2208] * prod_xy;
                        v_jx += aj2 * (gx[576] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[672] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[896];
                        Ix = gx[512];
                        Iy = gx[1184];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += (ak2 * gx[1312] - 1 * gx[1056]) * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += (ak2 * gx[2336] - 1 * gx[2080]) * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[640] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2240] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1152];
                        Ix = gx[320];
                        Iy = gx[1536];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[448] - 2 * gx[192]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[352] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1664] - ylyk * Iy) - 1 * gx[1024]) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1408];
                        Ix = gx[160];
                        Iy = gx[1664];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += (ak2 * gx[288] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[1792] - 1 * gx[1536]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2208] * prod_xy;
                        v_jx += aj2 * (gx[192] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1696] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1792] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1664];
                        Ix = gx[128];
                        Iy = gx[1568];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += (ak2 * gx[2336] - 1 * gx[2080]) * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1696] - ylyk * Iy) - 1 * gx[1056]) * prod_xz;
                        v_jz += aj2 * (gx[2240] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1920];
                        Ix = gx[64];
                        Iy = gx[1664];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[1792] - 1 * gx[1536]) * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += (ak2 * gx[2304] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1696] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1792] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += aj2 * (gx[2208] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2176];
                        Ix = gx[32];
                        Iy = gx[1536];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += (ak2 * gx[2464] - 2 * gx[2208]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1664] - ylyk * Iy) - 1 * gx[1024]) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2464] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2432];
                        Ix = gx[256];
                        Iy = gx[1056];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[384] - 2 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2624] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2720] - zlzk * Iz) - 1 * gx[2080]) * prod_xy;
                        dd = dd_cache[2688];
                        Ix = gx[192];
                        Iy = gx[1024];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += (ak2 * gx[320] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[2816] - 1 * gx[2560]) * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2816] - zlzk * Iz) - 1 * gx[2176]) * prod_xy;
                        dd = dd_cache[2944];
                        Ix = gx[32];
                        Iy = gx[1280];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1408] - 2 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2624] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2720] - zlzk * Iz) - 1 * gx[2080]) * prod_xy;
                        dd = dd_cache[3200];
                        Ix = gx[0];
                        Iy = gx[1184];
                        Iz = gx[2720];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += (ak2 * gx[1312] - 1 * gx[1056]) * prod_xz;
                        v_iz += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xy;
                        v_kz += (ak2 * gx[2848] - 1 * gx[2592]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2752] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2848] - zlzk * Iz) - 1 * gx[2208]) * prod_xy;
                        break;
                    case 5:
                        dd = dd_cache[160];
                        Ix = gx[768];
                        Iy = gx[1024];
                        Iz = gx[2112];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += (ak2 * gx[896] - 2 * gx[640]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[2144] - 2 * gx[2080]) * prod_xy;
                        v_kz += ak2 * gx[2240] * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[896] - xlxk * Ix) - 1 * gx[256]) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2144] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2240] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[416];
                        Ix = gx[672];
                        Iy = gx[1056];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[704] - 1 * gx[640]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 1 * gx[544]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += (ak2 * gx[2304] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[704] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[800] - xlxk * Ix) - 1 * gx[160]) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2208] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[672];
                        Ix = gx[512];
                        Iy = gx[1344];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += (ai2 * gx[1376] - 2 * gx[1312]) * prod_xz;
                        v_ky += (ak2 * gx[1472] - 2 * gx[1216]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[640] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1472] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[928];
                        Ix = gx[512];
                        Iy = gx[1152];
                        Iz = gx[2240];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2272] - 2 * gx[2208]) * prod_xy;
                        v_kz += (ak2 * gx[2368] - 1 * gx[2112]) * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[640] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2272] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2368] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1184];
                        Ix = gx[288];
                        Iy = gx[1568];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[416] - 2 * gx[160]) * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1696] - ylyk * Iy) - 1 * gx[1056]) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1440];
                        Ix = gx[128];
                        Iy = gx[1728];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1760] - 2 * gx[1696]) * prod_xz;
                        v_ky += (ak2 * gx[1856] - 1 * gx[1600]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1760] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1856] - ylyk * Iy) - 1 * gx[1216]) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1696];
                        Ix = gx[128];
                        Iy = gx[1536];
                        Iz = gx[2240];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2272] - 2 * gx[2208]) * prod_xy;
                        v_kz += (ak2 * gx[2368] - 1 * gx[2112]) * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1664] - ylyk * Iy) - 1 * gx[1024]) * prod_xz;
                        v_jz += aj2 * (gx[2272] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2368] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1952];
                        Ix = gx[32];
                        Iy = gx[1696];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += (ak2 * gx[1824] - 1 * gx[1568]) * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += (ak2 * gx[2304] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1728] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1824] - ylyk * Iy) - 1 * gx[1184]) * prod_xz;
                        v_jz += aj2 * (gx[2208] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2208];
                        Ix = gx[0];
                        Iy = gx[1600];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += ak2 * gx[1728] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2432] - 2 * gx[2176]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1728] - ylyk * Iy) - 1 * gx[1088]) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2464];
                        Ix = gx[256];
                        Iy = gx[1024];
                        Iz = gx[2624];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[384] - 2 * gx[128]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[2656] - 2 * gx[2592]) * prod_xy;
                        v_kz += ak2 * gx[2752] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2656] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2752] - zlzk * Iz) - 1 * gx[2112]) * prod_xy;
                        dd = dd_cache[2720];
                        Ix = gx[160];
                        Iy = gx[1056];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += (ak2 * gx[288] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[2816] - 1 * gx[2560]) * prod_xy;
                        v_jx += aj2 * (gx[192] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2816] - zlzk * Iz) - 1 * gx[2176]) * prod_xy;
                        dd = dd_cache[2976];
                        Ix = gx[0];
                        Iy = gx[1344];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1376] - 2 * gx[1312]) * prod_xz;
                        v_ky += (ak2 * gx[1472] - 2 * gx[1216]) * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1472] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2688] - zlzk * Iz) - 1 * gx[2048]) * prod_xy;
                        dd = dd_cache[3232];
                        Ix = gx[0];
                        Iy = gx[1152];
                        Iz = gx[2752];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2784] - 2 * gx[2720]) * prod_xy;
                        v_kz += (ak2 * gx[2880] - 1 * gx[2624]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2784] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2880] - zlzk * Iz) - 1 * gx[2240]) * prod_xy;
                        break;
                    case 6:
                        dd = dd_cache[192];
                        Ix = gx[704];
                        Iy = gx[1152];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[736] - 2 * gx[672]) * prod_yz;
                        v_kx += (ak2 * gx[832] - 1 * gx[576]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[1024]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[736] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[832] - xlxk * Ix) - 1 * gx[192]) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[448];
                        Ix = gx[672];
                        Iy = gx[1024];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[704] - 1 * gx[640]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 1 * gx[544]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += (ak2 * gx[2336] - 1 * gx[2080]) * prod_xy;
                        v_jx += aj2 * (gx[704] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[800] - xlxk * Ix) - 1 * gx[160]) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2240] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[704];
                        Ix = gx[512];
                        Iy = gx[1312];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1440] - 2 * gx[1184]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2208] * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[640] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[960];
                        Ix = gx[576];
                        Iy = gx[1024];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[608] - 2 * gx[544]) * prod_yz;
                        v_kx += ak2 * gx[704] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2432] - 2 * gx[2176]) * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[704] - xlxk * Ix) - 1 * gx[64]) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1216];
                        Ix = gx[288];
                        Iy = gx[1536];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[416] - 2 * gx[160]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2208] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1664] - ylyk * Iy) - 1 * gx[1024]) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1472];
                        Ix = gx[128];
                        Iy = gx[1696];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += (ak2 * gx[1824] - 1 * gx[1568]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2208] * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1728] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1824] - ylyk * Iy) - 1 * gx[1184]) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1728];
                        Ix = gx[64];
                        Iy = gx[1792];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 2 * gx[1664]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1920] - ylyk * Iy) - 1 * gx[1280]) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1984];
                        Ix = gx[32];
                        Iy = gx[1664];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[1792] - 1 * gx[1536]) * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += (ak2 * gx[2336] - 1 * gx[2080]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1696] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1792] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += aj2 * (gx[2240] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2240];
                        Ix = gx[0];
                        Iy = gx[1568];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += (ak2 * gx[2464] - 2 * gx[2208]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1696] - ylyk * Iy) - 1 * gx[1056]) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2464] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2496];
                        Ix = gx[192];
                        Iy = gx[1152];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += (ak2 * gx[320] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[1024]) * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[224] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2688] - zlzk * Iz) - 1 * gx[2048]) * prod_xy;
                        dd = dd_cache[2752];
                        Ix = gx[160];
                        Iy = gx[1024];
                        Iz = gx[2720];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += (ak2 * gx[288] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xy;
                        v_kz += (ak2 * gx[2848] - 1 * gx[2592]) * prod_xy;
                        v_jx += aj2 * (gx[192] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2752] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2848] - zlzk * Iz) - 1 * gx[2208]) * prod_xy;
                        dd = dd_cache[3008];
                        Ix = gx[0];
                        Iy = gx[1312];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1440] - 2 * gx[1184]) * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2624] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2720] - zlzk * Iz) - 1 * gx[2080]) * prod_xy;
                        dd = dd_cache[3264];
                        Ix = gx[64];
                        Iy = gx[1024];
                        Iz = gx[2816];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[192] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += ai2 * gx[2848] * prod_xy;
                        v_kz += (ak2 * gx[2944] - 2 * gx[2688]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[192] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2848] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2944] - zlzk * Iz) - 1 * gx[2304]) * prod_xy;
                        break;
                    case 7:
                        dd = dd_cache[224];
                        Ix = gx[672];
                        Iy = gx[1184];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[704] - 1 * gx[640]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 1 * gx[544]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += (ak2 * gx[1312] - 1 * gx[1056]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[704] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[800] - xlxk * Ix) - 1 * gx[160]) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[480];
                        Ix = gx[640];
                        Iy = gx[1088];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[672] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[512]) * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += ak2 * gx[1216] * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += (ak2 * gx[2304] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[672] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[768] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1216] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2208] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[736];
                        Ix = gx[512];
                        Iy = gx[1280];
                        Iz = gx[2112];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1408] - 2 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2144] - 2 * gx[2080]) * prod_xy;
                        v_kz += ak2 * gx[2240] * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[640] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2144] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2240] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[992];
                        Ix = gx[544];
                        Iy = gx[1056];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += ak2 * gx[672] * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2432] - 2 * gx[2176]) * prod_xy;
                        v_jx += aj2 * (gx[576] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[672] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1248];
                        Ix = gx[256];
                        Iy = gx[1600];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[384] - 2 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += ak2 * gx[1728] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1728] - ylyk * Iy) - 1 * gx[1088]) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1504];
                        Ix = gx[128];
                        Iy = gx[1664];
                        Iz = gx[2112];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[1792] - 1 * gx[1536]) * prod_xz;
                        v_iz += (ai2 * gx[2144] - 2 * gx[2080]) * prod_xy;
                        v_kz += ak2 * gx[2240] * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1696] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1792] - ylyk * Iy) - 1 * gx[1152]) * prod_xz;
                        v_jz += aj2 * (gx[2144] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2240] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1760];
                        Ix = gx[32];
                        Iy = gx[1824];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xz;
                        v_ky += (ak2 * gx[1952] - 2 * gx[1696]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2176] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1856] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1952] - ylyk * Iy) - 1 * gx[1312]) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2016];
                        Ix = gx[0];
                        Iy = gx[1728];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += (ai2 * gx[1760] - 2 * gx[1696]) * prod_xz;
                        v_ky += (ak2 * gx[1856] - 1 * gx[1600]) * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += (ak2 * gx[2304] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1760] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1856] - ylyk * Iy) - 1 * gx[1216]) * prod_xz;
                        v_jz += aj2 * (gx[2208] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2272];
                        Ix = gx[0];
                        Iy = gx[1536];
                        Iz = gx[2368];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xy;
                        v_kz += (ak2 * gx[2496] - 2 * gx[2240]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[1664] - ylyk * Iy) - 1 * gx[1024]) * prod_xz;
                        v_jz += aj2 * (gx[2400] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2528];
                        Ix = gx[160];
                        Iy = gx[1184];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += (ak2 * gx[288] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += (ak2 * gx[1312] - 1 * gx[1056]) * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[192] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2688] - zlzk * Iz) - 1 * gx[2048]) * prod_xy;
                        dd = dd_cache[2784];
                        Ix = gx[128];
                        Iy = gx[1088];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += (ak2 * gx[256] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += ak2 * gx[1216] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[2816] - 1 * gx[2560]) * prod_xy;
                        v_jx += aj2 * (gx[160] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1216] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2816] - zlzk * Iz) - 1 * gx[2176]) * prod_xy;
                        dd = dd_cache[3040];
                        Ix = gx[0];
                        Iy = gx[1280];
                        Iz = gx[2624];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[128] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1408] - 2 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2656] - 2 * gx[2592]) * prod_xy;
                        v_kz += ak2 * gx[2752] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[128] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2656] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2752] - zlzk * Iz) - 1 * gx[2112]) * prod_xy;
                        dd = dd_cache[3296];
                        Ix = gx[32];
                        Iy = gx[1056];
                        Iz = gx[2816];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[160] * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += ai2 * gx[2848] * prod_xy;
                        v_kz += (ak2 * gx[2944] - 2 * gx[2688]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[160] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2848] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[2944] - zlzk * Iz) - 1 * gx[2304]) * prod_xy;
                        break;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_2100(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 256;
    constexpr int gout_stride = 1;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rw = shared_memory + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        double fxi, fyi, fzi;
        double fxj, fyj, fzj;
        double fxk, fyk, fzk;
        double fxl, fyl, fzl;
        double dd_cache0 = 0.;
        double dd_cache1 = 0.;
        double dd_cache2 = 0.;
        double dd_cache3 = 0.;
        double dd_cache4 = 0.;
        double dd_cache5 = 0.;
        double dd_cache6 = 0.;
        double dd_cache7 = 0.;
        double dd_cache8 = 0.;
        double dd_cache9 = 0.;
        double dd_cache10 = 0.;
        double dd_cache11 = 0.;
        double dd_cache12 = 0.;
        double dd_cache13 = 0.;
        double dd_cache14 = 0.;
        double dd_cache15 = 0.;
        double dd_cache16 = 0.;
        double dd_cache17 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+0)]);
                dd_cache6 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache7 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache8 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache9 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+0)]);
                dd_cache10 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+0)]);
                dd_cache11 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+0)]);
                dd_cache12 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache13 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache14 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache15 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+0)]);
                dd_cache16 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+0)]);
                dd_cache17 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache1 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache2 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache3 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+3)];
                dd_cache4 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+4)];
                dd_cache5 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+5)];
                dd_cache6 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+0)];
                dd_cache7 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+1)];
                dd_cache8 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+2)];
                dd_cache9 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+3)];
                dd_cache10 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+4)];
                dd_cache11 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+5)];
                dd_cache12 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+0)];
                dd_cache13 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+1)];
                dd_cache14 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+2)];
                dd_cache15 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+3)];
                dd_cache16 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+4)];
                dd_cache17 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+5)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+0)]);
                dd_cache6 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache7 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache8 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache9 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+0)]);
                dd_cache10 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+0)]);
                dd_cache11 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+0)]);
                dd_cache12 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache13 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache14 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache15 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+0)]);
                dd_cache16 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+0)]);
                dd_cache17 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache1 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache2 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache3 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+3)]+dmb[(j0+0)*nao+(i0+3)]);
                dd_cache4 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+4)]+dmb[(j0+0)*nao+(i0+4)]);
                dd_cache5 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+5)]+dmb[(j0+0)*nao+(i0+5)]);
                dd_cache6 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+0)]+dmb[(j0+1)*nao+(i0+0)]);
                dd_cache7 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+1)]+dmb[(j0+1)*nao+(i0+1)]);
                dd_cache8 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+2)]+dmb[(j0+1)*nao+(i0+2)]);
                dd_cache9 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+3)]+dmb[(j0+1)*nao+(i0+3)]);
                dd_cache10 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+4)]+dmb[(j0+1)*nao+(i0+4)]);
                dd_cache11 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+5)]+dmb[(j0+1)*nao+(i0+5)]);
                dd_cache12 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+0)]+dmb[(j0+2)*nao+(i0+0)]);
                dd_cache13 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+1)]+dmb[(j0+2)*nao+(i0+1)]);
                dd_cache14 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+2)]+dmb[(j0+2)*nao+(i0+2)]);
                dd_cache15 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+3)]+dmb[(j0+2)*nao+(i0+3)]);
                dd_cache16 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+4)]+dmb[(j0+2)*nao+(i0+4)]);
                dd_cache17 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+5)]+dmb[(j0+2)*nao+(i0+5)]);
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = ck[kp] * cl[lp] * Kcd;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[ijp];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = rjri[0] * aj_aij;
                double ypa = rjri[1] * aj_aij;
                double zpa = rjri[2] * aj_aij;
                double xij = ri[0] + xpa;
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xqc = xlxk * al_akl;
                double yqc = ylyk * al_akl;
                double zqc = zlzk * al_akl;
                double xkl = rk[0] + xqc;
                double ykl = rk[1] + yqc;
                double zkl = rk[2] + zqc;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double rr = xpq*xpq + ypq*ypq + zpq*zpq;
                double theta = aij * akl / (aij + akl);
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < nroots; ++irys) {
                    double wt = rw[(2*irys+1)*256] * fac;
                    double rt = rw[ 2*irys   *256];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    double trr_30x = c0x * trr_20x + 2*b10 * trr_10x;
                    double hrr_2100x = trr_30x - xjxi * trr_20x;
                    dd = dd_cache0;
                    Ix = hrr_2100x;
                    Iy = 1;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    double trr_40x = c0x * trr_30x + 3*b10 * trr_20x;
                    double hrr_3100x = trr_40x - xjxi * trr_30x;
                    fxi = ai2 * hrr_3100x;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    fxi -= 2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_2200x = hrr_3100x - xjxi * hrr_2100x;
                    fxj = aj2 * hrr_2200x;
                    fxj -= 1 * trr_20x;
                    v_jx += fxj * prod_yz;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double b00 = .5 * rt_aa;
                    double trr_31x = cpx * trr_30x + 3*b00 * trr_20x;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    double hrr_2110x = trr_31x - xjxi * trr_21x;
                    fxk = ak2 * hrr_2110x;
                    v_kx += fxk * prod_yz;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_3001x = trr_31x - xlxk * trr_30x;
                    double hrr_2001x = trr_21x - xlxk * trr_20x;
                    double hrr_2101x = hrr_3001x - xjxi * hrr_2001x;
                    fxl = al2 * hrr_2101x;
                    v_lx += fxl * prod_yz;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache1;
                    Ix = hrr_1100x;
                    Iy = trr_10y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_2100x;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    fxi -= 1 * hrr_0100x;
                    v_ix += fxi * prod_yz;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1200x = hrr_2100x - xjxi * hrr_1100x;
                    fxj = aj2 * hrr_1200x;
                    fxj -= 1 * trr_10x;
                    v_jx += fxj * prod_yz;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    double hrr_1110x = trr_21x - xjxi * trr_11x;
                    fxk = ak2 * hrr_1110x;
                    v_kx += fxk * prod_yz;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    double hrr_1101x = hrr_2001x - xjxi * hrr_1001x;
                    fxl = al2 * hrr_1101x;
                    v_lx += fxl * prod_yz;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache2;
                    Ix = hrr_1100x;
                    Iy = 1;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_2100x;
                    fxi -= 1 * hrr_0100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1200x;
                    fxj -= 1 * trr_10x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_1110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache3;
                    Ix = hrr_0100x;
                    Iy = trr_20y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    double trr_30y = c0y * trr_20y + 2*b10 * trr_10y;
                    fyi = ai2 * trr_30y;
                    fyi -= 2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0200x = hrr_1100x - xjxi * hrr_0100x;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    double hrr_2100y = trr_30y - yjyi * trr_20y;
                    fyj = aj2 * hrr_2100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_01x = cpx * 1;
                    double hrr_0110x = trr_11x - xjxi * trr_01x;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    fyk = ak2 * trr_21y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    double hrr_0101x = hrr_1001x - xjxi * hrr_0001x;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    double hrr_2001y = trr_21y - ylyk * trr_20y;
                    fyl = al2 * hrr_2001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache4;
                    Ix = hrr_0100x;
                    Iy = trr_10y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache5;
                    Ix = hrr_0100x;
                    Iy = 1;
                    Iz = trr_20z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_30z = c0z * trr_20z + 2*b10 * trr_10z;
                    fzi = ai2 * trr_30z;
                    fzi -= 2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_2100z = trr_30z - zjzi * trr_20z;
                    fzj = aj2 * hrr_2100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    fzk = ak2 * trr_21z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_2001z = trr_21z - zlzk * trr_20z;
                    fzl = al2 * hrr_2001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache6;
                    Ix = trr_20x;
                    Iy = hrr_0100y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_30x;
                    fxi -= 2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_2100x;
                    v_jx += fxj * prod_yz;
                    double hrr_0200y = hrr_1100y - yjyi * hrr_0100y;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_21x;
                    v_kx += fxk * prod_yz;
                    double hrr_0110y = trr_11y - yjyi * trr_01y;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_2001x;
                    v_lx += fxl * prod_yz;
                    double hrr_0101y = hrr_1001y - yjyi * hrr_0001y;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache7;
                    Ix = trr_10x;
                    Iy = hrr_1100y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_2100y;
                    fyi -= 1 * hrr_0100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    double hrr_1200y = hrr_2100y - yjyi * hrr_1100y;
                    fyj = aj2 * hrr_1200y;
                    fyj -= 1 * trr_10y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    double hrr_1110y = trr_21y - yjyi * trr_11y;
                    fyk = ak2 * hrr_1110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    double hrr_1101y = hrr_2001y - yjyi * hrr_1001y;
                    fyl = al2 * hrr_1101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache8;
                    Ix = trr_10x;
                    Iy = hrr_0100y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache9;
                    Ix = 1;
                    Iy = hrr_2100y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    double trr_40y = c0y * trr_30y + 3*b10 * trr_20y;
                    double hrr_3100y = trr_40y - yjyi * trr_30y;
                    fyi = ai2 * hrr_3100y;
                    fyi -= 2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    double hrr_2200y = hrr_3100y - yjyi * hrr_2100y;
                    fyj = aj2 * hrr_2200y;
                    fyj -= 1 * trr_20y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    double trr_31y = cpy * trr_30y + 3*b00 * trr_20y;
                    double hrr_2110y = trr_31y - yjyi * trr_21y;
                    fyk = ak2 * hrr_2110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    double hrr_3001y = trr_31y - ylyk * trr_30y;
                    double hrr_2101y = hrr_3001y - yjyi * hrr_2001y;
                    fyl = al2 * hrr_2101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache10;
                    Ix = 1;
                    Iy = hrr_1100y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_2100y;
                    fyi -= 1 * hrr_0100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1200y;
                    fyj -= 1 * trr_10y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_1110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache11;
                    Ix = 1;
                    Iy = hrr_0100y;
                    Iz = trr_20z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_30z;
                    fzi -= 2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_2100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_21z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_2001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache12;
                    Ix = trr_20x;
                    Iy = 1;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_30x;
                    fxi -= 2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_2100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0200z = hrr_1100z - zjzi * hrr_0100z;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_21x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double hrr_0110z = trr_11z - zjzi * trr_01z;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_2001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0101z = hrr_1001z - zjzi * hrr_0001z;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache13;
                    Ix = trr_10x;
                    Iy = trr_10y;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache14;
                    Ix = trr_10x;
                    Iy = 1;
                    Iz = hrr_1100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_2100z;
                    fzi -= 1 * hrr_0100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1200z = hrr_2100z - zjzi * hrr_1100z;
                    fzj = aj2 * hrr_1200z;
                    fzj -= 1 * trr_10z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double hrr_1110z = trr_21z - zjzi * trr_11z;
                    fzk = ak2 * hrr_1110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1101z = hrr_2001z - zjzi * hrr_1001z;
                    fzl = al2 * hrr_1101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache15;
                    Ix = 1;
                    Iy = trr_20y;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_30y;
                    fyi -= 2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_2100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_21y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_2001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache16;
                    Ix = 1;
                    Iy = trr_10y;
                    Iz = hrr_1100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_2100z;
                    fzi -= 1 * hrr_0100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1200z;
                    fzj -= 1 * trr_10z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_1110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache17;
                    Ix = 1;
                    Iy = 1;
                    Iz = hrr_2100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_40z = c0z * trr_30z + 3*b10 * trr_20z;
                    double hrr_3100z = trr_40z - zjzi * trr_30z;
                    fzi = ai2 * hrr_3100z;
                    fzi -= 2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_2200z = hrr_3100z - zjzi * hrr_2100z;
                    fzj = aj2 * hrr_2200z;
                    fzj -= 1 * trr_20z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_31z = cpz * trr_30z + 3*b00 * trr_20z;
                    double hrr_2110z = trr_31z - zjzi * trr_21z;
                    fzk = ak2 * hrr_2110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_3001z = trr_31z - zlzk * trr_30z;
                    double hrr_2101z = hrr_3001z - zjzi * hrr_2001z;
                    fzl = al2 * hrr_2101z;
                    v_lz += fzl * prod_xy;
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_2110(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 32;
    constexpr int gout_stride = 8;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    double *dd_cache = dd_pool + blockIdx.x * 1728 + sq_id;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rlrk = shared_memory + sq_id;
    double *Rpq = shared_memory + nsq_per_block * 3 + sq_id;
    double *gx = shared_memory + nsq_per_block * 6 + sq_id;
    double *rw = shared_memory + nsq_per_block * 78 + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (78+nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        if (gout_id == 0) {
            rlrk[0] = xlxk;
            rlrk[32] = ylyk;
            rlrk[64] = zlzk;
        }
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        int do_j = jk.j_factor != 0.;
        int do_k = jk.k_factor != 0.;
        if (jk.n_dm == 1) {
            for (int n = gout_id; n < 54; n+=8) {
                int kl = n / 18;
                int ij = n % 18;
                int i = ij % 6;
                int j = ij / 6;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm[_jk] * dm[_il] + dm[_jl] * dm[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * dm[_ji] * dm[_lk];
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        } else {
            double *dmb = dm + nao * nao;
            for (int n = gout_id; n < 54; n+=8) {
                int kl = n / 18;
                int ij = n % 18;
                int i = ij % 6;
                int j = ij / 6;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm [_jk] * dm [_il] + dm [_jl] * dm [_ik] +
                                         dmb[_jk] * dmb[_il] + dmb[_jl] * dmb[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * (dm[_ji] + dmb[_ji]) * (dm[_lk] + dmb[_lk]);
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            __syncthreads();
            if (gout_id == 0) {
                double xlxk = rlrk[0];
                double ylyk = rlrk[32];
                double zlzk = rlrk[64];
                double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
                double ckcl = ck[kp] * cl[lp] * Kcd;
                gx[0] = ckcl;
            }
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double xij = ri[0] + (rjri[0]) * aj_aij;
                double yij = ri[1] + (rjri[1]) * aj_aij;
                double zij = ri[2] + (rjri[2]) * aj_aij;
                double xkl = rk[0] + rlrk[0] * al_akl;
                double ykl = rk[1] + rlrk[32] * al_akl;
                double zkl = rk[2] + rlrk[64] * al_akl;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                __syncthreads();
                if (gout_id == 0) {
                    Rpq[0] = xpq;
                    Rpq[32] = ypq;
                    Rpq[64] = zpq;
                    double cicj = cicj_cache[ijp];
                    gx[768] = cicj / (aij*akl*sqrt(aij+akl));
                }
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                double s0, s1, s2;
                for (int irys = 0; irys < nroots; ++irys) {
                    __syncthreads();
                    double rt = rw[irys*64];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double rt_akl = rt_aa * aij;
                    double b00 = .5 * rt_aa;
                    double b10 = .5/aij * (1 - rt_aij);
                    double b01 = .5/akl * (1 - rt_akl);
                    for (int n = gout_id; n < 3; n += 8) {
                        if (n == 2) {
                            gx[1536] = rw[irys*64+32];
                        }
                        double *_gx = gx + n * 768;
                        double xjxi = rjri[n];
                        double Rpa = xjxi * aj_aij;
                        double c0x = Rpa - rt_aij * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = c0x * s0;
                        _gx[32] = s1;
                        s2 = c0x * s1 + 1 * b10 * s0;
                        _gx[64] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 2 * b10 * s0;
                        _gx[96] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 3 * b10 * s0;
                        _gx[128] = s2;
                        double xlxk = rlrk[n*32];
                        double Rqc = xlxk * al_akl;
                        double cpx = Rqc + rt_akl * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = cpx * s0;
                        _gx[256] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        _gx[512] = s2;
                        s0 = _gx[32];
                        s1 = cpx * s0;
                        s1 += 1 * b00 * _gx[0];
                        _gx[288] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 1 * b00 * _gx[256];
                        _gx[544] = s2;
                        s0 = _gx[64];
                        s1 = cpx * s0;
                        s1 += 2 * b00 * _gx[32];
                        _gx[320] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 2 * b00 * _gx[288];
                        _gx[576] = s2;
                        s0 = _gx[96];
                        s1 = cpx * s0;
                        s1 += 3 * b00 * _gx[64];
                        _gx[352] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 3 * b00 * _gx[320];
                        _gx[608] = s2;
                        s0 = _gx[128];
                        s1 = cpx * s0;
                        s1 += 4 * b00 * _gx[96];
                        _gx[384] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 4 * b00 * _gx[352];
                        _gx[640] = s2;
                        s1 = _gx[128];
                        s0 = _gx[96];
                        _gx[224] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[64];
                        _gx[192] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[160] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[128] = s1 - xjxi * s0;
                        s1 = _gx[384];
                        s0 = _gx[352];
                        _gx[480] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[320];
                        _gx[448] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[288];
                        _gx[416] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[256];
                        _gx[384] = s1 - xjxi * s0;
                        s1 = _gx[640];
                        s0 = _gx[608];
                        _gx[736] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[576];
                        _gx[704] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[544];
                        _gx[672] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[512];
                        _gx[640] = s1 - xjxi * s0;
                    }
                    __syncthreads();
                    double xjxi = rjri[0];
                    double yjyi = rjri[1];
                    double zjzi = rjri[2];
                    double xlxk = rlrk[0];
                    double ylyk = rlrk[32];
                    double zlzk = rlrk[64];
                    switch (gout_id) {
                    case 0:
                        dd = dd_cache[0];
                        Ix = gx[448];
                        Iy = gx[768];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[480] - 2 * gx[416]) * prod_yz;
                        v_kx += (ak2 * gx[704] - 1 * gx[192]) * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[1024] * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1792] * prod_xy;
                        v_jx += (aj2 * (gx[480] - xjxi * Ix) - 1 * gx[320]) * prod_yz;
                        v_lx += al2 * (gx[704] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[256];
                        Ix = gx[288];
                        Iy = gx[896];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[928] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1824] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[928] - yjyi * Iy) - 1 * gx[768]) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1824] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[512];
                        Ix = gx[256];
                        Iy = gx[800];
                        Iz = gx[1696];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[1056] * prod_xz;
                        v_iz += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xy;
                        v_kz += ak2 * gx[1952] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1056] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1728] - zjzi * Iz) - 1 * gx[1568]) * prod_xy;
                        v_lz += al2 * (gx[1952] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[768];
                        Ix = gx[64];
                        Iy = gx[1152];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1408] - 1 * gx[896]) * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1792] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1184] - yjyi * Iy) - 1 * gx[1024]) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1024];
                        Ix = gx[32];
                        Iy = gx[1024];
                        Iz = gx[1696];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[768]) * prod_xz;
                        v_iz += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xy;
                        v_kz += ak2 * gx[1952] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1728] - zjzi * Iz) - 1 * gx[1568]) * prod_xy;
                        v_lz += al2 * (gx[1952] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1280];
                        Ix = gx[128];
                        Iy = gx[800];
                        Iz = gx[1824];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[1056] * prod_xz;
                        v_iz += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xy;
                        v_kz += (ak2 * gx[2080] - 1 * gx[1568]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1056] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1856] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2080] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1536];
                        Ix = gx[64];
                        Iy = gx[768];
                        Iz = gx[1920];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[1024] * prod_xz;
                        v_iz += ai2 * gx[1952] * prod_xy;
                        v_kz += (ak2 * gx[2176] - 1 * gx[1664]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1952] - zjzi * Iz) - 1 * gx[1792]) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        break;
                    case 1:
                        dd = dd_cache[32];
                        Ix = gx[416];
                        Iy = gx[800];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[672] - 1 * gx[160]) * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[1056] * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1792] * prod_xy;
                        v_jx += (aj2 * (gx[448] - xjxi * Ix) - 1 * gx[288]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1056] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[288];
                        Ix = gx[256];
                        Iy = gx[960];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[992] - 2 * gx[928]) * prod_xz;
                        v_ky += ak2 * gx[1216] * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1792] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[992] - yjyi * Iy) - 1 * gx[832]) * prod_xz;
                        v_ly += al2 * (gx[1216] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[544];
                        Ix = gx[256];
                        Iy = gx[768];
                        Iz = gx[1728];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[1024] * prod_xz;
                        v_iz += (ai2 * gx[1760] - 2 * gx[1696]) * prod_xy;
                        v_kz += ak2 * gx[1984] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1760] - zjzi * Iz) - 1 * gx[1600]) * prod_xy;
                        v_lz += al2 * (gx[1984] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[800];
                        Ix = gx[32];
                        Iy = gx[1184];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += (ak2 * gx[1440] - 1 * gx[928]) * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1792] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1216] - yjyi * Iy) - 1 * gx[1056]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1056];
                        Ix = gx[0];
                        Iy = gx[1088];
                        Iz = gx[1664];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += (ak2 * gx[1344] - 1 * gx[832]) * prod_xz;
                        v_iz += ai2 * gx[1696] * prod_xy;
                        v_kz += ak2 * gx[1920] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1696] - zjzi * Iz) - 1 * gx[1536]) * prod_xy;
                        v_lz += al2 * (gx[1920] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1312];
                        Ix = gx[128];
                        Iy = gx[768];
                        Iz = gx[1856];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[1024] * prod_xz;
                        v_iz += (ai2 * gx[1888] - 2 * gx[1824]) * prod_xy;
                        v_kz += (ak2 * gx[2112] - 1 * gx[1600]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1888] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2112] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1568];
                        Ix = gx[32];
                        Iy = gx[800];
                        Iz = gx[1920];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[1056] * prod_xz;
                        v_iz += ai2 * gx[1952] * prod_xy;
                        v_kz += (ak2 * gx[2176] - 1 * gx[1664]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1056] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1952] - zjzi * Iz) - 1 * gx[1792]) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        break;
                    case 2:
                        dd = dd_cache[64];
                        Ix = gx[416];
                        Iy = gx[768];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[672] - 1 * gx[160]) * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[1024] * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1824] * prod_xy;
                        v_jx += (aj2 * (gx[448] - xjxi * Ix) - 1 * gx[288]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1824] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[320];
                        Ix = gx[256];
                        Iy = gx[928];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[960] - 1 * gx[896]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1824] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[960] - yjyi * Iy) - 1 * gx[800]) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1824] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[576];
                        Ix = gx[192];
                        Iy = gx[1024];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[768]) * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1792] * prod_xy;
                        v_jx += (aj2 * (gx[224] - xjxi * Ix) - 1 * gx[64]) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[832];
                        Ix = gx[32];
                        Iy = gx[1152];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1408] - 1 * gx[896]) * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1824] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1184] - yjyi * Iy) - 1 * gx[1024]) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1824] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1088];
                        Ix = gx[0];
                        Iy = gx[1056];
                        Iz = gx[1696];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += (ak2 * gx[1312] - 1 * gx[800]) * prod_xz;
                        v_iz += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xy;
                        v_kz += ak2 * gx[1952] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1728] - zjzi * Iz) - 1 * gx[1568]) * prod_xy;
                        v_lz += al2 * (gx[1952] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1344];
                        Ix = gx[64];
                        Iy = gx[896];
                        Iz = gx[1792];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[928] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += ai2 * gx[1824] * prod_xy;
                        v_kz += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[928] - yjyi * Iy) - 1 * gx[768]) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1824] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2048] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1600];
                        Ix = gx[32];
                        Iy = gx[768];
                        Iz = gx[1952];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[1024] * prod_xz;
                        v_iz += (ai2 * gx[1984] - 1 * gx[1920]) * prod_xy;
                        v_kz += (ak2 * gx[2208] - 1 * gx[1696]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1984] - zjzi * Iz) - 1 * gx[1824]) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        break;
                    case 3:
                        dd = dd_cache[96];
                        Ix = gx[384];
                        Iy = gx[832];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[864] - 2 * gx[800]) * prod_xz;
                        v_ky += ak2 * gx[1088] * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1792] * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[864] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1088] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[352];
                        Ix = gx[256];
                        Iy = gx[896];
                        Iz = gx[1600];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[928] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xy;
                        v_kz += ak2 * gx[1856] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[928] - yjyi * Iy) - 1 * gx[768]) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1632] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1856] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[608];
                        Ix = gx[160];
                        Iy = gx[1056];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += (ak2 * gx[1312] - 1 * gx[800]) * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1792] * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[864];
                        Ix = gx[0];
                        Iy = gx[1216];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += (ak2 * gx[1472] - 1 * gx[960]) * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1792] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1248] - yjyi * Iy) - 1 * gx[1088]) * prod_xz;
                        v_ly += al2 * (gx[1472] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1120];
                        Ix = gx[0];
                        Iy = gx[1024];
                        Iz = gx[1728];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[768]) * prod_xz;
                        v_iz += (ai2 * gx[1760] - 2 * gx[1696]) * prod_xy;
                        v_kz += ak2 * gx[1984] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1760] - zjzi * Iz) - 1 * gx[1600]) * prod_xy;
                        v_lz += al2 * (gx[1984] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1376];
                        Ix = gx[32];
                        Iy = gx[928];
                        Iz = gx[1792];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[960] - 1 * gx[896]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += ai2 * gx[1824] * prod_xy;
                        v_kz += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[960] - yjyi * Iy) - 1 * gx[800]) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1824] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2048] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1632];
                        Ix = gx[0];
                        Iy = gx[832];
                        Iz = gx[1920];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[864] - 2 * gx[800]) * prod_xz;
                        v_ky += ak2 * gx[1088] * prod_xz;
                        v_iz += ai2 * gx[1952] * prod_xy;
                        v_kz += (ak2 * gx[2176] - 1 * gx[1664]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[864] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1088] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1952] - zjzi * Iz) - 1 * gx[1792]) * prod_xy;
                        v_lz += al2 * (gx[2176] - zlzk * Iz) * prod_xy;
                        break;
                    case 4:
                        dd = dd_cache[128];
                        Ix = gx[384];
                        Iy = gx[800];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[1056] * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1824] * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1056] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1824] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[384];
                        Ix = gx[320];
                        Iy = gx[768];
                        Iz = gx[1664];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[576] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[1024] * prod_xz;
                        v_iz += ai2 * gx[1696] * prod_xy;
                        v_kz += ak2 * gx[1920] * prod_xy;
                        v_jx += aj2 * (gx[352] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1696] - zjzi * Iz) - 1 * gx[1536]) * prod_xy;
                        v_lz += al2 * (gx[1920] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[640];
                        Ix = gx[160];
                        Iy = gx[1024];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[768]) * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1824] * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1824] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[896];
                        Ix = gx[0];
                        Iy = gx[1184];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += (ak2 * gx[1440] - 1 * gx[928]) * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1824] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1216] - yjyi * Iy) - 1 * gx[1056]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1824] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1152];
                        Ix = gx[192];
                        Iy = gx[768];
                        Iz = gx[1792];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[1024] * prod_xz;
                        v_iz += ai2 * gx[1824] * prod_xy;
                        v_kz += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xy;
                        v_jx += (aj2 * (gx[224] - xjxi * Ix) - 1 * gx[64]) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1824] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2048] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1408];
                        Ix = gx[32];
                        Iy = gx[896];
                        Iz = gx[1824];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[928] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xy;
                        v_kz += (ak2 * gx[2080] - 1 * gx[1568]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[928] - yjyi * Iy) - 1 * gx[768]) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1856] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2080] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1664];
                        Ix = gx[0];
                        Iy = gx[800];
                        Iz = gx[1952];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[1056] * prod_xz;
                        v_iz += (ai2 * gx[1984] - 1 * gx[1920]) * prod_xy;
                        v_kz += (ak2 * gx[2208] - 1 * gx[1696]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1056] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1984] - zjzi * Iz) - 1 * gx[1824]) * prod_xy;
                        v_lz += al2 * (gx[2208] - zlzk * Iz) * prod_xy;
                        break;
                    case 5:
                        dd = dd_cache[160];
                        Ix = gx[384];
                        Iy = gx[768];
                        Iz = gx[1600];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[1024] * prod_xz;
                        v_iz += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xy;
                        v_kz += ak2 * gx[1856] * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1632] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1856] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[416];
                        Ix = gx[288];
                        Iy = gx[800];
                        Iz = gx[1664];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[1056] * prod_xz;
                        v_iz += ai2 * gx[1696] * prod_xy;
                        v_kz += ak2 * gx[1920] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1056] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1696] - zjzi * Iz) - 1 * gx[1536]) * prod_xy;
                        v_lz += al2 * (gx[1920] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[672];
                        Ix = gx[128];
                        Iy = gx[1088];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += (ak2 * gx[1344] - 1 * gx[832]) * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1792] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[928];
                        Ix = gx[0];
                        Iy = gx[1152];
                        Iz = gx[1600];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += (ak2 * gx[1408] - 1 * gx[896]) * prod_xz;
                        v_iz += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xy;
                        v_kz += ak2 * gx[1856] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1184] - yjyi * Iy) - 1 * gx[1024]) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1632] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1856] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1184];
                        Ix = gx[160];
                        Iy = gx[800];
                        Iz = gx[1792];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[832] - 1 * gx[768]) * prod_xz;
                        v_ky += ak2 * gx[1056] * prod_xz;
                        v_iz += ai2 * gx[1824] * prod_xy;
                        v_kz += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[832] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1056] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1824] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2048] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1440];
                        Ix = gx[0];
                        Iy = gx[960];
                        Iz = gx[1792];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[992] - 2 * gx[928]) * prod_xz;
                        v_ky += ak2 * gx[1216] * prod_xz;
                        v_iz += ai2 * gx[1824] * prod_xy;
                        v_kz += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[992] - yjyi * Iy) - 1 * gx[832]) * prod_xz;
                        v_ly += al2 * (gx[1216] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1824] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2048] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1696];
                        Ix = gx[0];
                        Iy = gx[768];
                        Iz = gx[1984];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[1024] * prod_xz;
                        v_iz += (ai2 * gx[2016] - 2 * gx[1952]) * prod_xy;
                        v_kz += (ak2 * gx[2240] - 1 * gx[1728]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2016] - zjzi * Iz) - 1 * gx[1856]) * prod_xy;
                        v_lz += al2 * (gx[2240] - zlzk * Iz) * prod_xy;
                        break;
                    case 6:
                        dd = dd_cache[192];
                        Ix = gx[320];
                        Iy = gx[896];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[576] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[928] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1792] * prod_xy;
                        v_jx += aj2 * (gx[352] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[928] - yjyi * Iy) - 1 * gx[768]) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[448];
                        Ix = gx[288];
                        Iy = gx[768];
                        Iz = gx[1696];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[1024] * prod_xz;
                        v_iz += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xy;
                        v_kz += ak2 * gx[1952] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1728] - zjzi * Iz) - 1 * gx[1568]) * prod_xy;
                        v_lz += al2 * (gx[1952] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[704];
                        Ix = gx[128];
                        Iy = gx[1056];
                        Iz = gx[1568];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += (ak2 * gx[1312] - 1 * gx[800]) * prod_xz;
                        v_iz += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xy;
                        v_kz += ak2 * gx[1824] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1600] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1824] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[960];
                        Ix = gx[64];
                        Iy = gx[1024];
                        Iz = gx[1664];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[768]) * prod_xz;
                        v_iz += ai2 * gx[1696] * prod_xy;
                        v_kz += ak2 * gx[1920] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1696] - zjzi * Iz) - 1 * gx[1536]) * prod_xy;
                        v_lz += al2 * (gx[1920] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1216];
                        Ix = gx[160];
                        Iy = gx[768];
                        Iz = gx[1824];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[800] * prod_xz;
                        v_ky += ak2 * gx[1024] * prod_xz;
                        v_iz += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xy;
                        v_kz += (ak2 * gx[2080] - 1 * gx[1568]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[800] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1024] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1856] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2080] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1472];
                        Ix = gx[0];
                        Iy = gx[928];
                        Iz = gx[1824];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[960] - 1 * gx[896]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xy;
                        v_kz += (ak2 * gx[2080] - 1 * gx[1568]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[960] - yjyi * Iy) - 1 * gx[800]) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1856] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2080] - zlzk * Iz) * prod_xy;
                        break;
                    case 7:
                        dd = dd_cache[224];
                        Ix = gx[288];
                        Iy = gx[928];
                        Iz = gx[1536];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[960] - 1 * gx[896]) * prod_xz;
                        v_ky += ak2 * gx[1184] * prod_xz;
                        v_iz += ai2 * gx[1568] * prod_xy;
                        v_kz += ak2 * gx[1792] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[960] - yjyi * Iy) - 1 * gx[800]) * prod_xz;
                        v_ly += al2 * (gx[1184] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1568] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1792] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[480];
                        Ix = gx[256];
                        Iy = gx[832];
                        Iz = gx[1664];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[864] - 2 * gx[800]) * prod_xz;
                        v_ky += ak2 * gx[1088] * prod_xz;
                        v_iz += ai2 * gx[1696] * prod_xy;
                        v_kz += ak2 * gx[1920] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[864] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1088] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1696] - zjzi * Iz) - 1 * gx[1536]) * prod_xy;
                        v_lz += al2 * (gx[1920] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[736];
                        Ix = gx[128];
                        Iy = gx[1024];
                        Iz = gx[1600];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += (ak2 * gx[1280] - 1 * gx[768]) * prod_xz;
                        v_iz += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xy;
                        v_kz += ak2 * gx[1856] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1632] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[1856] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[992];
                        Ix = gx[32];
                        Iy = gx[1056];
                        Iz = gx[1664];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += (ak2 * gx[1312] - 1 * gx[800]) * prod_xz;
                        v_iz += ai2 * gx[1696] * prod_xy;
                        v_kz += ak2 * gx[1920] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[1696] - zjzi * Iz) - 1 * gx[1536]) * prod_xy;
                        v_lz += al2 * (gx[1920] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1248];
                        Ix = gx[128];
                        Iy = gx[832];
                        Iz = gx[1792];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[864] - 2 * gx[800]) * prod_xz;
                        v_ky += ak2 * gx[1088] * prod_xz;
                        v_iz += ai2 * gx[1824] * prod_xy;
                        v_kz += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[864] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1088] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1824] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2048] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1504];
                        Ix = gx[0];
                        Iy = gx[896];
                        Iz = gx[1856];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[928] * prod_xz;
                        v_ky += ak2 * gx[1152] * prod_xz;
                        v_iz += (ai2 * gx[1888] - 2 * gx[1824]) * prod_xy;
                        v_kz += (ak2 * gx[2112] - 1 * gx[1600]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[928] - yjyi * Iy) - 1 * gx[768]) * prod_xz;
                        v_ly += al2 * (gx[1152] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[1888] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2112] - zlzk * Iz) * prod_xy;
                        break;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_2111(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 32;
    constexpr int gout_stride = 8;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    double *dd_cache = dd_pool + blockIdx.x * 5184 + sq_id;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rlrk = shared_memory + sq_id;
    double *Rpq = shared_memory + nsq_per_block * 3 + sq_id;
    double *gx = shared_memory + nsq_per_block * 6 + sq_id;
    double *rw = shared_memory + nsq_per_block * 150 + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (150+nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        if (gout_id == 0) {
            rlrk[0] = xlxk;
            rlrk[32] = ylyk;
            rlrk[64] = zlzk;
        }
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        int do_j = jk.j_factor != 0.;
        int do_k = jk.k_factor != 0.;
        if (jk.n_dm == 1) {
            for (int n = gout_id; n < 162; n+=8) {
                int kl = n / 18;
                int ij = n % 18;
                int i = ij % 6;
                int j = ij / 6;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm[_jk] * dm[_il] + dm[_jl] * dm[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * dm[_ji] * dm[_lk];
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        } else {
            double *dmb = dm + nao * nao;
            for (int n = gout_id; n < 162; n+=8) {
                int kl = n / 18;
                int ij = n % 18;
                int i = ij % 6;
                int j = ij / 6;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm [_jk] * dm [_il] + dm [_jl] * dm [_ik] +
                                         dmb[_jk] * dmb[_il] + dmb[_jl] * dmb[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * (dm[_ji] + dmb[_ji]) * (dm[_lk] + dmb[_lk]);
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            __syncthreads();
            if (gout_id == 0) {
                double xlxk = rlrk[0];
                double ylyk = rlrk[32];
                double zlzk = rlrk[64];
                double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
                double ckcl = ck[kp] * cl[lp] * Kcd;
                gx[0] = ckcl;
            }
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double xij = ri[0] + (rjri[0]) * aj_aij;
                double yij = ri[1] + (rjri[1]) * aj_aij;
                double zij = ri[2] + (rjri[2]) * aj_aij;
                double xkl = rk[0] + rlrk[0] * al_akl;
                double ykl = rk[1] + rlrk[32] * al_akl;
                double zkl = rk[2] + rlrk[64] * al_akl;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                __syncthreads();
                if (gout_id == 0) {
                    Rpq[0] = xpq;
                    Rpq[32] = ypq;
                    Rpq[64] = zpq;
                    double cicj = cicj_cache[ijp];
                    gx[1536] = cicj / (aij*akl*sqrt(aij+akl));
                }
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                double s0, s1, s2;
                for (int irys = 0; irys < nroots; ++irys) {
                    __syncthreads();
                    double rt = rw[irys*64];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double rt_akl = rt_aa * aij;
                    double b00 = .5 * rt_aa;
                    double b10 = .5/aij * (1 - rt_aij);
                    double b01 = .5/akl * (1 - rt_akl);
                    for (int n = gout_id; n < 3; n += 8) {
                        if (n == 2) {
                            gx[3072] = rw[irys*64+32];
                        }
                        double *_gx = gx + n * 1536;
                        double xjxi = rjri[n];
                        double Rpa = xjxi * aj_aij;
                        double c0x = Rpa - rt_aij * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = c0x * s0;
                        _gx[32] = s1;
                        s2 = c0x * s1 + 1 * b10 * s0;
                        _gx[64] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 2 * b10 * s0;
                        _gx[96] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 3 * b10 * s0;
                        _gx[128] = s2;
                        double xlxk = rlrk[n*32];
                        double Rqc = xlxk * al_akl;
                        double cpx = Rqc + rt_akl * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = cpx * s0;
                        _gx[256] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        _gx[512] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        _gx[768] = s2;
                        s0 = _gx[32];
                        s1 = cpx * s0;
                        s1 += 1 * b00 * _gx[0];
                        _gx[288] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 1 * b00 * _gx[256];
                        _gx[544] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 1 * b00 * _gx[512];
                        _gx[800] = s2;
                        s0 = _gx[64];
                        s1 = cpx * s0;
                        s1 += 2 * b00 * _gx[32];
                        _gx[320] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 2 * b00 * _gx[288];
                        _gx[576] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 2 * b00 * _gx[544];
                        _gx[832] = s2;
                        s0 = _gx[96];
                        s1 = cpx * s0;
                        s1 += 3 * b00 * _gx[64];
                        _gx[352] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 3 * b00 * _gx[320];
                        _gx[608] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 3 * b00 * _gx[576];
                        _gx[864] = s2;
                        s0 = _gx[128];
                        s1 = cpx * s0;
                        s1 += 4 * b00 * _gx[96];
                        _gx[384] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 4 * b00 * _gx[352];
                        _gx[640] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 4 * b00 * _gx[608];
                        _gx[896] = s2;
                        s1 = _gx[128];
                        s0 = _gx[96];
                        _gx[224] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[64];
                        _gx[192] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[160] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[128] = s1 - xjxi * s0;
                        s1 = _gx[384];
                        s0 = _gx[352];
                        _gx[480] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[320];
                        _gx[448] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[288];
                        _gx[416] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[256];
                        _gx[384] = s1 - xjxi * s0;
                        s1 = _gx[640];
                        s0 = _gx[608];
                        _gx[736] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[576];
                        _gx[704] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[544];
                        _gx[672] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[512];
                        _gx[640] = s1 - xjxi * s0;
                        s1 = _gx[896];
                        s0 = _gx[864];
                        _gx[992] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[832];
                        _gx[960] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[800];
                        _gx[928] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[768];
                        _gx[896] = s1 - xjxi * s0;
                        s1 = _gx[768];
                        s0 = _gx[512];
                        _gx[1280] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[256];
                        _gx[1024] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[768] = s1 - xlxk * s0;
                        s1 = _gx[800];
                        s0 = _gx[544];
                        _gx[1312] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[288];
                        _gx[1056] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[800] = s1 - xlxk * s0;
                        s1 = _gx[832];
                        s0 = _gx[576];
                        _gx[1344] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[320];
                        _gx[1088] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[64];
                        _gx[832] = s1 - xlxk * s0;
                        s1 = _gx[864];
                        s0 = _gx[608];
                        _gx[1376] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[352];
                        _gx[1120] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[96];
                        _gx[864] = s1 - xlxk * s0;
                        s1 = _gx[896];
                        s0 = _gx[640];
                        _gx[1408] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[384];
                        _gx[1152] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[128];
                        _gx[896] = s1 - xlxk * s0;
                        s1 = _gx[928];
                        s0 = _gx[672];
                        _gx[1440] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[416];
                        _gx[1184] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[160];
                        _gx[928] = s1 - xlxk * s0;
                        s1 = _gx[960];
                        s0 = _gx[704];
                        _gx[1472] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[448];
                        _gx[1216] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[192];
                        _gx[960] = s1 - xlxk * s0;
                        s1 = _gx[992];
                        s0 = _gx[736];
                        _gx[1504] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[480];
                        _gx[1248] = s1 - xlxk * s0;
                        s1 = s0;
                        s0 = _gx[224];
                        _gx[992] = s1 - xlxk * s0;
                    }
                    __syncthreads();
                    double xjxi = rjri[0];
                    double yjyi = rjri[1];
                    double zjzi = rjri[2];
                    double xlxk = rlrk[0];
                    double ylyk = rlrk[32];
                    double zlzk = rlrk[64];
                    switch (gout_id) {
                    case 0:
                        dd = dd_cache[0];
                        Ix = gx[1216];
                        Iy = gx[1536];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[1248] - 2 * gx[1184]) * prod_yz;
                        v_kx += (ak2 * gx[1472] - 1 * gx[960]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += (aj2 * (gx[1248] - xjxi * Ix) - 1 * gx[1088]) * prod_yz;
                        v_lx += (al2 * (gx[1472] - xlxk * Ix) - 1 * gx[448]) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[256];
                        Ix = gx[1056];
                        Iy = gx[1664];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[1088] - 1 * gx[1024]) * prod_yz;
                        v_kx += (ak2 * gx[1312] - 1 * gx[800]) * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += aj2 * (gx[1088] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1312] - xlxk * Ix) - 1 * gx[288]) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[512];
                        Ix = gx[1024];
                        Iy = gx[1568];
                        Iz = gx[3232];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[1056] * prod_yz;
                        v_kx += (ak2 * gx[1280] - 1 * gx[768]) * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += (ai2 * gx[3264] - 1 * gx[3200]) * prod_xy;
                        v_kz += ak2 * gx[3488] * prod_xy;
                        v_jx += aj2 * (gx[1056] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1280] - xlxk * Ix) - 1 * gx[256]) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3264] - zjzi * Iz) - 1 * gx[3104]) * prod_xy;
                        v_lz += al2 * (gx[3488] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[768];
                        Ix = gx[832];
                        Iy = gx[1920];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[864] - 2 * gx[800]) * prod_yz;
                        v_kx += ak2 * gx[1088] * prod_yz;
                        v_iy += ai2 * gx[1952] * prod_xz;
                        v_ky += (ak2 * gx[2176] - 1 * gx[1664]) * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += aj2 * (gx[864] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1088] - xlxk * Ix) - 1 * gx[64]) * prod_yz;
                        v_jy += (aj2 * (gx[1952] - yjyi * Iy) - 1 * gx[1792]) * prod_xz;
                        v_ly += al2 * (gx[2176] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1024];
                        Ix = gx[800];
                        Iy = gx[1792];
                        Iz = gx[3232];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[832] - 1 * gx[768]) * prod_yz;
                        v_kx += ak2 * gx[1056] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xz;
                        v_iz += (ai2 * gx[3264] - 1 * gx[3200]) * prod_xy;
                        v_kz += ak2 * gx[3488] * prod_xy;
                        v_jx += aj2 * (gx[832] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1056] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3264] - zjzi * Iz) - 1 * gx[3104]) * prod_xy;
                        v_lz += al2 * (gx[3488] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1280];
                        Ix = gx[896];
                        Iy = gx[1568];
                        Iz = gx[3360];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[928] * prod_yz;
                        v_kx += ak2 * gx[1152] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += (ai2 * gx[3392] - 1 * gx[3328]) * prod_xy;
                        v_kz += (ak2 * gx[3616] - 1 * gx[3104]) * prod_xy;
                        v_jx += (aj2 * (gx[928] - xjxi * Ix) - 1 * gx[768]) * prod_yz;
                        v_lx += (al2 * (gx[1152] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3392] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3616] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1536];
                        Ix = gx[832];
                        Iy = gx[1536];
                        Iz = gx[3456];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[864] - 2 * gx[800]) * prod_yz;
                        v_kx += ak2 * gx[1088] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += ai2 * gx[3488] * prod_xy;
                        v_kz += (ak2 * gx[3712] - 1 * gx[3200]) * prod_xy;
                        v_jx += aj2 * (gx[864] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1088] - xlxk * Ix) - 1 * gx[64]) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3488] - zjzi * Iz) - 1 * gx[3328]) * prod_xy;
                        v_lz += al2 * (gx[3712] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1792];
                        Ix = gx[416];
                        Iy = gx[2304];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[672] - 1 * gx[160]) * prod_yz;
                        v_iy += ai2 * gx[2336] * prod_xz;
                        v_ky += ak2 * gx[2560] * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += (aj2 * (gx[448] - xjxi * Ix) - 1 * gx[288]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2336] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2560] - ylyk * Iy) - 1 * gx[1536]) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2048];
                        Ix = gx[256];
                        Iy = gx[2464];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xz;
                        v_ky += ak2 * gx[2720] * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2496] - yjyi * Iy) - 1 * gx[2336]) * prod_xz;
                        v_ly += (al2 * (gx[2720] - ylyk * Iy) - 1 * gx[1696]) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2304];
                        Ix = gx[192];
                        Iy = gx[2560];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[2592] * prod_xz;
                        v_ky += (ak2 * gx[2816] - 1 * gx[2304]) * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += (aj2 * (gx[224] - xjxi * Ix) - 1 * gx[64]) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2592] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2816] - ylyk * Iy) - 1 * gx[1792]) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2560];
                        Ix = gx[32];
                        Iy = gx[2688];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[2720] * prod_xz;
                        v_ky += (ak2 * gx[2944] - 1 * gx[2432]) * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2720] - yjyi * Iy) - 1 * gx[2560]) * prod_xz;
                        v_ly += (al2 * (gx[2944] - ylyk * Iy) - 1 * gx[1920]) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2816];
                        Ix = gx[0];
                        Iy = gx[2592];
                        Iz = gx[3232];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xz;
                        v_ky += (ak2 * gx[2848] - 1 * gx[2336]) * prod_xz;
                        v_iz += (ai2 * gx[3264] - 1 * gx[3200]) * prod_xy;
                        v_kz += ak2 * gx[3488] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2624] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2848] - ylyk * Iy) - 1 * gx[1824]) * prod_xz;
                        v_jz += (aj2 * (gx[3264] - zjzi * Iz) - 1 * gx[3104]) * prod_xy;
                        v_lz += al2 * (gx[3488] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3072];
                        Ix = gx[64];
                        Iy = gx[2432];
                        Iz = gx[3328];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[2464] * prod_xz;
                        v_ky += ak2 * gx[2688] * prod_xz;
                        v_iz += ai2 * gx[3360] * prod_xy;
                        v_kz += (ak2 * gx[3584] - 1 * gx[3072]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2464] - yjyi * Iy) - 1 * gx[2304]) * prod_xz;
                        v_ly += (al2 * (gx[2688] - ylyk * Iy) - 1 * gx[1664]) * prod_xz;
                        v_jz += aj2 * (gx[3360] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3584] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3328];
                        Ix = gx[32];
                        Iy = gx[2304];
                        Iz = gx[3488];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[2336] * prod_xz;
                        v_ky += ak2 * gx[2560] * prod_xz;
                        v_iz += (ai2 * gx[3520] - 1 * gx[3456]) * prod_xy;
                        v_kz += (ak2 * gx[3744] - 1 * gx[3232]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2336] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2560] - ylyk * Iy) - 1 * gx[1536]) * prod_xz;
                        v_jz += (aj2 * (gx[3520] - zjzi * Iz) - 1 * gx[3360]) * prod_xy;
                        v_lz += al2 * (gx[3744] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3584];
                        Ix = gx[384];
                        Iy = gx[1568];
                        Iz = gx[3872];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += (ai2 * gx[3904] - 1 * gx[3840]) * prod_xy;
                        v_kz += ak2 * gx[4128] * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3904] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4128] - zlzk * Iz) - 1 * gx[3104]) * prod_xy;
                        dd = dd_cache[3840];
                        Ix = gx[320];
                        Iy = gx[1536];
                        Iz = gx[3968];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[576] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += ai2 * gx[4000] * prod_xy;
                        v_kz += ak2 * gx[4224] * prod_xy;
                        v_jx += aj2 * (gx[352] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4000] - zjzi * Iz) - 1 * gx[3840]) * prod_xy;
                        v_lz += (al2 * (gx[4224] - zlzk * Iz) - 1 * gx[3200]) * prod_xy;
                        dd = dd_cache[4096];
                        Ix = gx[160];
                        Iy = gx[1792];
                        Iz = gx[3872];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xz;
                        v_iz += (ai2 * gx[3904] - 1 * gx[3840]) * prod_xy;
                        v_kz += ak2 * gx[4128] * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3904] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4128] - zlzk * Iz) - 1 * gx[3104]) * prod_xy;
                        dd = dd_cache[4352];
                        Ix = gx[0];
                        Iy = gx[1952];
                        Iz = gx[3872];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1984] - 1 * gx[1920]) * prod_xz;
                        v_ky += (ak2 * gx[2208] - 1 * gx[1696]) * prod_xz;
                        v_iz += (ai2 * gx[3904] - 1 * gx[3840]) * prod_xy;
                        v_kz += ak2 * gx[4128] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1984] - yjyi * Iy) - 1 * gx[1824]) * prod_xz;
                        v_ly += al2 * (gx[2208] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3904] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4128] - zlzk * Iz) - 1 * gx[3104]) * prod_xy;
                        dd = dd_cache[4608];
                        Ix = gx[192];
                        Iy = gx[1536];
                        Iz = gx[4096];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += ai2 * gx[4128] * prod_xy;
                        v_kz += (ak2 * gx[4352] - 1 * gx[3840]) * prod_xy;
                        v_jx += (aj2 * (gx[224] - xjxi * Ix) - 1 * gx[64]) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[4128] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4352] - zlzk * Iz) - 1 * gx[3328]) * prod_xy;
                        dd = dd_cache[4864];
                        Ix = gx[32];
                        Iy = gx[1664];
                        Iz = gx[4128];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += (ai2 * gx[4160] - 1 * gx[4096]) * prod_xy;
                        v_kz += (ak2 * gx[4384] - 1 * gx[3872]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[4160] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4384] - zlzk * Iz) - 1 * gx[3360]) * prod_xy;
                        dd = dd_cache[5120];
                        Ix = gx[0];
                        Iy = gx[1568];
                        Iz = gx[4256];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += (ai2 * gx[4288] - 1 * gx[4224]) * prod_xy;
                        v_kz += (ak2 * gx[4512] - 1 * gx[4000]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4288] - zjzi * Iz) - 1 * gx[4128]) * prod_xy;
                        v_lz += (al2 * (gx[4512] - zlzk * Iz) - 1 * gx[3488]) * prod_xy;
                        break;
                    case 1:
                        dd = dd_cache[32];
                        Ix = gx[1184];
                        Iy = gx[1568];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[1216] - 1 * gx[1152]) * prod_yz;
                        v_kx += (ak2 * gx[1440] - 1 * gx[928]) * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += (aj2 * (gx[1216] - xjxi * Ix) - 1 * gx[1056]) * prod_yz;
                        v_lx += (al2 * (gx[1440] - xlxk * Ix) - 1 * gx[416]) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[288];
                        Ix = gx[1024];
                        Iy = gx[1728];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[1056] * prod_yz;
                        v_kx += (ak2 * gx[1280] - 1 * gx[768]) * prod_yz;
                        v_iy += (ai2 * gx[1760] - 2 * gx[1696]) * prod_xz;
                        v_ky += ak2 * gx[1984] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += aj2 * (gx[1056] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1280] - xlxk * Ix) - 1 * gx[256]) * prod_yz;
                        v_jy += (aj2 * (gx[1760] - yjyi * Iy) - 1 * gx[1600]) * prod_xz;
                        v_ly += al2 * (gx[1984] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[544];
                        Ix = gx[1024];
                        Iy = gx[1536];
                        Iz = gx[3264];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[1056] * prod_yz;
                        v_kx += (ak2 * gx[1280] - 1 * gx[768]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[3296] - 2 * gx[3232]) * prod_xy;
                        v_kz += ak2 * gx[3520] * prod_xy;
                        v_jx += aj2 * (gx[1056] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1280] - xlxk * Ix) - 1 * gx[256]) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3296] - zjzi * Iz) - 1 * gx[3136]) * prod_xy;
                        v_lz += al2 * (gx[3520] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[800];
                        Ix = gx[800];
                        Iy = gx[1952];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[832] - 1 * gx[768]) * prod_yz;
                        v_kx += ak2 * gx[1056] * prod_yz;
                        v_iy += (ai2 * gx[1984] - 1 * gx[1920]) * prod_xz;
                        v_ky += (ak2 * gx[2208] - 1 * gx[1696]) * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += aj2 * (gx[832] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1056] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += (aj2 * (gx[1984] - yjyi * Iy) - 1 * gx[1824]) * prod_xz;
                        v_ly += al2 * (gx[2208] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1056];
                        Ix = gx[768];
                        Iy = gx[1856];
                        Iz = gx[3200];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += ak2 * gx[1024] * prod_yz;
                        v_iy += (ai2 * gx[1888] - 2 * gx[1824]) * prod_xz;
                        v_ky += (ak2 * gx[2112] - 1 * gx[1600]) * prod_xz;
                        v_iz += ai2 * gx[3232] * prod_xy;
                        v_kz += ak2 * gx[3456] * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1024] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1888] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2112] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3232] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += al2 * (gx[3456] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1312];
                        Ix = gx[896];
                        Iy = gx[1536];
                        Iz = gx[3392];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[928] * prod_yz;
                        v_kx += ak2 * gx[1152] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[3424] - 2 * gx[3360]) * prod_xy;
                        v_kz += (ak2 * gx[3648] - 1 * gx[3136]) * prod_xy;
                        v_jx += (aj2 * (gx[928] - xjxi * Ix) - 1 * gx[768]) * prod_yz;
                        v_lx += (al2 * (gx[1152] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3424] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3648] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1568];
                        Ix = gx[800];
                        Iy = gx[1568];
                        Iz = gx[3456];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[832] - 1 * gx[768]) * prod_yz;
                        v_kx += ak2 * gx[1056] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += ai2 * gx[3488] * prod_xy;
                        v_kz += (ak2 * gx[3712] - 1 * gx[3200]) * prod_xy;
                        v_jx += aj2 * (gx[832] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1056] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3488] - zjzi * Iz) - 1 * gx[3328]) * prod_xy;
                        v_lz += al2 * (gx[3712] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1824];
                        Ix = gx[384];
                        Iy = gx[2368];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xz;
                        v_ky += ak2 * gx[2624] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2400] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2624] - ylyk * Iy) - 1 * gx[1600]) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2080];
                        Ix = gx[256];
                        Iy = gx[2432];
                        Iz = gx[3136];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[2464] * prod_xz;
                        v_ky += ak2 * gx[2688] * prod_xz;
                        v_iz += (ai2 * gx[3168] - 2 * gx[3104]) * prod_xy;
                        v_kz += ak2 * gx[3392] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2464] - yjyi * Iy) - 1 * gx[2304]) * prod_xz;
                        v_ly += (al2 * (gx[2688] - ylyk * Iy) - 1 * gx[1664]) * prod_xz;
                        v_jz += aj2 * (gx[3168] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3392] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2336];
                        Ix = gx[160];
                        Iy = gx[2592];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xz;
                        v_ky += (ak2 * gx[2848] - 1 * gx[2336]) * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2624] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2848] - ylyk * Iy) - 1 * gx[1824]) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2592];
                        Ix = gx[0];
                        Iy = gx[2752];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[2784] - 2 * gx[2720]) * prod_xz;
                        v_ky += (ak2 * gx[3008] - 1 * gx[2496]) * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2784] - yjyi * Iy) - 1 * gx[2624]) * prod_xz;
                        v_ly += (al2 * (gx[3008] - ylyk * Iy) - 1 * gx[1984]) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2848];
                        Ix = gx[0];
                        Iy = gx[2560];
                        Iz = gx[3264];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[2592] * prod_xz;
                        v_ky += (ak2 * gx[2816] - 1 * gx[2304]) * prod_xz;
                        v_iz += (ai2 * gx[3296] - 2 * gx[3232]) * prod_xy;
                        v_kz += ak2 * gx[3520] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2592] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2816] - ylyk * Iy) - 1 * gx[1792]) * prod_xz;
                        v_jz += (aj2 * (gx[3296] - zjzi * Iz) - 1 * gx[3136]) * prod_xy;
                        v_lz += al2 * (gx[3520] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3104];
                        Ix = gx[32];
                        Iy = gx[2464];
                        Iz = gx[3328];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xz;
                        v_ky += ak2 * gx[2720] * prod_xz;
                        v_iz += ai2 * gx[3360] * prod_xy;
                        v_kz += (ak2 * gx[3584] - 1 * gx[3072]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2496] - yjyi * Iy) - 1 * gx[2336]) * prod_xz;
                        v_ly += (al2 * (gx[2720] - ylyk * Iy) - 1 * gx[1696]) * prod_xz;
                        v_jz += aj2 * (gx[3360] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3584] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3360];
                        Ix = gx[0];
                        Iy = gx[2368];
                        Iz = gx[3456];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xz;
                        v_ky += ak2 * gx[2624] * prod_xz;
                        v_iz += ai2 * gx[3488] * prod_xy;
                        v_kz += (ak2 * gx[3712] - 1 * gx[3200]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2400] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2624] - ylyk * Iy) - 1 * gx[1600]) * prod_xz;
                        v_jz += (aj2 * (gx[3488] - zjzi * Iz) - 1 * gx[3328]) * prod_xy;
                        v_lz += al2 * (gx[3712] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3616];
                        Ix = gx[384];
                        Iy = gx[1536];
                        Iz = gx[3904];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[3936] - 2 * gx[3872]) * prod_xy;
                        v_kz += ak2 * gx[4160] * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3936] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4160] - zlzk * Iz) - 1 * gx[3136]) * prod_xy;
                        dd = dd_cache[3872];
                        Ix = gx[288];
                        Iy = gx[1568];
                        Iz = gx[3968];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += ai2 * gx[4000] * prod_xy;
                        v_kz += ak2 * gx[4224] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4000] - zjzi * Iz) - 1 * gx[3840]) * prod_xy;
                        v_lz += (al2 * (gx[4224] - zlzk * Iz) - 1 * gx[3200]) * prod_xy;
                        dd = dd_cache[4128];
                        Ix = gx[128];
                        Iy = gx[1856];
                        Iz = gx[3840];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1888] - 2 * gx[1824]) * prod_xz;
                        v_ky += (ak2 * gx[2112] - 1 * gx[1600]) * prod_xz;
                        v_iz += ai2 * gx[3872] * prod_xy;
                        v_kz += ak2 * gx[4096] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1888] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2112] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3872] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4096] - zlzk * Iz) - 1 * gx[3072]) * prod_xy;
                        dd = dd_cache[4384];
                        Ix = gx[0];
                        Iy = gx[1920];
                        Iz = gx[3904];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[1952] * prod_xz;
                        v_ky += (ak2 * gx[2176] - 1 * gx[1664]) * prod_xz;
                        v_iz += (ai2 * gx[3936] - 2 * gx[3872]) * prod_xy;
                        v_kz += ak2 * gx[4160] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1952] - yjyi * Iy) - 1 * gx[1792]) * prod_xz;
                        v_ly += al2 * (gx[2176] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3936] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4160] - zlzk * Iz) - 1 * gx[3136]) * prod_xy;
                        dd = dd_cache[4640];
                        Ix = gx[160];
                        Iy = gx[1568];
                        Iz = gx[4096];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += ai2 * gx[4128] * prod_xy;
                        v_kz += (ak2 * gx[4352] - 1 * gx[3840]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[4128] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4352] - zlzk * Iz) - 1 * gx[3328]) * prod_xy;
                        dd = dd_cache[4896];
                        Ix = gx[0];
                        Iy = gx[1728];
                        Iz = gx[4096];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1760] - 2 * gx[1696]) * prod_xz;
                        v_ky += ak2 * gx[1984] * prod_xz;
                        v_iz += ai2 * gx[4128] * prod_xy;
                        v_kz += (ak2 * gx[4352] - 1 * gx[3840]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1760] - yjyi * Iy) - 1 * gx[1600]) * prod_xz;
                        v_ly += al2 * (gx[1984] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[4128] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4352] - zlzk * Iz) - 1 * gx[3328]) * prod_xy;
                        dd = dd_cache[5152];
                        Ix = gx[0];
                        Iy = gx[1536];
                        Iz = gx[4288];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[4320] - 2 * gx[4256]) * prod_xy;
                        v_kz += (ak2 * gx[4544] - 1 * gx[4032]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4320] - zjzi * Iz) - 1 * gx[4160]) * prod_xy;
                        v_lz += (al2 * (gx[4544] - zlzk * Iz) - 1 * gx[3520]) * prod_xy;
                        break;
                    case 2:
                        dd = dd_cache[64];
                        Ix = gx[1184];
                        Iy = gx[1536];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[1216] - 1 * gx[1152]) * prod_yz;
                        v_kx += (ak2 * gx[1440] - 1 * gx[928]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += (aj2 * (gx[1216] - xjxi * Ix) - 1 * gx[1056]) * prod_yz;
                        v_lx += (al2 * (gx[1440] - xlxk * Ix) - 1 * gx[416]) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[320];
                        Ix = gx[1024];
                        Iy = gx[1696];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[1056] * prod_yz;
                        v_kx += (ak2 * gx[1280] - 1 * gx[768]) * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += ak2 * gx[1952] * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += aj2 * (gx[1056] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1280] - xlxk * Ix) - 1 * gx[256]) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[576];
                        Ix = gx[960];
                        Iy = gx[1792];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[992] - 2 * gx[928]) * prod_yz;
                        v_kx += ak2 * gx[1216] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += (aj2 * (gx[992] - xjxi * Ix) - 1 * gx[832]) * prod_yz;
                        v_lx += (al2 * (gx[1216] - xlxk * Ix) - 1 * gx[192]) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[832];
                        Ix = gx[800];
                        Iy = gx[1920];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[832] - 1 * gx[768]) * prod_yz;
                        v_kx += ak2 * gx[1056] * prod_yz;
                        v_iy += ai2 * gx[1952] * prod_xz;
                        v_ky += (ak2 * gx[2176] - 1 * gx[1664]) * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += aj2 * (gx[832] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1056] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += (aj2 * (gx[1952] - yjyi * Iy) - 1 * gx[1792]) * prod_xz;
                        v_ly += al2 * (gx[2176] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1088];
                        Ix = gx[768];
                        Iy = gx[1824];
                        Iz = gx[3232];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += ak2 * gx[1024] * prod_yz;
                        v_iy += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xz;
                        v_ky += (ak2 * gx[2080] - 1 * gx[1568]) * prod_xz;
                        v_iz += (ai2 * gx[3264] - 1 * gx[3200]) * prod_xy;
                        v_kz += ak2 * gx[3488] * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1024] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1856] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2080] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3264] - zjzi * Iz) - 1 * gx[3104]) * prod_xy;
                        v_lz += al2 * (gx[3488] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1344];
                        Ix = gx[832];
                        Iy = gx[1664];
                        Iz = gx[3328];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[864] - 2 * gx[800]) * prod_yz;
                        v_kx += ak2 * gx[1088] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += ai2 * gx[3360] * prod_xy;
                        v_kz += (ak2 * gx[3584] - 1 * gx[3072]) * prod_xy;
                        v_jx += aj2 * (gx[864] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1088] - xlxk * Ix) - 1 * gx[64]) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3360] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3584] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1600];
                        Ix = gx[800];
                        Iy = gx[1536];
                        Iz = gx[3488];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[832] - 1 * gx[768]) * prod_yz;
                        v_kx += ak2 * gx[1056] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[3520] - 1 * gx[3456]) * prod_xy;
                        v_kz += (ak2 * gx[3744] - 1 * gx[3232]) * prod_xy;
                        v_jx += aj2 * (gx[832] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1056] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3520] - zjzi * Iz) - 1 * gx[3360]) * prod_xy;
                        v_lz += al2 * (gx[3744] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1856];
                        Ix = gx[384];
                        Iy = gx[2336];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xz;
                        v_ky += ak2 * gx[2592] * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2368] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2592] - ylyk * Iy) - 1 * gx[1568]) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2112];
                        Ix = gx[320];
                        Iy = gx[2304];
                        Iz = gx[3200];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[576] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[2336] * prod_xz;
                        v_ky += ak2 * gx[2560] * prod_xz;
                        v_iz += ai2 * gx[3232] * prod_xy;
                        v_kz += ak2 * gx[3456] * prod_xy;
                        v_jx += aj2 * (gx[352] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2336] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2560] - ylyk * Iy) - 1 * gx[1536]) * prod_xz;
                        v_jz += (aj2 * (gx[3232] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += al2 * (gx[3456] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2368];
                        Ix = gx[160];
                        Iy = gx[2560];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[2592] * prod_xz;
                        v_ky += (ak2 * gx[2816] - 1 * gx[2304]) * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2592] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2816] - ylyk * Iy) - 1 * gx[1792]) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2624];
                        Ix = gx[0];
                        Iy = gx[2720];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xz;
                        v_ky += (ak2 * gx[2976] - 1 * gx[2464]) * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2752] - yjyi * Iy) - 1 * gx[2592]) * prod_xz;
                        v_ly += (al2 * (gx[2976] - ylyk * Iy) - 1 * gx[1952]) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2880];
                        Ix = gx[192];
                        Iy = gx[2304];
                        Iz = gx[3328];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[2336] * prod_xz;
                        v_ky += ak2 * gx[2560] * prod_xz;
                        v_iz += ai2 * gx[3360] * prod_xy;
                        v_kz += (ak2 * gx[3584] - 1 * gx[3072]) * prod_xy;
                        v_jx += (aj2 * (gx[224] - xjxi * Ix) - 1 * gx[64]) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2336] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2560] - ylyk * Iy) - 1 * gx[1536]) * prod_xz;
                        v_jz += aj2 * (gx[3360] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3584] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3136];
                        Ix = gx[32];
                        Iy = gx[2432];
                        Iz = gx[3360];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[2464] * prod_xz;
                        v_ky += ak2 * gx[2688] * prod_xz;
                        v_iz += (ai2 * gx[3392] - 1 * gx[3328]) * prod_xy;
                        v_kz += (ak2 * gx[3616] - 1 * gx[3104]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2464] - yjyi * Iy) - 1 * gx[2304]) * prod_xz;
                        v_ly += (al2 * (gx[2688] - ylyk * Iy) - 1 * gx[1664]) * prod_xz;
                        v_jz += aj2 * (gx[3392] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3616] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3392];
                        Ix = gx[0];
                        Iy = gx[2336];
                        Iz = gx[3488];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xz;
                        v_ky += ak2 * gx[2592] * prod_xz;
                        v_iz += (ai2 * gx[3520] - 1 * gx[3456]) * prod_xy;
                        v_kz += (ak2 * gx[3744] - 1 * gx[3232]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2368] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2592] - ylyk * Iy) - 1 * gx[1568]) * prod_xz;
                        v_jz += (aj2 * (gx[3520] - zjzi * Iz) - 1 * gx[3360]) * prod_xy;
                        v_lz += al2 * (gx[3744] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3648];
                        Ix = gx[320];
                        Iy = gx[1664];
                        Iz = gx[3840];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[576] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += ai2 * gx[3872] * prod_xy;
                        v_kz += ak2 * gx[4096] * prod_xy;
                        v_jx += aj2 * (gx[352] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3872] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4096] - zlzk * Iz) - 1 * gx[3072]) * prod_xy;
                        dd = dd_cache[3904];
                        Ix = gx[288];
                        Iy = gx[1536];
                        Iz = gx[4000];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[4032] - 1 * gx[3968]) * prod_xy;
                        v_kz += ak2 * gx[4256] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4032] - zjzi * Iz) - 1 * gx[3872]) * prod_xy;
                        v_lz += (al2 * (gx[4256] - zlzk * Iz) - 1 * gx[3232]) * prod_xy;
                        dd = dd_cache[4160];
                        Ix = gx[128];
                        Iy = gx[1824];
                        Iz = gx[3872];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xz;
                        v_ky += (ak2 * gx[2080] - 1 * gx[1568]) * prod_xz;
                        v_iz += (ai2 * gx[3904] - 1 * gx[3840]) * prod_xy;
                        v_kz += ak2 * gx[4128] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1856] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2080] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3904] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4128] - zlzk * Iz) - 1 * gx[3104]) * prod_xy;
                        dd = dd_cache[4416];
                        Ix = gx[64];
                        Iy = gx[1792];
                        Iz = gx[3968];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xz;
                        v_iz += ai2 * gx[4000] * prod_xy;
                        v_kz += ak2 * gx[4224] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4000] - zjzi * Iz) - 1 * gx[3840]) * prod_xy;
                        v_lz += (al2 * (gx[4224] - zlzk * Iz) - 1 * gx[3200]) * prod_xy;
                        dd = dd_cache[4672];
                        Ix = gx[160];
                        Iy = gx[1536];
                        Iz = gx[4128];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[4160] - 1 * gx[4096]) * prod_xy;
                        v_kz += (ak2 * gx[4384] - 1 * gx[3872]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[4160] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4384] - zlzk * Iz) - 1 * gx[3360]) * prod_xy;
                        dd = dd_cache[4928];
                        Ix = gx[0];
                        Iy = gx[1696];
                        Iz = gx[4128];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += ak2 * gx[1952] * prod_xz;
                        v_iz += (ai2 * gx[4160] - 1 * gx[4096]) * prod_xy;
                        v_kz += (ak2 * gx[4384] - 1 * gx[3872]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[4160] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4384] - zlzk * Iz) - 1 * gx[3360]) * prod_xy;
                        break;
                    case 3:
                        dd = dd_cache[96];
                        Ix = gx[1152];
                        Iy = gx[1600];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[1184] * prod_yz;
                        v_kx += (ak2 * gx[1408] - 1 * gx[896]) * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += ak2 * gx[1856] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += (aj2 * (gx[1184] - xjxi * Ix) - 1 * gx[1024]) * prod_yz;
                        v_lx += (al2 * (gx[1408] - xlxk * Ix) - 1 * gx[384]) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1856] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[352];
                        Ix = gx[1024];
                        Iy = gx[1664];
                        Iz = gx[3136];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[1056] * prod_yz;
                        v_kx += (ak2 * gx[1280] - 1 * gx[768]) * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += (ai2 * gx[3168] - 2 * gx[3104]) * prod_xy;
                        v_kz += ak2 * gx[3392] * prod_xy;
                        v_jx += aj2 * (gx[1056] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1280] - xlxk * Ix) - 1 * gx[256]) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3168] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3392] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[608];
                        Ix = gx[928];
                        Iy = gx[1824];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[960] - 1 * gx[896]) * prod_yz;
                        v_kx += ak2 * gx[1184] * prod_yz;
                        v_iy += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xz;
                        v_ky += (ak2 * gx[2080] - 1 * gx[1568]) * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += (aj2 * (gx[960] - xjxi * Ix) - 1 * gx[800]) * prod_yz;
                        v_lx += (al2 * (gx[1184] - xlxk * Ix) - 1 * gx[160]) * prod_yz;
                        v_jy += aj2 * (gx[1856] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2080] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[864];
                        Ix = gx[768];
                        Iy = gx[1984];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += ak2 * gx[1024] * prod_yz;
                        v_iy += (ai2 * gx[2016] - 2 * gx[1952]) * prod_xz;
                        v_ky += (ak2 * gx[2240] - 1 * gx[1728]) * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1024] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += (aj2 * (gx[2016] - yjyi * Iy) - 1 * gx[1856]) * prod_xz;
                        v_ly += al2 * (gx[2240] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1120];
                        Ix = gx[768];
                        Iy = gx[1792];
                        Iz = gx[3264];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += ak2 * gx[1024] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xz;
                        v_iz += (ai2 * gx[3296] - 2 * gx[3232]) * prod_xy;
                        v_kz += ak2 * gx[3520] * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1024] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3296] - zjzi * Iz) - 1 * gx[3136]) * prod_xy;
                        v_lz += al2 * (gx[3520] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1376];
                        Ix = gx[800];
                        Iy = gx[1696];
                        Iz = gx[3328];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[832] - 1 * gx[768]) * prod_yz;
                        v_kx += ak2 * gx[1056] * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += ak2 * gx[1952] * prod_xz;
                        v_iz += ai2 * gx[3360] * prod_xy;
                        v_kz += (ak2 * gx[3584] - 1 * gx[3072]) * prod_xy;
                        v_jx += aj2 * (gx[832] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1056] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3360] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3584] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1632];
                        Ix = gx[768];
                        Iy = gx[1600];
                        Iz = gx[3456];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += ak2 * gx[1024] * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += ak2 * gx[1856] * prod_xz;
                        v_iz += ai2 * gx[3488] * prod_xy;
                        v_kz += (ak2 * gx[3712] - 1 * gx[3200]) * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1024] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1856] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3488] - zjzi * Iz) - 1 * gx[3328]) * prod_xy;
                        v_lz += al2 * (gx[3712] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1888];
                        Ix = gx[384];
                        Iy = gx[2304];
                        Iz = gx[3136];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += ai2 * gx[2336] * prod_xz;
                        v_ky += ak2 * gx[2560] * prod_xz;
                        v_iz += (ai2 * gx[3168] - 2 * gx[3104]) * prod_xy;
                        v_kz += ak2 * gx[3392] * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2336] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2560] - ylyk * Iy) - 1 * gx[1536]) * prod_xz;
                        v_jz += aj2 * (gx[3168] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3392] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2144];
                        Ix = gx[288];
                        Iy = gx[2336];
                        Iz = gx[3200];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xz;
                        v_ky += ak2 * gx[2592] * prod_xz;
                        v_iz += ai2 * gx[3232] * prod_xy;
                        v_kz += ak2 * gx[3456] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2368] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2592] - ylyk * Iy) - 1 * gx[1568]) * prod_xz;
                        v_jz += (aj2 * (gx[3232] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += al2 * (gx[3456] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2400];
                        Ix = gx[128];
                        Iy = gx[2624];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[2656] - 2 * gx[2592]) * prod_xz;
                        v_ky += (ak2 * gx[2880] - 1 * gx[2368]) * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2656] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2880] - ylyk * Iy) - 1 * gx[1856]) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2656];
                        Ix = gx[0];
                        Iy = gx[2688];
                        Iz = gx[3136];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[2720] * prod_xz;
                        v_ky += (ak2 * gx[2944] - 1 * gx[2432]) * prod_xz;
                        v_iz += (ai2 * gx[3168] - 2 * gx[3104]) * prod_xy;
                        v_kz += ak2 * gx[3392] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2720] - yjyi * Iy) - 1 * gx[2560]) * prod_xz;
                        v_ly += (al2 * (gx[2944] - ylyk * Iy) - 1 * gx[1920]) * prod_xz;
                        v_jz += aj2 * (gx[3168] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3392] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2912];
                        Ix = gx[160];
                        Iy = gx[2336];
                        Iz = gx[3328];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xz;
                        v_ky += ak2 * gx[2592] * prod_xz;
                        v_iz += ai2 * gx[3360] * prod_xy;
                        v_kz += (ak2 * gx[3584] - 1 * gx[3072]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2368] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2592] - ylyk * Iy) - 1 * gx[1568]) * prod_xz;
                        v_jz += aj2 * (gx[3360] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3584] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3168];
                        Ix = gx[0];
                        Iy = gx[2496];
                        Iz = gx[3328];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[2528] - 2 * gx[2464]) * prod_xz;
                        v_ky += ak2 * gx[2752] * prod_xz;
                        v_iz += ai2 * gx[3360] * prod_xy;
                        v_kz += (ak2 * gx[3584] - 1 * gx[3072]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2528] - yjyi * Iy) - 1 * gx[2368]) * prod_xz;
                        v_ly += (al2 * (gx[2752] - ylyk * Iy) - 1 * gx[1728]) * prod_xz;
                        v_jz += aj2 * (gx[3360] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3584] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3424];
                        Ix = gx[0];
                        Iy = gx[2304];
                        Iz = gx[3520];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[2336] * prod_xz;
                        v_ky += ak2 * gx[2560] * prod_xz;
                        v_iz += (ai2 * gx[3552] - 2 * gx[3488]) * prod_xy;
                        v_kz += (ak2 * gx[3776] - 1 * gx[3264]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2336] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2560] - ylyk * Iy) - 1 * gx[1536]) * prod_xz;
                        v_jz += (aj2 * (gx[3552] - zjzi * Iz) - 1 * gx[3392]) * prod_xy;
                        v_lz += al2 * (gx[3776] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3680];
                        Ix = gx[288];
                        Iy = gx[1696];
                        Iz = gx[3840];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += ak2 * gx[1952] * prod_xz;
                        v_iz += ai2 * gx[3872] * prod_xy;
                        v_kz += ak2 * gx[4096] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3872] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4096] - zlzk * Iz) - 1 * gx[3072]) * prod_xy;
                        dd = dd_cache[3936];
                        Ix = gx[256];
                        Iy = gx[1600];
                        Iz = gx[3968];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += ak2 * gx[1856] * prod_xz;
                        v_iz += ai2 * gx[4000] * prod_xy;
                        v_kz += ak2 * gx[4224] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1856] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4000] - zjzi * Iz) - 1 * gx[3840]) * prod_xy;
                        v_lz += (al2 * (gx[4224] - zlzk * Iz) - 1 * gx[3200]) * prod_xy;
                        dd = dd_cache[4192];
                        Ix = gx[128];
                        Iy = gx[1792];
                        Iz = gx[3904];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xz;
                        v_iz += (ai2 * gx[3936] - 2 * gx[3872]) * prod_xy;
                        v_kz += ak2 * gx[4160] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3936] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4160] - zlzk * Iz) - 1 * gx[3136]) * prod_xy;
                        dd = dd_cache[4448];
                        Ix = gx[32];
                        Iy = gx[1824];
                        Iz = gx[3968];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xz;
                        v_ky += (ak2 * gx[2080] - 1 * gx[1568]) * prod_xz;
                        v_iz += ai2 * gx[4000] * prod_xy;
                        v_kz += ak2 * gx[4224] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1856] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2080] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4000] - zjzi * Iz) - 1 * gx[3840]) * prod_xy;
                        v_lz += (al2 * (gx[4224] - zlzk * Iz) - 1 * gx[3200]) * prod_xy;
                        dd = dd_cache[4704];
                        Ix = gx[128];
                        Iy = gx[1600];
                        Iz = gx[4096];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += ak2 * gx[1856] * prod_xz;
                        v_iz += ai2 * gx[4128] * prod_xy;
                        v_kz += (ak2 * gx[4352] - 1 * gx[3840]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1856] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[4128] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4352] - zlzk * Iz) - 1 * gx[3328]) * prod_xy;
                        dd = dd_cache[4960];
                        Ix = gx[0];
                        Iy = gx[1664];
                        Iz = gx[4160];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += (ai2 * gx[4192] - 2 * gx[4128]) * prod_xy;
                        v_kz += (ak2 * gx[4416] - 1 * gx[3904]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[4192] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4416] - zlzk * Iz) - 1 * gx[3392]) * prod_xy;
                        break;
                    case 4:
                        dd = dd_cache[128];
                        Ix = gx[1152];
                        Iy = gx[1568];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[1184] * prod_yz;
                        v_kx += (ak2 * gx[1408] - 1 * gx[896]) * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += (aj2 * (gx[1184] - xjxi * Ix) - 1 * gx[1024]) * prod_yz;
                        v_lx += (al2 * (gx[1408] - xlxk * Ix) - 1 * gx[384]) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[384];
                        Ix = gx[1088];
                        Iy = gx[1536];
                        Iz = gx[3200];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[1120] - 2 * gx[1056]) * prod_yz;
                        v_kx += (ak2 * gx[1344] - 1 * gx[832]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += ai2 * gx[3232] * prod_xy;
                        v_kz += ak2 * gx[3456] * prod_xy;
                        v_jx += aj2 * (gx[1120] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1344] - xlxk * Ix) - 1 * gx[320]) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3232] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += al2 * (gx[3456] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[640];
                        Ix = gx[928];
                        Iy = gx[1792];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[960] - 1 * gx[896]) * prod_yz;
                        v_kx += ak2 * gx[1184] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += (aj2 * (gx[960] - xjxi * Ix) - 1 * gx[800]) * prod_yz;
                        v_lx += (al2 * (gx[1184] - xlxk * Ix) - 1 * gx[160]) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[896];
                        Ix = gx[768];
                        Iy = gx[1952];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += ak2 * gx[1024] * prod_yz;
                        v_iy += (ai2 * gx[1984] - 1 * gx[1920]) * prod_xz;
                        v_ky += (ak2 * gx[2208] - 1 * gx[1696]) * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1024] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += (aj2 * (gx[1984] - yjyi * Iy) - 1 * gx[1824]) * prod_xz;
                        v_ly += al2 * (gx[2208] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1152];
                        Ix = gx[960];
                        Iy = gx[1536];
                        Iz = gx[3328];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[992] - 2 * gx[928]) * prod_yz;
                        v_kx += ak2 * gx[1216] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += ai2 * gx[3360] * prod_xy;
                        v_kz += (ak2 * gx[3584] - 1 * gx[3072]) * prod_xy;
                        v_jx += (aj2 * (gx[992] - xjxi * Ix) - 1 * gx[832]) * prod_yz;
                        v_lx += (al2 * (gx[1216] - xlxk * Ix) - 1 * gx[192]) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3360] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3584] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1408];
                        Ix = gx[800];
                        Iy = gx[1664];
                        Iz = gx[3360];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[832] - 1 * gx[768]) * prod_yz;
                        v_kx += ak2 * gx[1056] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += (ai2 * gx[3392] - 1 * gx[3328]) * prod_xy;
                        v_kz += (ak2 * gx[3616] - 1 * gx[3104]) * prod_xy;
                        v_jx += aj2 * (gx[832] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1056] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3392] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3616] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1664];
                        Ix = gx[768];
                        Iy = gx[1568];
                        Iz = gx[3488];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += ak2 * gx[1024] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += (ai2 * gx[3520] - 1 * gx[3456]) * prod_xy;
                        v_kz += (ak2 * gx[3744] - 1 * gx[3232]) * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1024] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3520] - zjzi * Iz) - 1 * gx[3360]) * prod_xy;
                        v_lz += al2 * (gx[3744] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1920];
                        Ix = gx[320];
                        Iy = gx[2432];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[576] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[2464] * prod_xz;
                        v_ky += ak2 * gx[2688] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += aj2 * (gx[352] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2464] - yjyi * Iy) - 1 * gx[2304]) * prod_xz;
                        v_ly += (al2 * (gx[2688] - ylyk * Iy) - 1 * gx[1664]) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2176];
                        Ix = gx[288];
                        Iy = gx[2304];
                        Iz = gx[3232];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[2336] * prod_xz;
                        v_ky += ak2 * gx[2560] * prod_xz;
                        v_iz += (ai2 * gx[3264] - 1 * gx[3200]) * prod_xy;
                        v_kz += ak2 * gx[3488] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2336] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2560] - ylyk * Iy) - 1 * gx[1536]) * prod_xz;
                        v_jz += (aj2 * (gx[3264] - zjzi * Iz) - 1 * gx[3104]) * prod_xy;
                        v_lz += al2 * (gx[3488] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2432];
                        Ix = gx[128];
                        Iy = gx[2592];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xz;
                        v_ky += (ak2 * gx[2848] - 1 * gx[2336]) * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2624] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2848] - ylyk * Iy) - 1 * gx[1824]) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2688];
                        Ix = gx[64];
                        Iy = gx[2560];
                        Iz = gx[3200];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[2592] * prod_xz;
                        v_ky += (ak2 * gx[2816] - 1 * gx[2304]) * prod_xz;
                        v_iz += ai2 * gx[3232] * prod_xy;
                        v_kz += ak2 * gx[3456] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2592] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2816] - ylyk * Iy) - 1 * gx[1792]) * prod_xz;
                        v_jz += (aj2 * (gx[3232] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += al2 * (gx[3456] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2944];
                        Ix = gx[160];
                        Iy = gx[2304];
                        Iz = gx[3360];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[2336] * prod_xz;
                        v_ky += ak2 * gx[2560] * prod_xz;
                        v_iz += (ai2 * gx[3392] - 1 * gx[3328]) * prod_xy;
                        v_kz += (ak2 * gx[3616] - 1 * gx[3104]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2336] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2560] - ylyk * Iy) - 1 * gx[1536]) * prod_xz;
                        v_jz += aj2 * (gx[3392] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3616] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3200];
                        Ix = gx[0];
                        Iy = gx[2464];
                        Iz = gx[3360];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xz;
                        v_ky += ak2 * gx[2720] * prod_xz;
                        v_iz += (ai2 * gx[3392] - 1 * gx[3328]) * prod_xy;
                        v_kz += (ak2 * gx[3616] - 1 * gx[3104]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2496] - yjyi * Iy) - 1 * gx[2336]) * prod_xz;
                        v_ly += (al2 * (gx[2720] - ylyk * Iy) - 1 * gx[1696]) * prod_xz;
                        v_jz += aj2 * (gx[3392] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3616] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3456];
                        Ix = gx[448];
                        Iy = gx[1536];
                        Iz = gx[3840];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[480] - 2 * gx[416]) * prod_yz;
                        v_kx += (ak2 * gx[704] - 1 * gx[192]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += ai2 * gx[3872] * prod_xy;
                        v_kz += ak2 * gx[4096] * prod_xy;
                        v_jx += (aj2 * (gx[480] - xjxi * Ix) - 1 * gx[320]) * prod_yz;
                        v_lx += al2 * (gx[704] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3872] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4096] - zlzk * Iz) - 1 * gx[3072]) * prod_xy;
                        dd = dd_cache[3712];
                        Ix = gx[288];
                        Iy = gx[1664];
                        Iz = gx[3872];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += (ai2 * gx[3904] - 1 * gx[3840]) * prod_xy;
                        v_kz += ak2 * gx[4128] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3904] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4128] - zlzk * Iz) - 1 * gx[3104]) * prod_xy;
                        dd = dd_cache[3968];
                        Ix = gx[256];
                        Iy = gx[1568];
                        Iz = gx[4000];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += (ai2 * gx[4032] - 1 * gx[3968]) * prod_xy;
                        v_kz += ak2 * gx[4256] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4032] - zjzi * Iz) - 1 * gx[3872]) * prod_xy;
                        v_lz += (al2 * (gx[4256] - zlzk * Iz) - 1 * gx[3232]) * prod_xy;
                        dd = dd_cache[4224];
                        Ix = gx[64];
                        Iy = gx[1920];
                        Iz = gx[3840];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1952] * prod_xz;
                        v_ky += (ak2 * gx[2176] - 1 * gx[1664]) * prod_xz;
                        v_iz += ai2 * gx[3872] * prod_xy;
                        v_kz += ak2 * gx[4096] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1952] - yjyi * Iy) - 1 * gx[1792]) * prod_xz;
                        v_ly += al2 * (gx[2176] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3872] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4096] - zlzk * Iz) - 1 * gx[3072]) * prod_xy;
                        dd = dd_cache[4480];
                        Ix = gx[32];
                        Iy = gx[1792];
                        Iz = gx[4000];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xz;
                        v_iz += (ai2 * gx[4032] - 1 * gx[3968]) * prod_xy;
                        v_kz += ak2 * gx[4256] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4032] - zjzi * Iz) - 1 * gx[3872]) * prod_xy;
                        v_lz += (al2 * (gx[4256] - zlzk * Iz) - 1 * gx[3232]) * prod_xy;
                        dd = dd_cache[4736];
                        Ix = gx[128];
                        Iy = gx[1568];
                        Iz = gx[4128];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += (ai2 * gx[4160] - 1 * gx[4096]) * prod_xy;
                        v_kz += (ak2 * gx[4384] - 1 * gx[3872]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[4160] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4384] - zlzk * Iz) - 1 * gx[3360]) * prod_xy;
                        dd = dd_cache[4992];
                        Ix = gx[64];
                        Iy = gx[1536];
                        Iz = gx[4224];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += ai2 * gx[4256] * prod_xy;
                        v_kz += (ak2 * gx[4480] - 1 * gx[3968]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4256] - zjzi * Iz) - 1 * gx[4096]) * prod_xy;
                        v_lz += (al2 * (gx[4480] - zlzk * Iz) - 1 * gx[3456]) * prod_xy;
                        break;
                    case 5:
                        dd = dd_cache[160];
                        Ix = gx[1152];
                        Iy = gx[1536];
                        Iz = gx[3136];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[1184] * prod_yz;
                        v_kx += (ak2 * gx[1408] - 1 * gx[896]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[3168] - 2 * gx[3104]) * prod_xy;
                        v_kz += ak2 * gx[3392] * prod_xy;
                        v_jx += (aj2 * (gx[1184] - xjxi * Ix) - 1 * gx[1024]) * prod_yz;
                        v_lx += (al2 * (gx[1408] - xlxk * Ix) - 1 * gx[384]) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3168] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3392] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[416];
                        Ix = gx[1056];
                        Iy = gx[1568];
                        Iz = gx[3200];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[1088] - 1 * gx[1024]) * prod_yz;
                        v_kx += (ak2 * gx[1312] - 1 * gx[800]) * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += ai2 * gx[3232] * prod_xy;
                        v_kz += ak2 * gx[3456] * prod_xy;
                        v_jx += aj2 * (gx[1088] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1312] - xlxk * Ix) - 1 * gx[288]) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3232] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += al2 * (gx[3456] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[672];
                        Ix = gx[896];
                        Iy = gx[1856];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[928] * prod_yz;
                        v_kx += ak2 * gx[1152] * prod_yz;
                        v_iy += (ai2 * gx[1888] - 2 * gx[1824]) * prod_xz;
                        v_ky += (ak2 * gx[2112] - 1 * gx[1600]) * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += (aj2 * (gx[928] - xjxi * Ix) - 1 * gx[768]) * prod_yz;
                        v_lx += (al2 * (gx[1152] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1888] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2112] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[928];
                        Ix = gx[768];
                        Iy = gx[1920];
                        Iz = gx[3136];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += ak2 * gx[1024] * prod_yz;
                        v_iy += ai2 * gx[1952] * prod_xz;
                        v_ky += (ak2 * gx[2176] - 1 * gx[1664]) * prod_xz;
                        v_iz += (ai2 * gx[3168] - 2 * gx[3104]) * prod_xy;
                        v_kz += ak2 * gx[3392] * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1024] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += (aj2 * (gx[1952] - yjyi * Iy) - 1 * gx[1792]) * prod_xz;
                        v_ly += al2 * (gx[2176] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3168] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3392] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1184];
                        Ix = gx[928];
                        Iy = gx[1568];
                        Iz = gx[3328];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[960] - 1 * gx[896]) * prod_yz;
                        v_kx += ak2 * gx[1184] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += ai2 * gx[3360] * prod_xy;
                        v_kz += (ak2 * gx[3584] - 1 * gx[3072]) * prod_xy;
                        v_jx += (aj2 * (gx[960] - xjxi * Ix) - 1 * gx[800]) * prod_yz;
                        v_lx += (al2 * (gx[1184] - xlxk * Ix) - 1 * gx[160]) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3360] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3584] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1440];
                        Ix = gx[768];
                        Iy = gx[1728];
                        Iz = gx[3328];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += ak2 * gx[1024] * prod_yz;
                        v_iy += (ai2 * gx[1760] - 2 * gx[1696]) * prod_xz;
                        v_ky += ak2 * gx[1984] * prod_xz;
                        v_iz += ai2 * gx[3360] * prod_xy;
                        v_kz += (ak2 * gx[3584] - 1 * gx[3072]) * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1024] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += (aj2 * (gx[1760] - yjyi * Iy) - 1 * gx[1600]) * prod_xz;
                        v_ly += al2 * (gx[1984] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3360] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3584] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1696];
                        Ix = gx[768];
                        Iy = gx[1536];
                        Iz = gx[3520];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += ak2 * gx[1024] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[3552] - 2 * gx[3488]) * prod_xy;
                        v_kz += (ak2 * gx[3776] - 1 * gx[3264]) * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1024] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3552] - zjzi * Iz) - 1 * gx[3392]) * prod_xy;
                        v_lz += al2 * (gx[3776] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1952];
                        Ix = gx[288];
                        Iy = gx[2464];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xz;
                        v_ky += ak2 * gx[2720] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2496] - yjyi * Iy) - 1 * gx[2336]) * prod_xz;
                        v_ly += (al2 * (gx[2720] - ylyk * Iy) - 1 * gx[1696]) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2208];
                        Ix = gx[256];
                        Iy = gx[2368];
                        Iz = gx[3200];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xz;
                        v_ky += ak2 * gx[2624] * prod_xz;
                        v_iz += ai2 * gx[3232] * prod_xy;
                        v_kz += ak2 * gx[3456] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2400] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2624] - ylyk * Iy) - 1 * gx[1600]) * prod_xz;
                        v_jz += (aj2 * (gx[3232] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += al2 * (gx[3456] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2464];
                        Ix = gx[128];
                        Iy = gx[2560];
                        Iz = gx[3136];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[2592] * prod_xz;
                        v_ky += (ak2 * gx[2816] - 1 * gx[2304]) * prod_xz;
                        v_iz += (ai2 * gx[3168] - 2 * gx[3104]) * prod_xy;
                        v_kz += ak2 * gx[3392] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2592] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2816] - ylyk * Iy) - 1 * gx[1792]) * prod_xz;
                        v_jz += aj2 * (gx[3168] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3392] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2720];
                        Ix = gx[32];
                        Iy = gx[2592];
                        Iz = gx[3200];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xz;
                        v_ky += (ak2 * gx[2848] - 1 * gx[2336]) * prod_xz;
                        v_iz += ai2 * gx[3232] * prod_xy;
                        v_kz += ak2 * gx[3456] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2624] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2848] - ylyk * Iy) - 1 * gx[1824]) * prod_xz;
                        v_jz += (aj2 * (gx[3232] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += al2 * (gx[3456] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2976];
                        Ix = gx[128];
                        Iy = gx[2368];
                        Iz = gx[3328];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xz;
                        v_ky += ak2 * gx[2624] * prod_xz;
                        v_iz += ai2 * gx[3360] * prod_xy;
                        v_kz += (ak2 * gx[3584] - 1 * gx[3072]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2400] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2624] - ylyk * Iy) - 1 * gx[1600]) * prod_xz;
                        v_jz += aj2 * (gx[3360] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3584] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3232];
                        Ix = gx[0];
                        Iy = gx[2432];
                        Iz = gx[3392];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[2464] * prod_xz;
                        v_ky += ak2 * gx[2688] * prod_xz;
                        v_iz += (ai2 * gx[3424] - 2 * gx[3360]) * prod_xy;
                        v_kz += (ak2 * gx[3648] - 1 * gx[3136]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2464] - yjyi * Iy) - 1 * gx[2304]) * prod_xz;
                        v_ly += (al2 * (gx[2688] - ylyk * Iy) - 1 * gx[1664]) * prod_xz;
                        v_jz += aj2 * (gx[3424] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3648] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3488];
                        Ix = gx[416];
                        Iy = gx[1568];
                        Iz = gx[3840];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[672] - 1 * gx[160]) * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += ai2 * gx[3872] * prod_xy;
                        v_kz += ak2 * gx[4096] * prod_xy;
                        v_jx += (aj2 * (gx[448] - xjxi * Ix) - 1 * gx[288]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3872] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4096] - zlzk * Iz) - 1 * gx[3072]) * prod_xy;
                        dd = dd_cache[3744];
                        Ix = gx[256];
                        Iy = gx[1728];
                        Iz = gx[3840];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1760] - 2 * gx[1696]) * prod_xz;
                        v_ky += ak2 * gx[1984] * prod_xz;
                        v_iz += ai2 * gx[3872] * prod_xy;
                        v_kz += ak2 * gx[4096] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1760] - yjyi * Iy) - 1 * gx[1600]) * prod_xz;
                        v_ly += al2 * (gx[1984] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3872] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4096] - zlzk * Iz) - 1 * gx[3072]) * prod_xy;
                        dd = dd_cache[4000];
                        Ix = gx[256];
                        Iy = gx[1536];
                        Iz = gx[4032];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[4064] - 2 * gx[4000]) * prod_xy;
                        v_kz += ak2 * gx[4288] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4064] - zjzi * Iz) - 1 * gx[3904]) * prod_xy;
                        v_lz += (al2 * (gx[4288] - zlzk * Iz) - 1 * gx[3264]) * prod_xy;
                        dd = dd_cache[4256];
                        Ix = gx[32];
                        Iy = gx[1952];
                        Iz = gx[3840];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1984] - 1 * gx[1920]) * prod_xz;
                        v_ky += (ak2 * gx[2208] - 1 * gx[1696]) * prod_xz;
                        v_iz += ai2 * gx[3872] * prod_xy;
                        v_kz += ak2 * gx[4096] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1984] - yjyi * Iy) - 1 * gx[1824]) * prod_xz;
                        v_ly += al2 * (gx[2208] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3872] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4096] - zlzk * Iz) - 1 * gx[3072]) * prod_xy;
                        dd = dd_cache[4512];
                        Ix = gx[0];
                        Iy = gx[1856];
                        Iz = gx[3968];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1888] - 2 * gx[1824]) * prod_xz;
                        v_ky += (ak2 * gx[2112] - 1 * gx[1600]) * prod_xz;
                        v_iz += ai2 * gx[4000] * prod_xy;
                        v_kz += ak2 * gx[4224] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1888] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2112] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4000] - zjzi * Iz) - 1 * gx[3840]) * prod_xy;
                        v_lz += (al2 * (gx[4224] - zlzk * Iz) - 1 * gx[3200]) * prod_xy;
                        dd = dd_cache[4768];
                        Ix = gx[128];
                        Iy = gx[1536];
                        Iz = gx[4160];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[4192] - 2 * gx[4128]) * prod_xy;
                        v_kz += (ak2 * gx[4416] - 1 * gx[3904]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[4192] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4416] - zlzk * Iz) - 1 * gx[3392]) * prod_xy;
                        dd = dd_cache[5024];
                        Ix = gx[32];
                        Iy = gx[1568];
                        Iz = gx[4224];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += ai2 * gx[4256] * prod_xy;
                        v_kz += (ak2 * gx[4480] - 1 * gx[3968]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4256] - zjzi * Iz) - 1 * gx[4096]) * prod_xy;
                        v_lz += (al2 * (gx[4480] - zlzk * Iz) - 1 * gx[3456]) * prod_xy;
                        break;
                    case 6:
                        dd = dd_cache[192];
                        Ix = gx[1088];
                        Iy = gx[1664];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[1120] - 2 * gx[1056]) * prod_yz;
                        v_kx += (ak2 * gx[1344] - 1 * gx[832]) * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += aj2 * (gx[1120] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1344] - xlxk * Ix) - 1 * gx[320]) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[448];
                        Ix = gx[1056];
                        Iy = gx[1536];
                        Iz = gx[3232];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[1088] - 1 * gx[1024]) * prod_yz;
                        v_kx += (ak2 * gx[1312] - 1 * gx[800]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[3264] - 1 * gx[3200]) * prod_xy;
                        v_kz += ak2 * gx[3488] * prod_xy;
                        v_jx += aj2 * (gx[1088] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1312] - xlxk * Ix) - 1 * gx[288]) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3264] - zjzi * Iz) - 1 * gx[3104]) * prod_xy;
                        v_lz += al2 * (gx[3488] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[704];
                        Ix = gx[896];
                        Iy = gx[1824];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[928] * prod_yz;
                        v_kx += ak2 * gx[1152] * prod_yz;
                        v_iy += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xz;
                        v_ky += (ak2 * gx[2080] - 1 * gx[1568]) * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += (aj2 * (gx[928] - xjxi * Ix) - 1 * gx[768]) * prod_yz;
                        v_lx += (al2 * (gx[1152] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1856] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2080] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[960];
                        Ix = gx[832];
                        Iy = gx[1792];
                        Iz = gx[3200];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[864] - 2 * gx[800]) * prod_yz;
                        v_kx += ak2 * gx[1088] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xz;
                        v_iz += ai2 * gx[3232] * prod_xy;
                        v_kz += ak2 * gx[3456] * prod_xy;
                        v_jx += aj2 * (gx[864] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1088] - xlxk * Ix) - 1 * gx[64]) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3232] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += al2 * (gx[3456] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1216];
                        Ix = gx[928];
                        Iy = gx[1536];
                        Iz = gx[3360];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[960] - 1 * gx[896]) * prod_yz;
                        v_kx += ak2 * gx[1184] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[3392] - 1 * gx[3328]) * prod_xy;
                        v_kz += (ak2 * gx[3616] - 1 * gx[3104]) * prod_xy;
                        v_jx += (aj2 * (gx[960] - xjxi * Ix) - 1 * gx[800]) * prod_yz;
                        v_lx += (al2 * (gx[1184] - xlxk * Ix) - 1 * gx[160]) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3392] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3616] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1472];
                        Ix = gx[768];
                        Iy = gx[1696];
                        Iz = gx[3360];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += ak2 * gx[1024] * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += ak2 * gx[1952] * prod_xz;
                        v_iz += (ai2 * gx[3392] - 1 * gx[3328]) * prod_xy;
                        v_kz += (ak2 * gx[3616] - 1 * gx[3104]) * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1024] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3392] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3616] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1728];
                        Ix = gx[448];
                        Iy = gx[2304];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[480] - 2 * gx[416]) * prod_yz;
                        v_kx += (ak2 * gx[704] - 1 * gx[192]) * prod_yz;
                        v_iy += ai2 * gx[2336] * prod_xz;
                        v_ky += ak2 * gx[2560] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += (aj2 * (gx[480] - xjxi * Ix) - 1 * gx[320]) * prod_yz;
                        v_lx += al2 * (gx[704] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2336] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2560] - ylyk * Iy) - 1 * gx[1536]) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1984];
                        Ix = gx[288];
                        Iy = gx[2432];
                        Iz = gx[3104];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[2464] * prod_xz;
                        v_ky += ak2 * gx[2688] * prod_xz;
                        v_iz += (ai2 * gx[3136] - 1 * gx[3072]) * prod_xy;
                        v_kz += ak2 * gx[3360] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2464] - yjyi * Iy) - 1 * gx[2304]) * prod_xz;
                        v_ly += (al2 * (gx[2688] - ylyk * Iy) - 1 * gx[1664]) * prod_xz;
                        v_jz += aj2 * (gx[3136] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2240];
                        Ix = gx[256];
                        Iy = gx[2336];
                        Iz = gx[3232];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xz;
                        v_ky += ak2 * gx[2592] * prod_xz;
                        v_iz += (ai2 * gx[3264] - 1 * gx[3200]) * prod_xy;
                        v_kz += ak2 * gx[3488] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2368] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2592] - ylyk * Iy) - 1 * gx[1568]) * prod_xz;
                        v_jz += (aj2 * (gx[3264] - zjzi * Iz) - 1 * gx[3104]) * prod_xy;
                        v_lz += al2 * (gx[3488] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2496];
                        Ix = gx[64];
                        Iy = gx[2688];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[2720] * prod_xz;
                        v_ky += (ak2 * gx[2944] - 1 * gx[2432]) * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2720] - yjyi * Iy) - 1 * gx[2560]) * prod_xz;
                        v_ly += (al2 * (gx[2944] - ylyk * Iy) - 1 * gx[1920]) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2752];
                        Ix = gx[32];
                        Iy = gx[2560];
                        Iz = gx[3232];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[2592] * prod_xz;
                        v_ky += (ak2 * gx[2816] - 1 * gx[2304]) * prod_xz;
                        v_iz += (ai2 * gx[3264] - 1 * gx[3200]) * prod_xy;
                        v_kz += ak2 * gx[3488] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2592] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2816] - ylyk * Iy) - 1 * gx[1792]) * prod_xz;
                        v_jz += (aj2 * (gx[3264] - zjzi * Iz) - 1 * gx[3104]) * prod_xy;
                        v_lz += al2 * (gx[3488] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3008];
                        Ix = gx[128];
                        Iy = gx[2336];
                        Iz = gx[3360];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xz;
                        v_ky += ak2 * gx[2592] * prod_xz;
                        v_iz += (ai2 * gx[3392] - 1 * gx[3328]) * prod_xy;
                        v_kz += (ak2 * gx[3616] - 1 * gx[3104]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2368] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2592] - ylyk * Iy) - 1 * gx[1568]) * prod_xz;
                        v_jz += aj2 * (gx[3392] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3616] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3264];
                        Ix = gx[64];
                        Iy = gx[2304];
                        Iz = gx[3456];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[2336] * prod_xz;
                        v_ky += ak2 * gx[2560] * prod_xz;
                        v_iz += ai2 * gx[3488] * prod_xy;
                        v_kz += (ak2 * gx[3712] - 1 * gx[3200]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2336] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2560] - ylyk * Iy) - 1 * gx[1536]) * prod_xz;
                        v_jz += (aj2 * (gx[3488] - zjzi * Iz) - 1 * gx[3328]) * prod_xy;
                        v_lz += al2 * (gx[3712] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3520];
                        Ix = gx[416];
                        Iy = gx[1536];
                        Iz = gx[3872];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[672] - 1 * gx[160]) * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[3904] - 1 * gx[3840]) * prod_xy;
                        v_kz += ak2 * gx[4128] * prod_xy;
                        v_jx += (aj2 * (gx[448] - xjxi * Ix) - 1 * gx[288]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3904] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4128] - zlzk * Iz) - 1 * gx[3104]) * prod_xy;
                        dd = dd_cache[3776];
                        Ix = gx[256];
                        Iy = gx[1696];
                        Iz = gx[3872];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += ak2 * gx[1952] * prod_xz;
                        v_iz += (ai2 * gx[3904] - 1 * gx[3840]) * prod_xy;
                        v_kz += ak2 * gx[4128] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3904] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4128] - zlzk * Iz) - 1 * gx[3104]) * prod_xy;
                        dd = dd_cache[4032];
                        Ix = gx[192];
                        Iy = gx[1792];
                        Iz = gx[3840];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xz;
                        v_iz += ai2 * gx[3872] * prod_xy;
                        v_kz += ak2 * gx[4096] * prod_xy;
                        v_jx += (aj2 * (gx[224] - xjxi * Ix) - 1 * gx[64]) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3872] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4096] - zlzk * Iz) - 1 * gx[3072]) * prod_xy;
                        dd = dd_cache[4288];
                        Ix = gx[32];
                        Iy = gx[1920];
                        Iz = gx[3872];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1952] * prod_xz;
                        v_ky += (ak2 * gx[2176] - 1 * gx[1664]) * prod_xz;
                        v_iz += (ai2 * gx[3904] - 1 * gx[3840]) * prod_xy;
                        v_kz += ak2 * gx[4128] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1952] - yjyi * Iy) - 1 * gx[1792]) * prod_xz;
                        v_ly += al2 * (gx[2176] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3904] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4128] - zlzk * Iz) - 1 * gx[3104]) * prod_xy;
                        dd = dd_cache[4544];
                        Ix = gx[0];
                        Iy = gx[1824];
                        Iz = gx[4000];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xz;
                        v_ky += (ak2 * gx[2080] - 1 * gx[1568]) * prod_xz;
                        v_iz += (ai2 * gx[4032] - 1 * gx[3968]) * prod_xy;
                        v_kz += ak2 * gx[4256] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1856] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2080] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4032] - zjzi * Iz) - 1 * gx[3872]) * prod_xy;
                        v_lz += (al2 * (gx[4256] - zlzk * Iz) - 1 * gx[3232]) * prod_xy;
                        dd = dd_cache[4800];
                        Ix = gx[64];
                        Iy = gx[1664];
                        Iz = gx[4096];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += ai2 * gx[4128] * prod_xy;
                        v_kz += (ak2 * gx[4352] - 1 * gx[3840]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[4128] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4352] - zlzk * Iz) - 1 * gx[3328]) * prod_xy;
                        dd = dd_cache[5056];
                        Ix = gx[32];
                        Iy = gx[1536];
                        Iz = gx[4256];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[4288] - 1 * gx[4224]) * prod_xy;
                        v_kz += (ak2 * gx[4512] - 1 * gx[4000]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4288] - zjzi * Iz) - 1 * gx[4128]) * prod_xy;
                        v_lz += (al2 * (gx[4512] - zlzk * Iz) - 1 * gx[3488]) * prod_xy;
                        break;
                    case 7:
                        dd = dd_cache[224];
                        Ix = gx[1056];
                        Iy = gx[1696];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[1088] - 1 * gx[1024]) * prod_yz;
                        v_kx += (ak2 * gx[1312] - 1 * gx[800]) * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += ak2 * gx[1952] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += aj2 * (gx[1088] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1312] - xlxk * Ix) - 1 * gx[288]) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[480];
                        Ix = gx[1024];
                        Iy = gx[1600];
                        Iz = gx[3200];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[1056] * prod_yz;
                        v_kx += (ak2 * gx[1280] - 1 * gx[768]) * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += ak2 * gx[1856] * prod_xz;
                        v_iz += ai2 * gx[3232] * prod_xy;
                        v_kz += ak2 * gx[3456] * prod_xy;
                        v_jx += aj2 * (gx[1056] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1280] - xlxk * Ix) - 1 * gx[256]) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1856] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3232] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += al2 * (gx[3456] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[736];
                        Ix = gx[896];
                        Iy = gx[1792];
                        Iz = gx[3136];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[928] * prod_yz;
                        v_kx += ak2 * gx[1152] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xz;
                        v_iz += (ai2 * gx[3168] - 2 * gx[3104]) * prod_xy;
                        v_kz += ak2 * gx[3392] * prod_xy;
                        v_jx += (aj2 * (gx[928] - xjxi * Ix) - 1 * gx[768]) * prod_yz;
                        v_lx += (al2 * (gx[1152] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3168] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3392] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[992];
                        Ix = gx[800];
                        Iy = gx[1824];
                        Iz = gx[3200];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[832] - 1 * gx[768]) * prod_yz;
                        v_kx += ak2 * gx[1056] * prod_yz;
                        v_iy += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xz;
                        v_ky += (ak2 * gx[2080] - 1 * gx[1568]) * prod_xz;
                        v_iz += ai2 * gx[3232] * prod_xy;
                        v_kz += ak2 * gx[3456] * prod_xy;
                        v_jx += aj2 * (gx[832] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1056] - xlxk * Ix) - 1 * gx[32]) * prod_yz;
                        v_jy += aj2 * (gx[1856] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2080] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3232] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += al2 * (gx[3456] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1248];
                        Ix = gx[896];
                        Iy = gx[1600];
                        Iz = gx[3328];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[928] * prod_yz;
                        v_kx += ak2 * gx[1152] * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += ak2 * gx[1856] * prod_xz;
                        v_iz += ai2 * gx[3360] * prod_xy;
                        v_kz += (ak2 * gx[3584] - 1 * gx[3072]) * prod_xy;
                        v_jx += (aj2 * (gx[928] - xjxi * Ix) - 1 * gx[768]) * prod_yz;
                        v_lx += (al2 * (gx[1152] - xlxk * Ix) - 1 * gx[128]) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1856] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3360] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3584] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1504];
                        Ix = gx[768];
                        Iy = gx[1664];
                        Iz = gx[3392];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[800] * prod_yz;
                        v_kx += ak2 * gx[1024] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += (ai2 * gx[3424] - 2 * gx[3360]) * prod_xy;
                        v_kz += (ak2 * gx[3648] - 1 * gx[3136]) * prod_xy;
                        v_jx += aj2 * (gx[800] - xjxi * Ix) * prod_yz;
                        v_lx += (al2 * (gx[1024] - xlxk * Ix) - 1 * gx[0]) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3424] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3648] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1760];
                        Ix = gx[416];
                        Iy = gx[2336];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[672] - 1 * gx[160]) * prod_yz;
                        v_iy += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xz;
                        v_ky += ak2 * gx[2592] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += (aj2 * (gx[448] - xjxi * Ix) - 1 * gx[288]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2368] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2592] - ylyk * Iy) - 1 * gx[1568]) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2016];
                        Ix = gx[256];
                        Iy = gx[2496];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[2528] - 2 * gx[2464]) * prod_xz;
                        v_ky += ak2 * gx[2752] * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2528] - yjyi * Iy) - 1 * gx[2368]) * prod_xz;
                        v_ly += (al2 * (gx[2752] - ylyk * Iy) - 1 * gx[1728]) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2272];
                        Ix = gx[256];
                        Iy = gx[2304];
                        Iz = gx[3264];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[2336] * prod_xz;
                        v_ky += ak2 * gx[2560] * prod_xz;
                        v_iz += (ai2 * gx[3296] - 2 * gx[3232]) * prod_xy;
                        v_kz += ak2 * gx[3520] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2336] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2560] - ylyk * Iy) - 1 * gx[1536]) * prod_xz;
                        v_jz += (aj2 * (gx[3296] - zjzi * Iz) - 1 * gx[3136]) * prod_xy;
                        v_lz += al2 * (gx[3520] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2528];
                        Ix = gx[32];
                        Iy = gx[2720];
                        Iz = gx[3072];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xz;
                        v_ky += (ak2 * gx[2976] - 1 * gx[2464]) * prod_xz;
                        v_iz += ai2 * gx[3104] * prod_xy;
                        v_kz += ak2 * gx[3328] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2752] - yjyi * Iy) - 1 * gx[2592]) * prod_xz;
                        v_ly += (al2 * (gx[2976] - ylyk * Iy) - 1 * gx[1952]) * prod_xz;
                        v_jz += aj2 * (gx[3104] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2784];
                        Ix = gx[0];
                        Iy = gx[2624];
                        Iz = gx[3200];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[2656] - 2 * gx[2592]) * prod_xz;
                        v_ky += (ak2 * gx[2880] - 1 * gx[2368]) * prod_xz;
                        v_iz += ai2 * gx[3232] * prod_xy;
                        v_kz += ak2 * gx[3456] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2656] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2880] - ylyk * Iy) - 1 * gx[1856]) * prod_xz;
                        v_jz += (aj2 * (gx[3232] - zjzi * Iz) - 1 * gx[3072]) * prod_xy;
                        v_lz += al2 * (gx[3456] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3040];
                        Ix = gx[128];
                        Iy = gx[2304];
                        Iz = gx[3392];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[2336] * prod_xz;
                        v_ky += ak2 * gx[2560] * prod_xz;
                        v_iz += (ai2 * gx[3424] - 2 * gx[3360]) * prod_xy;
                        v_kz += (ak2 * gx[3648] - 1 * gx[3136]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2336] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2560] - ylyk * Iy) - 1 * gx[1536]) * prod_xz;
                        v_jz += aj2 * (gx[3424] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3648] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3296];
                        Ix = gx[32];
                        Iy = gx[2336];
                        Iz = gx[3456];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xz;
                        v_ky += ak2 * gx[2592] * prod_xz;
                        v_iz += ai2 * gx[3488] * prod_xy;
                        v_kz += (ak2 * gx[3712] - 1 * gx[3200]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[2368] - yjyi * Iy) * prod_xz;
                        v_ly += (al2 * (gx[2592] - ylyk * Iy) - 1 * gx[1568]) * prod_xz;
                        v_jz += (aj2 * (gx[3488] - zjzi * Iz) - 1 * gx[3328]) * prod_xy;
                        v_lz += al2 * (gx[3712] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3552];
                        Ix = gx[384];
                        Iy = gx[1600];
                        Iz = gx[3840];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += ak2 * gx[1856] * prod_xz;
                        v_iz += ai2 * gx[3872] * prod_xy;
                        v_kz += ak2 * gx[4096] * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1856] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3872] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4096] - zlzk * Iz) - 1 * gx[3072]) * prod_xy;
                        dd = dd_cache[3808];
                        Ix = gx[256];
                        Iy = gx[1664];
                        Iz = gx[3904];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += ak2 * gx[1920] * prod_xz;
                        v_iz += (ai2 * gx[3936] - 2 * gx[3872]) * prod_xy;
                        v_kz += ak2 * gx[4160] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3936] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4160] - zlzk * Iz) - 1 * gx[3136]) * prod_xy;
                        dd = dd_cache[4064];
                        Ix = gx[160];
                        Iy = gx[1824];
                        Iz = gx[3840];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xz;
                        v_ky += (ak2 * gx[2080] - 1 * gx[1568]) * prod_xz;
                        v_iz += ai2 * gx[3872] * prod_xy;
                        v_kz += ak2 * gx[4096] * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1856] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2080] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3872] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4096] - zlzk * Iz) - 1 * gx[3072]) * prod_xy;
                        dd = dd_cache[4320];
                        Ix = gx[0];
                        Iy = gx[1984];
                        Iz = gx[3840];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[2016] - 2 * gx[1952]) * prod_xz;
                        v_ky += (ak2 * gx[2240] - 1 * gx[1728]) * prod_xz;
                        v_iz += ai2 * gx[3872] * prod_xy;
                        v_kz += ak2 * gx[4096] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[2016] - yjyi * Iy) - 1 * gx[1856]) * prod_xz;
                        v_ly += al2 * (gx[2240] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[3872] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4096] - zlzk * Iz) - 1 * gx[3072]) * prod_xy;
                        dd = dd_cache[4576];
                        Ix = gx[0];
                        Iy = gx[1792];
                        Iz = gx[4032];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1536]) * prod_xz;
                        v_iz += (ai2 * gx[4064] - 2 * gx[4000]) * prod_xy;
                        v_kz += ak2 * gx[4288] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1824] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4064] - zjzi * Iz) - 1 * gx[3904]) * prod_xy;
                        v_lz += (al2 * (gx[4288] - zlzk * Iz) - 1 * gx[3264]) * prod_xy;
                        dd = dd_cache[4832];
                        Ix = gx[32];
                        Iy = gx[1696];
                        Iz = gx[4096];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += ak2 * gx[1952] * prod_xz;
                        v_iz += ai2 * gx[4128] * prod_xy;
                        v_kz += (ak2 * gx[4352] - 1 * gx[3840]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[4128] - zjzi * Iz) * prod_xy;
                        v_lz += (al2 * (gx[4352] - zlzk * Iz) - 1 * gx[3328]) * prod_xy;
                        dd = dd_cache[5088];
                        Ix = gx[0];
                        Iy = gx[1600];
                        Iz = gx[4224];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += ak2 * gx[1856] * prod_xz;
                        v_iz += ai2 * gx[4256] * prod_xy;
                        v_kz += (ak2 * gx[4480] - 1 * gx[3968]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1856] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[4256] - zjzi * Iz) - 1 * gx[4096]) * prod_xy;
                        v_lz += (al2 * (gx[4480] - zlzk * Iz) - 1 * gx[3456]) * prod_xy;
                        break;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_2120(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 32;
    constexpr int gout_stride = 8;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    double *dd_cache = dd_pool + blockIdx.x * 3456 + sq_id;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rlrk = shared_memory + sq_id;
    double *Rpq = shared_memory + nsq_per_block * 3 + sq_id;
    double *gx = shared_memory + nsq_per_block * 6 + sq_id;
    double *rw = shared_memory + nsq_per_block * 102 + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (102+nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        if (gout_id == 0) {
            rlrk[0] = xlxk;
            rlrk[32] = ylyk;
            rlrk[64] = zlzk;
        }
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        int do_j = jk.j_factor != 0.;
        int do_k = jk.k_factor != 0.;
        if (jk.n_dm == 1) {
            for (int n = gout_id; n < 108; n+=8) {
                int kl = n / 18;
                int ij = n % 18;
                int i = ij % 6;
                int j = ij / 6;
                int k = kl % 6;
                int l = kl / 6;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm[_jk] * dm[_il] + dm[_jl] * dm[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * dm[_ji] * dm[_lk];
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        } else {
            double *dmb = dm + nao * nao;
            for (int n = gout_id; n < 108; n+=8) {
                int kl = n / 18;
                int ij = n % 18;
                int i = ij % 6;
                int j = ij / 6;
                int k = kl % 6;
                int l = kl / 6;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm [_jk] * dm [_il] + dm [_jl] * dm [_ik] +
                                         dmb[_jk] * dmb[_il] + dmb[_jl] * dmb[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * (dm[_ji] + dmb[_ji]) * (dm[_lk] + dmb[_lk]);
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            __syncthreads();
            if (gout_id == 0) {
                double xlxk = rlrk[0];
                double ylyk = rlrk[32];
                double zlzk = rlrk[64];
                double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
                double ckcl = ck[kp] * cl[lp] * Kcd;
                gx[0] = ckcl;
            }
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double xij = ri[0] + (rjri[0]) * aj_aij;
                double yij = ri[1] + (rjri[1]) * aj_aij;
                double zij = ri[2] + (rjri[2]) * aj_aij;
                double xkl = rk[0] + rlrk[0] * al_akl;
                double ykl = rk[1] + rlrk[32] * al_akl;
                double zkl = rk[2] + rlrk[64] * al_akl;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                __syncthreads();
                if (gout_id == 0) {
                    Rpq[0] = xpq;
                    Rpq[32] = ypq;
                    Rpq[64] = zpq;
                    double cicj = cicj_cache[ijp];
                    gx[1024] = cicj / (aij*akl*sqrt(aij+akl));
                }
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                double s0, s1, s2;
                for (int irys = 0; irys < nroots; ++irys) {
                    __syncthreads();
                    double rt = rw[irys*64];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double rt_akl = rt_aa * aij;
                    double b00 = .5 * rt_aa;
                    double b10 = .5/aij * (1 - rt_aij);
                    double b01 = .5/akl * (1 - rt_akl);
                    for (int n = gout_id; n < 3; n += 8) {
                        if (n == 2) {
                            gx[2048] = rw[irys*64+32];
                        }
                        double *_gx = gx + n * 1024;
                        double xjxi = rjri[n];
                        double Rpa = xjxi * aj_aij;
                        double c0x = Rpa - rt_aij * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = c0x * s0;
                        _gx[32] = s1;
                        s2 = c0x * s1 + 1 * b10 * s0;
                        _gx[64] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 2 * b10 * s0;
                        _gx[96] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 3 * b10 * s0;
                        _gx[128] = s2;
                        double xlxk = rlrk[n*32];
                        double Rqc = xlxk * al_akl;
                        double cpx = Rqc + rt_akl * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = cpx * s0;
                        _gx[256] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        _gx[512] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        _gx[768] = s2;
                        s0 = _gx[32];
                        s1 = cpx * s0;
                        s1 += 1 * b00 * _gx[0];
                        _gx[288] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 1 * b00 * _gx[256];
                        _gx[544] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 1 * b00 * _gx[512];
                        _gx[800] = s2;
                        s0 = _gx[64];
                        s1 = cpx * s0;
                        s1 += 2 * b00 * _gx[32];
                        _gx[320] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 2 * b00 * _gx[288];
                        _gx[576] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 2 * b00 * _gx[544];
                        _gx[832] = s2;
                        s0 = _gx[96];
                        s1 = cpx * s0;
                        s1 += 3 * b00 * _gx[64];
                        _gx[352] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 3 * b00 * _gx[320];
                        _gx[608] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 3 * b00 * _gx[576];
                        _gx[864] = s2;
                        s0 = _gx[128];
                        s1 = cpx * s0;
                        s1 += 4 * b00 * _gx[96];
                        _gx[384] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 4 * b00 * _gx[352];
                        _gx[640] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = cpx*s1 + 2 * b01 *s0;
                        s2 += 4 * b00 * _gx[608];
                        _gx[896] = s2;
                        s1 = _gx[128];
                        s0 = _gx[96];
                        _gx[224] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[64];
                        _gx[192] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[160] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[128] = s1 - xjxi * s0;
                        s1 = _gx[384];
                        s0 = _gx[352];
                        _gx[480] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[320];
                        _gx[448] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[288];
                        _gx[416] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[256];
                        _gx[384] = s1 - xjxi * s0;
                        s1 = _gx[640];
                        s0 = _gx[608];
                        _gx[736] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[576];
                        _gx[704] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[544];
                        _gx[672] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[512];
                        _gx[640] = s1 - xjxi * s0;
                        s1 = _gx[896];
                        s0 = _gx[864];
                        _gx[992] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[832];
                        _gx[960] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[800];
                        _gx[928] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[768];
                        _gx[896] = s1 - xjxi * s0;
                    }
                    __syncthreads();
                    double xjxi = rjri[0];
                    double yjyi = rjri[1];
                    double zjzi = rjri[2];
                    double xlxk = rlrk[0];
                    double ylyk = rlrk[32];
                    double zlzk = rlrk[64];
                    switch (gout_id) {
                    case 0:
                        dd = dd_cache[0];
                        Ix = gx[704];
                        Iy = gx[1024];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[736] - 2 * gx[672]) * prod_yz;
                        v_kx += (ak2 * gx[960] - 2 * gx[448]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += (aj2 * (gx[736] - xjxi * Ix) - 1 * gx[576]) * prod_yz;
                        v_lx += al2 * (gx[960] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[256];
                        Ix = gx[544];
                        Iy = gx[1152];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 2 * gx[288]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1408] * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2336] * prod_xy;
                        v_jx += aj2 * (gx[576] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[800] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1184] - yjyi * Iy) - 1 * gx[1024]) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[512];
                        Ix = gx[512];
                        Iy = gx[1056];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[768] - 2 * gx[256]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += ak2 * gx[2464] * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2240] - zjzi * Iz) - 1 * gx[2080]) * prod_xy;
                        v_lz += al2 * (gx[2464] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[768];
                        Ix = gx[320];
                        Iy = gx[1408];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[576] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1440] * prod_xz;
                        v_ky += (ak2 * gx[1664] - 1 * gx[1152]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += aj2 * (gx[352] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1440] - yjyi * Iy) - 1 * gx[1280]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1024];
                        Ix = gx[288];
                        Iy = gx[1280];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += ak2 * gx[2464] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2240] - zjzi * Iz) - 1 * gx[2080]) * prod_xy;
                        v_lz += al2 * (gx[2464] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1280];
                        Ix = gx[384];
                        Iy = gx[1056];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += (ak2 * gx[2592] - 1 * gx[2080]) * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1536];
                        Ix = gx[320];
                        Iy = gx[1024];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[576] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2176]) * prod_xy;
                        v_jx += aj2 * (gx[352] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1792];
                        Ix = gx[160];
                        Iy = gx[1536];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1792] - 2 * gx[1280]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2336] * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2048];
                        Ix = gx[0];
                        Iy = gx[1696];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += (ak2 * gx[1952] - 2 * gx[1440]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2336] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2304];
                        Ix = gx[192];
                        Iy = gx[1280];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1024]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2560] - 1 * gx[2048]) * prod_xy;
                        v_jx += (aj2 * (gx[224] - xjxi * Ix) - 1 * gx[64]) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2560] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2560];
                        Ix = gx[32];
                        Iy = gx[1408];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1440] * prod_xz;
                        v_ky += (ak2 * gx[1664] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += (ak2 * gx[2592] - 1 * gx[2080]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1440] - yjyi * Iy) - 1 * gx[1280]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2816];
                        Ix = gx[0];
                        Iy = gx[1312];
                        Iz = gx[2464];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1568] - 1 * gx[1056]) * prod_xz;
                        v_iz += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xy;
                        v_kz += (ak2 * gx[2720] - 1 * gx[2208]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2496] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3072];
                        Ix = gx[64];
                        Iy = gx[1152];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1408] * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += (ak2 * gx[2816] - 2 * gx[2304]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1184] - yjyi * Iy) - 1 * gx[1024]) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3328];
                        Ix = gx[32];
                        Iy = gx[1024];
                        Iz = gx[2720];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xy;
                        v_kz += (ak2 * gx[2976] - 2 * gx[2464]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2752] - zjzi * Iz) - 1 * gx[2592]) * prod_xy;
                        v_lz += al2 * (gx[2976] - zlzk * Iz) * prod_xy;
                        break;
                    case 1:
                        dd = dd_cache[32];
                        Ix = gx[672];
                        Iy = gx[1056];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[704] - 1 * gx[640]) * prod_yz;
                        v_kx += (ak2 * gx[928] - 2 * gx[416]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += (aj2 * (gx[704] - xjxi * Ix) - 1 * gx[544]) * prod_yz;
                        v_lx += al2 * (gx[928] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[288];
                        Ix = gx[512];
                        Iy = gx[1216];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[768] - 2 * gx[256]) * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += ak2 * gx[1472] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1248] - yjyi * Iy) - 1 * gx[1088]) * prod_xz;
                        v_ly += al2 * (gx[1472] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[544];
                        Ix = gx[512];
                        Iy = gx[1024];
                        Iz = gx[2240];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[768] - 2 * gx[256]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[2272] - 2 * gx[2208]) * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2272] - zjzi * Iz) - 1 * gx[2112]) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[800];
                        Ix = gx[288];
                        Iy = gx[1440];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1472] - 1 * gx[1408]) * prod_xz;
                        v_ky += (ak2 * gx[1696] - 1 * gx[1184]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1472] - yjyi * Iy) - 1 * gx[1312]) * prod_xz;
                        v_ly += al2 * (gx[1696] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1056];
                        Ix = gx[256];
                        Iy = gx[1344];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1376] - 2 * gx[1312]) * prod_xz;
                        v_ky += (ak2 * gx[1600] - 1 * gx[1088]) * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += ak2 * gx[2432] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1600] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2208] - zjzi * Iz) - 1 * gx[2048]) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1312];
                        Ix = gx[384];
                        Iy = gx[1024];
                        Iz = gx[2368];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xy;
                        v_kz += (ak2 * gx[2624] - 1 * gx[2112]) * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2400] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2624] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1568];
                        Ix = gx[288];
                        Iy = gx[1056];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2176]) * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1824];
                        Ix = gx[128];
                        Iy = gx[1600];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += (ak2 * gx[1856] - 2 * gx[1344]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1856] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2080];
                        Ix = gx[0];
                        Iy = gx[1664];
                        Iz = gx[2112];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 2 * gx[1408]) * prod_xz;
                        v_iz += (ai2 * gx[2144] - 2 * gx[2080]) * prod_xy;
                        v_kz += ak2 * gx[2368] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2144] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2368] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2336];
                        Ix = gx[160];
                        Iy = gx[1312];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1568] - 1 * gx[1056]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2560] - 1 * gx[2048]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2560] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2592];
                        Ix = gx[0];
                        Iy = gx[1472];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1504] - 2 * gx[1440]) * prod_xz;
                        v_ky += (ak2 * gx[1728] - 1 * gx[1216]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2560] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1504] - yjyi * Iy) - 1 * gx[1344]) * prod_xz;
                        v_ly += al2 * (gx[1728] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2560] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2848];
                        Ix = gx[0];
                        Iy = gx[1280];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2528] - 2 * gx[2464]) * prod_xy;
                        v_kz += (ak2 * gx[2752] - 1 * gx[2240]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2528] - zjzi * Iz) - 1 * gx[2368]) * prod_xy;
                        v_lz += al2 * (gx[2752] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3104];
                        Ix = gx[32];
                        Iy = gx[1184];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += (ak2 * gx[2816] - 2 * gx[2304]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1216] - yjyi * Iy) - 1 * gx[1056]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3360];
                        Ix = gx[0];
                        Iy = gx[1088];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[2944] - 2 * gx[2432]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2720] - zjzi * Iz) - 1 * gx[2560]) * prod_xy;
                        v_lz += al2 * (gx[2944] - zlzk * Iz) * prod_xy;
                        break;
                    case 2:
                        dd = dd_cache[64];
                        Ix = gx[672];
                        Iy = gx[1024];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[704] - 1 * gx[640]) * prod_yz;
                        v_kx += (ak2 * gx[928] - 2 * gx[416]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2336] * prod_xy;
                        v_jx += (aj2 * (gx[704] - xjxi * Ix) - 1 * gx[544]) * prod_yz;
                        v_lx += al2 * (gx[928] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[320];
                        Ix = gx[512];
                        Iy = gx[1184];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[768] - 2 * gx[256]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2336] * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1216] - yjyi * Iy) - 1 * gx[1056]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[576];
                        Ix = gx[448];
                        Iy = gx[1280];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[480] - 2 * gx[416]) * prod_yz;
                        v_kx += (ak2 * gx[704] - 1 * gx[192]) * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1024]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += (aj2 * (gx[480] - xjxi * Ix) - 1 * gx[320]) * prod_yz;
                        v_lx += al2 * (gx[704] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[832];
                        Ix = gx[288];
                        Iy = gx[1408];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1440] * prod_xz;
                        v_ky += (ak2 * gx[1664] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2336] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1440] - yjyi * Iy) - 1 * gx[1280]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1088];
                        Ix = gx[256];
                        Iy = gx[1312];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1568] - 1 * gx[1056]) * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += ak2 * gx[2464] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2240] - zjzi * Iz) - 1 * gx[2080]) * prod_xy;
                        v_lz += al2 * (gx[2464] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1344];
                        Ix = gx[320];
                        Iy = gx[1152];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[576] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1408] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2560] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[352] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1184] - yjyi * Iy) - 1 * gx[1024]) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2560] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1600];
                        Ix = gx[288];
                        Iy = gx[1024];
                        Iz = gx[2464];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xy;
                        v_kz += (ak2 * gx[2720] - 1 * gx[2208]) * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2496] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1856];
                        Ix = gx[128];
                        Iy = gx[1568];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += (ak2 * gx[1824] - 2 * gx[1312]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2336] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2112];
                        Ix = gx[64];
                        Iy = gx[1536];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1792] - 2 * gx[1280]) * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += ak2 * gx[2432] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2208] - zjzi * Iz) - 1 * gx[2048]) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2368];
                        Ix = gx[160];
                        Iy = gx[1280];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += (ak2 * gx[2592] - 1 * gx[2080]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2624];
                        Ix = gx[0];
                        Iy = gx[1440];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1472] - 1 * gx[1408]) * prod_xz;
                        v_ky += (ak2 * gx[1696] - 1 * gx[1184]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += (ak2 * gx[2592] - 1 * gx[2080]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1472] - yjyi * Iy) - 1 * gx[1312]) * prod_xz;
                        v_ly += al2 * (gx[1696] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2880];
                        Ix = gx[192];
                        Iy = gx[1024];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += (ak2 * gx[2816] - 2 * gx[2304]) * prod_xy;
                        v_jx += (aj2 * (gx[224] - xjxi * Ix) - 1 * gx[64]) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3136];
                        Ix = gx[32];
                        Iy = gx[1152];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1408] * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += (ak2 * gx[2848] - 2 * gx[2336]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1184] - yjyi * Iy) - 1 * gx[1024]) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2624] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2848] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3392];
                        Ix = gx[0];
                        Iy = gx[1056];
                        Iz = gx[2720];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xy;
                        v_kz += (ak2 * gx[2976] - 2 * gx[2464]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2752] - zjzi * Iz) - 1 * gx[2592]) * prod_xy;
                        v_lz += al2 * (gx[2976] - zlzk * Iz) * prod_xy;
                        break;
                    case 3:
                        dd = dd_cache[96];
                        Ix = gx[640];
                        Iy = gx[1088];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[672] * prod_yz;
                        v_kx += (ak2 * gx[896] - 2 * gx[384]) * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += (aj2 * (gx[672] - xjxi * Ix) - 1 * gx[512]) * prod_yz;
                        v_lx += al2 * (gx[896] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[352];
                        Ix = gx[512];
                        Iy = gx[1152];
                        Iz = gx[2112];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[768] - 2 * gx[256]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1408] * prod_xz;
                        v_iz += (ai2 * gx[2144] - 2 * gx[2080]) * prod_xy;
                        v_kz += ak2 * gx[2368] * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1184] - yjyi * Iy) - 1 * gx[1024]) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2144] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2368] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[608];
                        Ix = gx[416];
                        Iy = gx[1312];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[672] - 1 * gx[160]) * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1568] - 1 * gx[1056]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += (aj2 * (gx[448] - xjxi * Ix) - 1 * gx[288]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[864];
                        Ix = gx[256];
                        Iy = gx[1472];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1504] - 2 * gx[1440]) * prod_xz;
                        v_ky += (ak2 * gx[1728] - 1 * gx[1216]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1504] - yjyi * Iy) - 1 * gx[1344]) * prod_xz;
                        v_ly += al2 * (gx[1728] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1120];
                        Ix = gx[256];
                        Iy = gx[1280];
                        Iz = gx[2240];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2272] - 2 * gx[2208]) * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2272] - zjzi * Iz) - 1 * gx[2112]) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1376];
                        Ix = gx[288];
                        Iy = gx[1184];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2560] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1216] - yjyi * Iy) - 1 * gx[1056]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2560] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1632];
                        Ix = gx[256];
                        Iy = gx[1088];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2176]) * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1888];
                        Ix = gx[128];
                        Iy = gx[1536];
                        Iz = gx[2112];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1792] - 2 * gx[1280]) * prod_xz;
                        v_iz += (ai2 * gx[2144] - 2 * gx[2080]) * prod_xy;
                        v_kz += ak2 * gx[2368] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2144] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2368] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2144];
                        Ix = gx[32];
                        Iy = gx[1568];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += (ak2 * gx[1824] - 2 * gx[1312]) * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += ak2 * gx[2432] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2208] - zjzi * Iz) - 1 * gx[2048]) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2400];
                        Ix = gx[128];
                        Iy = gx[1344];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1376] - 2 * gx[1312]) * prod_xz;
                        v_ky += (ak2 * gx[1600] - 1 * gx[1088]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2560] - 1 * gx[2048]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1600] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2560] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2656];
                        Ix = gx[0];
                        Iy = gx[1408];
                        Iz = gx[2368];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[1440] * prod_xz;
                        v_ky += (ak2 * gx[1664] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xy;
                        v_kz += (ak2 * gx[2624] - 1 * gx[2112]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1440] - yjyi * Iy) - 1 * gx[1280]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2400] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2624] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2912];
                        Ix = gx[160];
                        Iy = gx[1056];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += (ak2 * gx[2816] - 2 * gx[2304]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3168];
                        Ix = gx[0];
                        Iy = gx[1216];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += ak2 * gx[1472] * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += (ak2 * gx[2816] - 2 * gx[2304]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1248] - yjyi * Iy) - 1 * gx[1088]) * prod_xz;
                        v_ly += al2 * (gx[1472] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3424];
                        Ix = gx[0];
                        Iy = gx[1024];
                        Iz = gx[2752];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[2784] - 2 * gx[2720]) * prod_xy;
                        v_kz += (ak2 * gx[3008] - 2 * gx[2496]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2784] - zjzi * Iz) - 1 * gx[2624]) * prod_xy;
                        v_lz += al2 * (gx[3008] - zlzk * Iz) * prod_xy;
                        break;
                    case 4:
                        dd = dd_cache[128];
                        Ix = gx[640];
                        Iy = gx[1056];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[672] * prod_yz;
                        v_kx += (ak2 * gx[896] - 2 * gx[384]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2336] * prod_xy;
                        v_jx += (aj2 * (gx[672] - xjxi * Ix) - 1 * gx[512]) * prod_yz;
                        v_lx += al2 * (gx[896] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[384];
                        Ix = gx[576];
                        Iy = gx[1024];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[608] - 2 * gx[544]) * prod_yz;
                        v_kx += (ak2 * gx[832] - 2 * gx[320]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += ak2 * gx[2432] * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[832] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2208] - zjzi * Iz) - 1 * gx[2048]) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[640];
                        Ix = gx[416];
                        Iy = gx[1280];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[672] - 1 * gx[160]) * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2336] * prod_xy;
                        v_jx += (aj2 * (gx[448] - xjxi * Ix) - 1 * gx[288]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[896];
                        Ix = gx[256];
                        Iy = gx[1440];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1472] - 1 * gx[1408]) * prod_xz;
                        v_ky += (ak2 * gx[1696] - 1 * gx[1184]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2336] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1472] - yjyi * Iy) - 1 * gx[1312]) * prod_xz;
                        v_ly += al2 * (gx[1696] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1152];
                        Ix = gx[448];
                        Iy = gx[1024];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[480] - 2 * gx[416]) * prod_yz;
                        v_kx += (ak2 * gx[704] - 1 * gx[192]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2560] - 1 * gx[2048]) * prod_xy;
                        v_jx += (aj2 * (gx[480] - xjxi * Ix) - 1 * gx[320]) * prod_yz;
                        v_lx += al2 * (gx[704] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2560] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1408];
                        Ix = gx[288];
                        Iy = gx[1152];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1408] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += (ak2 * gx[2592] - 1 * gx[2080]) * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1184] - yjyi * Iy) - 1 * gx[1024]) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1664];
                        Ix = gx[256];
                        Iy = gx[1056];
                        Iz = gx[2464];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xy;
                        v_kz += (ak2 * gx[2720] - 1 * gx[2208]) * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2496] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1920];
                        Ix = gx[64];
                        Iy = gx[1664];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 2 * gx[1408]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2176];
                        Ix = gx[32];
                        Iy = gx[1536];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1792] - 2 * gx[1280]) * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += ak2 * gx[2464] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2240] - zjzi * Iz) - 1 * gx[2080]) * prod_xy;
                        v_lz += al2 * (gx[2464] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2432];
                        Ix = gx[128];
                        Iy = gx[1312];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1568] - 1 * gx[1056]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += (ak2 * gx[2592] - 1 * gx[2080]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2688];
                        Ix = gx[64];
                        Iy = gx[1280];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1024]) * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2176]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2944];
                        Ix = gx[160];
                        Iy = gx[1024];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += (ak2 * gx[2848] - 2 * gx[2336]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2624] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2848] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3200];
                        Ix = gx[0];
                        Iy = gx[1184];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += (ak2 * gx[2848] - 2 * gx[2336]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1216] - yjyi * Iy) - 1 * gx[1056]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2624] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2848] - zlzk * Iz) * prod_xy;
                        break;
                    case 5:
                        dd = dd_cache[160];
                        Ix = gx[640];
                        Iy = gx[1024];
                        Iz = gx[2112];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[672] * prod_yz;
                        v_kx += (ak2 * gx[896] - 2 * gx[384]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[2144] - 2 * gx[2080]) * prod_xy;
                        v_kz += ak2 * gx[2368] * prod_xy;
                        v_jx += (aj2 * (gx[672] - xjxi * Ix) - 1 * gx[512]) * prod_yz;
                        v_lx += al2 * (gx[896] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2144] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2368] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[416];
                        Ix = gx[544];
                        Iy = gx[1056];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 2 * gx[288]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += ak2 * gx[2432] * prod_xy;
                        v_jx += aj2 * (gx[576] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[800] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2208] - zjzi * Iz) - 1 * gx[2048]) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[672];
                        Ix = gx[384];
                        Iy = gx[1344];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1376] - 2 * gx[1312]) * prod_xz;
                        v_ky += (ak2 * gx[1600] - 1 * gx[1088]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1600] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[928];
                        Ix = gx[256];
                        Iy = gx[1408];
                        Iz = gx[2112];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1440] * prod_xz;
                        v_ky += (ak2 * gx[1664] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2144] - 2 * gx[2080]) * prod_xy;
                        v_kz += ak2 * gx[2368] * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1440] - yjyi * Iy) - 1 * gx[1280]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2144] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2368] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1184];
                        Ix = gx[416];
                        Iy = gx[1056];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[672] - 1 * gx[160]) * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2560] - 1 * gx[2048]) * prod_xy;
                        v_jx += (aj2 * (gx[448] - xjxi * Ix) - 1 * gx[288]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2560] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1440];
                        Ix = gx[256];
                        Iy = gx[1216];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += ak2 * gx[1472] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2560] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1248] - yjyi * Iy) - 1 * gx[1088]) * prod_xz;
                        v_ly += al2 * (gx[1472] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2560] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1696];
                        Ix = gx[256];
                        Iy = gx[1024];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[2528] - 2 * gx[2464]) * prod_xy;
                        v_kz += (ak2 * gx[2752] - 1 * gx[2240]) * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2528] - zjzi * Iz) - 1 * gx[2368]) * prod_xy;
                        v_lz += al2 * (gx[2752] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1952];
                        Ix = gx[32];
                        Iy = gx[1696];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += (ak2 * gx[1952] - 2 * gx[1440]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2208];
                        Ix = gx[0];
                        Iy = gx[1600];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += (ak2 * gx[1856] - 2 * gx[1344]) * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += ak2 * gx[2432] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1856] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2208] - zjzi * Iz) - 1 * gx[2048]) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2464];
                        Ix = gx[128];
                        Iy = gx[1280];
                        Iz = gx[2368];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xy;
                        v_kz += (ak2 * gx[2624] - 1 * gx[2112]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2400] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2624] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2720];
                        Ix = gx[32];
                        Iy = gx[1312];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1568] - 1 * gx[1056]) * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2176]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2976];
                        Ix = gx[128];
                        Iy = gx[1088];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += (ak2 * gx[2816] - 2 * gx[2304]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2592] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3232];
                        Ix = gx[0];
                        Iy = gx[1152];
                        Iz = gx[2624];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1408] * prod_xz;
                        v_iz += (ai2 * gx[2656] - 2 * gx[2592]) * prod_xy;
                        v_kz += (ak2 * gx[2880] - 2 * gx[2368]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1184] - yjyi * Iy) - 1 * gx[1024]) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2656] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2880] - zlzk * Iz) * prod_xy;
                        break;
                    case 6:
                        dd = dd_cache[192];
                        Ix = gx[576];
                        Iy = gx[1152];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[608] - 2 * gx[544]) * prod_yz;
                        v_kx += (ak2 * gx[832] - 2 * gx[320]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1408] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += aj2 * (gx[608] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[832] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1184] - yjyi * Iy) - 1 * gx[1024]) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[448];
                        Ix = gx[544];
                        Iy = gx[1024];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 2 * gx[288]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += ak2 * gx[2464] * prod_xy;
                        v_jx += aj2 * (gx[576] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[800] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2240] - zjzi * Iz) - 1 * gx[2080]) * prod_xy;
                        v_lz += al2 * (gx[2464] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[704];
                        Ix = gx[384];
                        Iy = gx[1312];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1568] - 1 * gx[1056]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2336] * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[960];
                        Ix = gx[320];
                        Iy = gx[1280];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += (ak2 * gx[576] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1024]) * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += ak2 * gx[2432] * prod_xy;
                        v_jx += aj2 * (gx[352] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2208] - zjzi * Iz) - 1 * gx[2048]) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1216];
                        Ix = gx[416];
                        Iy = gx[1024];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[672] - 1 * gx[160]) * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += (ak2 * gx[2592] - 1 * gx[2080]) * prod_xy;
                        v_jx += (aj2 * (gx[448] - xjxi * Ix) - 1 * gx[288]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1472];
                        Ix = gx[256];
                        Iy = gx[1184];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += (ak2 * gx[2592] - 1 * gx[2080]) * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1216] - yjyi * Iy) - 1 * gx[1056]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2592] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1728];
                        Ix = gx[192];
                        Iy = gx[1536];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1792] - 2 * gx[1280]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += (aj2 * (gx[224] - xjxi * Ix) - 1 * gx[64]) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1984];
                        Ix = gx[32];
                        Iy = gx[1664];
                        Iz = gx[2080];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 2 * gx[1408]) * prod_xz;
                        v_iz += (ai2 * gx[2112] - 1 * gx[2048]) * prod_xy;
                        v_kz += ak2 * gx[2336] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2112] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2336] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2240];
                        Ix = gx[0];
                        Iy = gx[1568];
                        Iz = gx[2208];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += (ak2 * gx[1824] - 2 * gx[1312]) * prod_xz;
                        v_iz += (ai2 * gx[2240] - 1 * gx[2176]) * prod_xy;
                        v_kz += ak2 * gx[2464] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2240] - zjzi * Iz) - 1 * gx[2080]) * prod_xy;
                        v_lz += al2 * (gx[2464] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2496];
                        Ix = gx[64];
                        Iy = gx[1408];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1440] * prod_xz;
                        v_ky += (ak2 * gx[1664] - 1 * gx[1152]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2560] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1440] - yjyi * Iy) - 1 * gx[1280]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2560] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2752];
                        Ix = gx[32];
                        Iy = gx[1280];
                        Iz = gx[2464];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xy;
                        v_kz += (ak2 * gx[2720] - 1 * gx[2208]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2496] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3008];
                        Ix = gx[128];
                        Iy = gx[1056];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += (ak2 * gx[2848] - 2 * gx[2336]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2624] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2848] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3264];
                        Ix = gx[64];
                        Iy = gx[1024];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[320] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[2944] - 2 * gx[2432]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[320] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2720] - zjzi * Iz) - 1 * gx[2560]) * prod_xy;
                        v_lz += al2 * (gx[2944] - zlzk * Iz) * prod_xy;
                        break;
                    case 7:
                        dd = dd_cache[224];
                        Ix = gx[544];
                        Iy = gx[1184];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 2 * gx[288]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1440] * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += aj2 * (gx[576] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[800] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1216] - yjyi * Iy) - 1 * gx[1056]) * prod_xz;
                        v_ly += al2 * (gx[1440] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[480];
                        Ix = gx[512];
                        Iy = gx[1088];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[768] - 2 * gx[256]) * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += ak2 * gx[2432] * prod_xy;
                        v_jx += aj2 * (gx[544] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2208] - zjzi * Iz) - 1 * gx[2048]) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[736];
                        Ix = gx[384];
                        Iy = gx[1280];
                        Iz = gx[2112];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += (ak2 * gx[1536] - 1 * gx[1024]) * prod_xz;
                        v_iz += (ai2 * gx[2144] - 2 * gx[2080]) * prod_xy;
                        v_kz += ak2 * gx[2368] * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1312] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2144] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2368] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[992];
                        Ix = gx[288];
                        Iy = gx[1312];
                        Iz = gx[2176];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += (ak2 * gx[544] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += (ak2 * gx[1568] - 1 * gx[1056]) * prod_xz;
                        v_iz += ai2 * gx[2208] * prod_xy;
                        v_kz += ak2 * gx[2432] * prod_xy;
                        v_jx += aj2 * (gx[320] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1344] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2208] - zjzi * Iz) - 1 * gx[2048]) * prod_xy;
                        v_lz += al2 * (gx[2432] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1248];
                        Ix = gx[384];
                        Iy = gx[1088];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[640] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1120] - 2 * gx[1056]) * prod_xz;
                        v_ky += ak2 * gx[1344] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2560] - 1 * gx[2048]) * prod_xy;
                        v_jx += (aj2 * (gx[416] - xjxi * Ix) - 1 * gx[256]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1120] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1344] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2560] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1504];
                        Ix = gx[256];
                        Iy = gx[1152];
                        Iz = gx[2368];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += (ak2 * gx[512] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1408] * prod_xz;
                        v_iz += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xy;
                        v_kz += (ak2 * gx[2624] - 1 * gx[2112]) * prod_xy;
                        v_jx += aj2 * (gx[288] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1184] - yjyi * Iy) - 1 * gx[1024]) * prod_xz;
                        v_ly += al2 * (gx[1408] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2400] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2624] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1760];
                        Ix = gx[160];
                        Iy = gx[1568];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += (ak2 * gx[1824] - 2 * gx[1312]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2016];
                        Ix = gx[0];
                        Iy = gx[1728];
                        Iz = gx[2048];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1760] - 2 * gx[1696]) * prod_xz;
                        v_ky += (ak2 * gx[1984] - 2 * gx[1472]) * prod_xz;
                        v_iz += ai2 * gx[2080] * prod_xy;
                        v_kz += ak2 * gx[2304] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1760] - yjyi * Iy) - 1 * gx[1600]) * prod_xz;
                        v_ly += al2 * (gx[1984] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2080] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2304] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2272];
                        Ix = gx[0];
                        Iy = gx[1536];
                        Iz = gx[2240];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1792] - 2 * gx[1280]) * prod_xz;
                        v_iz += (ai2 * gx[2272] - 2 * gx[2208]) * prod_xy;
                        v_kz += ak2 * gx[2496] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2272] - zjzi * Iz) - 1 * gx[2112]) * prod_xy;
                        v_lz += al2 * (gx[2496] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2528];
                        Ix = gx[32];
                        Iy = gx[1440];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1472] - 1 * gx[1408]) * prod_xz;
                        v_ky += (ak2 * gx[1696] - 1 * gx[1184]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += (ak2 * gx[2560] - 1 * gx[2048]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1472] - yjyi * Iy) - 1 * gx[1312]) * prod_xz;
                        v_ly += al2 * (gx[1696] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2560] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2784];
                        Ix = gx[0];
                        Iy = gx[1344];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[256] * prod_yz;
                        v_iy += (ai2 * gx[1376] - 2 * gx[1312]) * prod_xz;
                        v_ky += (ak2 * gx[1600] - 1 * gx[1088]) * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += (ak2 * gx[2688] - 1 * gx[2176]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[256] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1376] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1600] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3040];
                        Ix = gx[128];
                        Iy = gx[1024];
                        Iz = gx[2624];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[1056] * prod_xz;
                        v_ky += ak2 * gx[1280] * prod_xz;
                        v_iz += (ai2 * gx[2656] - 2 * gx[2592]) * prod_xy;
                        v_kz += (ak2 * gx[2880] - 2 * gx[2368]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1056] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1280] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2656] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2880] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3296];
                        Ix = gx[32];
                        Iy = gx[1056];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[288] * prod_yz;
                        v_iy += (ai2 * gx[1088] - 1 * gx[1024]) * prod_xz;
                        v_ky += ak2 * gx[1312] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[2944] - 2 * gx[2432]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[288] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1088] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1312] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2720] - zjzi * Iz) - 1 * gx[2560]) * prod_xy;
                        v_lz += al2 * (gx[2944] - zlzk * Iz) * prod_xy;
                        break;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_2200(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 256;
    constexpr int gout_stride = 1;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rw = shared_memory + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        double fxi, fyi, fzi;
        double fxj, fyj, fzj;
        double fxk, fyk, fzk;
        double fxl, fyl, fzl;
        double dd_cache0 = 0.;
        double dd_cache1 = 0.;
        double dd_cache2 = 0.;
        double dd_cache3 = 0.;
        double dd_cache4 = 0.;
        double dd_cache5 = 0.;
        double dd_cache6 = 0.;
        double dd_cache7 = 0.;
        double dd_cache8 = 0.;
        double dd_cache9 = 0.;
        double dd_cache10 = 0.;
        double dd_cache11 = 0.;
        double dd_cache12 = 0.;
        double dd_cache13 = 0.;
        double dd_cache14 = 0.;
        double dd_cache15 = 0.;
        double dd_cache16 = 0.;
        double dd_cache17 = 0.;
        double dd_cache18 = 0.;
        double dd_cache19 = 0.;
        double dd_cache20 = 0.;
        double dd_cache21 = 0.;
        double dd_cache22 = 0.;
        double dd_cache23 = 0.;
        double dd_cache24 = 0.;
        double dd_cache25 = 0.;
        double dd_cache26 = 0.;
        double dd_cache27 = 0.;
        double dd_cache28 = 0.;
        double dd_cache29 = 0.;
        double dd_cache30 = 0.;
        double dd_cache31 = 0.;
        double dd_cache32 = 0.;
        double dd_cache33 = 0.;
        double dd_cache34 = 0.;
        double dd_cache35 = 0.;
        if (jk.n_dm == 1) {
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+0)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+0)]);
                dd_cache6 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache7 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache8 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache9 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+0)]);
                dd_cache10 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+0)]);
                dd_cache11 += fac * (dm[(j0+1)*nao+(k0+0)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+0)]);
                dd_cache12 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache13 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache14 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache15 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+0)]);
                dd_cache16 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+0)]);
                dd_cache17 += fac * (dm[(j0+2)*nao+(k0+0)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+0)]);
                dd_cache18 += fac * (dm[(j0+3)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+3)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache19 += fac * (dm[(j0+3)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+3)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache20 += fac * (dm[(j0+3)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+3)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache21 += fac * (dm[(j0+3)*nao+(k0+0)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+3)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+0)]);
                dd_cache22 += fac * (dm[(j0+3)*nao+(k0+0)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+3)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+0)]);
                dd_cache23 += fac * (dm[(j0+3)*nao+(k0+0)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+3)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+0)]);
                dd_cache24 += fac * (dm[(j0+4)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+4)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache25 += fac * (dm[(j0+4)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+4)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache26 += fac * (dm[(j0+4)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+4)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache27 += fac * (dm[(j0+4)*nao+(k0+0)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+4)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+0)]);
                dd_cache28 += fac * (dm[(j0+4)*nao+(k0+0)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+4)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+0)]);
                dd_cache29 += fac * (dm[(j0+4)*nao+(k0+0)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+4)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+0)]);
                dd_cache30 += fac * (dm[(j0+5)*nao+(k0+0)] * dm[(i0+0)*nao+(l0+0)] + dm[(j0+5)*nao+(l0+0)] * dm[(i0+0)*nao+(k0+0)]);
                dd_cache31 += fac * (dm[(j0+5)*nao+(k0+0)] * dm[(i0+1)*nao+(l0+0)] + dm[(j0+5)*nao+(l0+0)] * dm[(i0+1)*nao+(k0+0)]);
                dd_cache32 += fac * (dm[(j0+5)*nao+(k0+0)] * dm[(i0+2)*nao+(l0+0)] + dm[(j0+5)*nao+(l0+0)] * dm[(i0+2)*nao+(k0+0)]);
                dd_cache33 += fac * (dm[(j0+5)*nao+(k0+0)] * dm[(i0+3)*nao+(l0+0)] + dm[(j0+5)*nao+(l0+0)] * dm[(i0+3)*nao+(k0+0)]);
                dd_cache34 += fac * (dm[(j0+5)*nao+(k0+0)] * dm[(i0+4)*nao+(l0+0)] + dm[(j0+5)*nao+(l0+0)] * dm[(i0+4)*nao+(k0+0)]);
                dd_cache35 += fac * (dm[(j0+5)*nao+(k0+0)] * dm[(i0+5)*nao+(l0+0)] + dm[(j0+5)*nao+(l0+0)] * dm[(i0+5)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+0)];
                dd_cache1 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+1)];
                dd_cache2 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+2)];
                dd_cache3 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+3)];
                dd_cache4 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+4)];
                dd_cache5 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+0)*nao+(i0+5)];
                dd_cache6 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+0)];
                dd_cache7 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+1)];
                dd_cache8 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+2)];
                dd_cache9 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+3)];
                dd_cache10 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+4)];
                dd_cache11 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+1)*nao+(i0+5)];
                dd_cache12 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+0)];
                dd_cache13 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+1)];
                dd_cache14 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+2)];
                dd_cache15 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+3)];
                dd_cache16 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+4)];
                dd_cache17 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+2)*nao+(i0+5)];
                dd_cache18 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+3)*nao+(i0+0)];
                dd_cache19 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+3)*nao+(i0+1)];
                dd_cache20 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+3)*nao+(i0+2)];
                dd_cache21 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+3)*nao+(i0+3)];
                dd_cache22 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+3)*nao+(i0+4)];
                dd_cache23 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+3)*nao+(i0+5)];
                dd_cache24 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+4)*nao+(i0+0)];
                dd_cache25 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+4)*nao+(i0+1)];
                dd_cache26 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+4)*nao+(i0+2)];
                dd_cache27 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+4)*nao+(i0+3)];
                dd_cache28 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+4)*nao+(i0+4)];
                dd_cache29 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+4)*nao+(i0+5)];
                dd_cache30 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+5)*nao+(i0+0)];
                dd_cache31 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+5)*nao+(i0+1)];
                dd_cache32 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+5)*nao+(i0+2)];
                dd_cache33 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+5)*nao+(i0+3)];
                dd_cache34 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+5)*nao+(i0+4)];
                dd_cache35 += fac * dm[(l0+0)*nao+(k0+0)] * dm[(j0+5)*nao+(i0+5)];
            }
        } else {
            double *dmb = dm + nao * nao;
            if (jk.k_factor != 0) {
                double fac = fac_sym * jk.k_factor;
                dd_cache0 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache1 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache2 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache3 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+0)]);
                dd_cache4 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+0)]);
                dd_cache5 += fac * (dm[(j0+0)*nao+(k0+0)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+0)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+0)] + dmb[(j0+0)*nao+(k0+0)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+0)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+0)]);
                dd_cache6 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache7 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache8 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache9 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+0)]);
                dd_cache10 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+0)]);
                dd_cache11 += fac * (dm[(j0+1)*nao+(k0+0)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+1)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+0)] + dmb[(j0+1)*nao+(k0+0)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+1)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+0)]);
                dd_cache12 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache13 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache14 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache15 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+0)]);
                dd_cache16 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+0)]);
                dd_cache17 += fac * (dm[(j0+2)*nao+(k0+0)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+2)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+0)] + dmb[(j0+2)*nao+(k0+0)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+2)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+0)]);
                dd_cache18 += fac * (dm[(j0+3)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+3)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+3)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+3)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache19 += fac * (dm[(j0+3)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+3)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+3)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+3)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache20 += fac * (dm[(j0+3)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+3)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+3)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+3)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache21 += fac * (dm[(j0+3)*nao+(k0+0)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+3)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+0)] + dmb[(j0+3)*nao+(k0+0)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+3)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+0)]);
                dd_cache22 += fac * (dm[(j0+3)*nao+(k0+0)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+3)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+0)] + dmb[(j0+3)*nao+(k0+0)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+3)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+0)]);
                dd_cache23 += fac * (dm[(j0+3)*nao+(k0+0)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+3)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+0)] + dmb[(j0+3)*nao+(k0+0)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+3)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+0)]);
                dd_cache24 += fac * (dm[(j0+4)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+4)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+4)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+4)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache25 += fac * (dm[(j0+4)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+4)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+4)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+4)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache26 += fac * (dm[(j0+4)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+4)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+4)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+4)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache27 += fac * (dm[(j0+4)*nao+(k0+0)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+4)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+0)] + dmb[(j0+4)*nao+(k0+0)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+4)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+0)]);
                dd_cache28 += fac * (dm[(j0+4)*nao+(k0+0)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+4)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+0)] + dmb[(j0+4)*nao+(k0+0)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+4)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+0)]);
                dd_cache29 += fac * (dm[(j0+4)*nao+(k0+0)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+4)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+0)] + dmb[(j0+4)*nao+(k0+0)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+4)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+0)]);
                dd_cache30 += fac * (dm[(j0+5)*nao+(k0+0)]*dm[(i0+0)*nao+(l0+0)] + dm[(j0+5)*nao+(l0+0)]*dm[(i0+0)*nao+(k0+0)] + dmb[(j0+5)*nao+(k0+0)]*dmb[(i0+0)*nao+(l0+0)] + dmb[(j0+5)*nao+(l0+0)]*dmb[(i0+0)*nao+(k0+0)]);
                dd_cache31 += fac * (dm[(j0+5)*nao+(k0+0)]*dm[(i0+1)*nao+(l0+0)] + dm[(j0+5)*nao+(l0+0)]*dm[(i0+1)*nao+(k0+0)] + dmb[(j0+5)*nao+(k0+0)]*dmb[(i0+1)*nao+(l0+0)] + dmb[(j0+5)*nao+(l0+0)]*dmb[(i0+1)*nao+(k0+0)]);
                dd_cache32 += fac * (dm[(j0+5)*nao+(k0+0)]*dm[(i0+2)*nao+(l0+0)] + dm[(j0+5)*nao+(l0+0)]*dm[(i0+2)*nao+(k0+0)] + dmb[(j0+5)*nao+(k0+0)]*dmb[(i0+2)*nao+(l0+0)] + dmb[(j0+5)*nao+(l0+0)]*dmb[(i0+2)*nao+(k0+0)]);
                dd_cache33 += fac * (dm[(j0+5)*nao+(k0+0)]*dm[(i0+3)*nao+(l0+0)] + dm[(j0+5)*nao+(l0+0)]*dm[(i0+3)*nao+(k0+0)] + dmb[(j0+5)*nao+(k0+0)]*dmb[(i0+3)*nao+(l0+0)] + dmb[(j0+5)*nao+(l0+0)]*dmb[(i0+3)*nao+(k0+0)]);
                dd_cache34 += fac * (dm[(j0+5)*nao+(k0+0)]*dm[(i0+4)*nao+(l0+0)] + dm[(j0+5)*nao+(l0+0)]*dm[(i0+4)*nao+(k0+0)] + dmb[(j0+5)*nao+(k0+0)]*dmb[(i0+4)*nao+(l0+0)] + dmb[(j0+5)*nao+(l0+0)]*dmb[(i0+4)*nao+(k0+0)]);
                dd_cache35 += fac * (dm[(j0+5)*nao+(k0+0)]*dm[(i0+5)*nao+(l0+0)] + dm[(j0+5)*nao+(l0+0)]*dm[(i0+5)*nao+(k0+0)] + dmb[(j0+5)*nao+(k0+0)]*dmb[(i0+5)*nao+(l0+0)] + dmb[(j0+5)*nao+(l0+0)]*dmb[(i0+5)*nao+(k0+0)]);
            }
            if (jk.j_factor != 0) {
                double fac = fac_sym * jk.j_factor;
                dd_cache0 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+0)]+dmb[(j0+0)*nao+(i0+0)]);
                dd_cache1 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+1)]+dmb[(j0+0)*nao+(i0+1)]);
                dd_cache2 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+2)]+dmb[(j0+0)*nao+(i0+2)]);
                dd_cache3 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+3)]+dmb[(j0+0)*nao+(i0+3)]);
                dd_cache4 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+4)]+dmb[(j0+0)*nao+(i0+4)]);
                dd_cache5 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+0)*nao+(i0+5)]+dmb[(j0+0)*nao+(i0+5)]);
                dd_cache6 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+0)]+dmb[(j0+1)*nao+(i0+0)]);
                dd_cache7 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+1)]+dmb[(j0+1)*nao+(i0+1)]);
                dd_cache8 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+2)]+dmb[(j0+1)*nao+(i0+2)]);
                dd_cache9 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+3)]+dmb[(j0+1)*nao+(i0+3)]);
                dd_cache10 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+4)]+dmb[(j0+1)*nao+(i0+4)]);
                dd_cache11 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+1)*nao+(i0+5)]+dmb[(j0+1)*nao+(i0+5)]);
                dd_cache12 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+0)]+dmb[(j0+2)*nao+(i0+0)]);
                dd_cache13 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+1)]+dmb[(j0+2)*nao+(i0+1)]);
                dd_cache14 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+2)]+dmb[(j0+2)*nao+(i0+2)]);
                dd_cache15 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+3)]+dmb[(j0+2)*nao+(i0+3)]);
                dd_cache16 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+4)]+dmb[(j0+2)*nao+(i0+4)]);
                dd_cache17 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+2)*nao+(i0+5)]+dmb[(j0+2)*nao+(i0+5)]);
                dd_cache18 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+3)*nao+(i0+0)]+dmb[(j0+3)*nao+(i0+0)]);
                dd_cache19 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+3)*nao+(i0+1)]+dmb[(j0+3)*nao+(i0+1)]);
                dd_cache20 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+3)*nao+(i0+2)]+dmb[(j0+3)*nao+(i0+2)]);
                dd_cache21 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+3)*nao+(i0+3)]+dmb[(j0+3)*nao+(i0+3)]);
                dd_cache22 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+3)*nao+(i0+4)]+dmb[(j0+3)*nao+(i0+4)]);
                dd_cache23 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+3)*nao+(i0+5)]+dmb[(j0+3)*nao+(i0+5)]);
                dd_cache24 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+4)*nao+(i0+0)]+dmb[(j0+4)*nao+(i0+0)]);
                dd_cache25 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+4)*nao+(i0+1)]+dmb[(j0+4)*nao+(i0+1)]);
                dd_cache26 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+4)*nao+(i0+2)]+dmb[(j0+4)*nao+(i0+2)]);
                dd_cache27 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+4)*nao+(i0+3)]+dmb[(j0+4)*nao+(i0+3)]);
                dd_cache28 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+4)*nao+(i0+4)]+dmb[(j0+4)*nao+(i0+4)]);
                dd_cache29 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+4)*nao+(i0+5)]+dmb[(j0+4)*nao+(i0+5)]);
                dd_cache30 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+5)*nao+(i0+0)]+dmb[(j0+5)*nao+(i0+0)]);
                dd_cache31 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+5)*nao+(i0+1)]+dmb[(j0+5)*nao+(i0+1)]);
                dd_cache32 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+5)*nao+(i0+2)]+dmb[(j0+5)*nao+(i0+2)]);
                dd_cache33 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+5)*nao+(i0+3)]+dmb[(j0+5)*nao+(i0+3)]);
                dd_cache34 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+5)*nao+(i0+4)]+dmb[(j0+5)*nao+(i0+4)]);
                dd_cache35 += fac * (dm[(l0+0)*nao+(k0+0)]+dmb[(l0+0)*nao+(k0+0)]) * (dm[(j0+5)*nao+(i0+5)]+dmb[(j0+5)*nao+(i0+5)]);
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
            double ckcl = ck[kp] * cl[lp] * Kcd;
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double cicj = cicj_cache[ijp];
                double fac = cicj * ckcl / (aij*akl*sqrt(aij+akl));
                double xpa = rjri[0] * aj_aij;
                double ypa = rjri[1] * aj_aij;
                double zpa = rjri[2] * aj_aij;
                double xij = ri[0] + xpa;
                double yij = ri[1] + ypa;
                double zij = ri[2] + zpa;
                double xqc = xlxk * al_akl;
                double yqc = ylyk * al_akl;
                double zqc = zlzk * al_akl;
                double xkl = rk[0] + xqc;
                double ykl = rk[1] + yqc;
                double zkl = rk[2] + zqc;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double rr = xpq*xpq + ypq*ypq + zpq*zpq;
                double theta = aij * akl / (aij + akl);
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                if (task_id >= ntasks) {
                    continue;
                }
                for (int irys = 0; irys < nroots; ++irys) {
                    double wt = rw[(2*irys+1)*256] * fac;
                    double rt = rw[ 2*irys   *256];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double c0x = xpa - xpq*rt_aij;
                    double trr_10x = c0x * 1;
                    double b10 = .5/aij * (1 - rt_aij);
                    double trr_20x = c0x * trr_10x + 1*b10 * 1;
                    double trr_30x = c0x * trr_20x + 2*b10 * trr_10x;
                    double trr_40x = c0x * trr_30x + 3*b10 * trr_20x;
                    double hrr_3100x = trr_40x - xjxi * trr_30x;
                    double hrr_2100x = trr_30x - xjxi * trr_20x;
                    double hrr_2200x = hrr_3100x - xjxi * hrr_2100x;
                    dd = dd_cache0;
                    Ix = hrr_2200x;
                    Iy = 1;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    double trr_50x = c0x * trr_40x + 4*b10 * trr_30x;
                    double hrr_4100x = trr_50x - xjxi * trr_40x;
                    double hrr_3200x = hrr_4100x - xjxi * hrr_3100x;
                    fxi = ai2 * hrr_3200x;
                    double hrr_1100x = trr_20x - xjxi * trr_10x;
                    double hrr_1200x = hrr_2100x - xjxi * hrr_1100x;
                    fxi -= 2 * hrr_1200x;
                    v_ix += fxi * prod_yz;
                    double c0y = ypa - ypq*rt_aij;
                    double trr_10y = c0y * 1;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double c0z = zpa - zpq*rt_aij;
                    double trr_10z = c0z * wt;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_2300x = hrr_3200x - xjxi * hrr_2200x;
                    fxj = aj2 * hrr_2300x;
                    fxj -= 2 * hrr_2100x;
                    v_jx += fxj * prod_yz;
                    double hrr_0100y = trr_10y - yjyi * 1;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0100z = trr_10z - zjzi * wt;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double rt_akl = rt_aa * aij;
                    double cpx = xqc + xpq*rt_akl;
                    double b00 = .5 * rt_aa;
                    double trr_41x = cpx * trr_40x + 4*b00 * trr_30x;
                    double trr_31x = cpx * trr_30x + 3*b00 * trr_20x;
                    double hrr_3110x = trr_41x - xjxi * trr_31x;
                    double trr_21x = cpx * trr_20x + 2*b00 * trr_10x;
                    double hrr_2110x = trr_31x - xjxi * trr_21x;
                    double hrr_2210x = hrr_3110x - xjxi * hrr_2110x;
                    fxk = ak2 * hrr_2210x;
                    v_kx += fxk * prod_yz;
                    double cpy = yqc + ypq*rt_akl;
                    double trr_01y = cpy * 1;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double cpz = zqc + zpq*rt_akl;
                    double trr_01z = cpz * wt;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_4001x = trr_41x - xlxk * trr_40x;
                    double hrr_3001x = trr_31x - xlxk * trr_30x;
                    double hrr_3101x = hrr_4001x - xjxi * hrr_3001x;
                    double hrr_2001x = trr_21x - xlxk * trr_20x;
                    double hrr_2101x = hrr_3001x - xjxi * hrr_2001x;
                    double hrr_2201x = hrr_3101x - xjxi * hrr_2101x;
                    fxl = al2 * hrr_2201x;
                    v_lx += fxl * prod_yz;
                    double hrr_0001y = trr_01y - ylyk * 1;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0001z = trr_01z - zlzk * wt;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache1;
                    Ix = hrr_1200x;
                    Iy = trr_10y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_2200x;
                    double hrr_0100x = trr_10x - xjxi * 1;
                    double hrr_0200x = hrr_1100x - xjxi * hrr_0100x;
                    fxi -= 1 * hrr_0200x;
                    v_ix += fxi * prod_yz;
                    double trr_20y = c0y * trr_10y + 1*b10 * 1;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_1300x = hrr_2200x - xjxi * hrr_1200x;
                    fxj = aj2 * hrr_1300x;
                    fxj -= 2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    double hrr_1100y = trr_20y - yjyi * trr_10y;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_11x = cpx * trr_10x + 1*b00 * 1;
                    double hrr_1110x = trr_21x - xjxi * trr_11x;
                    double hrr_1210x = hrr_2110x - xjxi * hrr_1110x;
                    fxk = ak2 * hrr_1210x;
                    v_kx += fxk * prod_yz;
                    double trr_11y = cpy * trr_10y + 1*b00 * 1;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_1001x = trr_11x - xlxk * trr_10x;
                    double hrr_1101x = hrr_2001x - xjxi * hrr_1001x;
                    double hrr_1201x = hrr_2101x - xjxi * hrr_1101x;
                    fxl = al2 * hrr_1201x;
                    v_lx += fxl * prod_yz;
                    double hrr_1001y = trr_11y - ylyk * trr_10y;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache2;
                    Ix = hrr_1200x;
                    Iy = 1;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_2200x;
                    fxi -= 1 * hrr_0200x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_20z = c0z * trr_10z + 1*b10 * wt;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1300x;
                    fxj -= 2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1100z = trr_20z - zjzi * trr_10z;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_1210x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_11z = cpz * trr_10z + 1*b00 * wt;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1201x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1001z = trr_11z - zlzk * trr_10z;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache3;
                    Ix = hrr_0200x;
                    Iy = trr_20y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1200x;
                    v_ix += fxi * prod_yz;
                    double trr_30y = c0y * trr_20y + 2*b10 * trr_10y;
                    fyi = ai2 * trr_30y;
                    fyi -= 2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    double hrr_0300x = hrr_1200x - xjxi * hrr_0200x;
                    fxj = aj2 * hrr_0300x;
                    fxj -= 2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    double hrr_2100y = trr_30y - yjyi * trr_20y;
                    fyj = aj2 * hrr_2100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    double trr_01x = cpx * 1;
                    double hrr_0110x = trr_11x - xjxi * trr_01x;
                    double hrr_0210x = hrr_1110x - xjxi * hrr_0110x;
                    fxk = ak2 * hrr_0210x;
                    v_kx += fxk * prod_yz;
                    double trr_21y = cpy * trr_20y + 2*b00 * trr_10y;
                    fyk = ak2 * trr_21y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    double hrr_0001x = trr_01x - xlxk * 1;
                    double hrr_0101x = hrr_1001x - xjxi * hrr_0001x;
                    double hrr_0201x = hrr_1101x - xjxi * hrr_0101x;
                    fxl = al2 * hrr_0201x;
                    v_lx += fxl * prod_yz;
                    double hrr_2001y = trr_21y - ylyk * trr_20y;
                    fyl = al2 * hrr_2001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache4;
                    Ix = hrr_0200x;
                    Iy = trr_10y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1200x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0300x;
                    fxj -= 2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0210x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0201x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache5;
                    Ix = hrr_0200x;
                    Iy = 1;
                    Iz = trr_20z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1200x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_30z = c0z * trr_20z + 2*b10 * trr_10z;
                    fzi = ai2 * trr_30z;
                    fzi -= 2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0300x;
                    fxj -= 2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_2100z = trr_30z - zjzi * trr_20z;
                    fzj = aj2 * hrr_2100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0210x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_21z = cpz * trr_20z + 2*b00 * trr_10z;
                    fzk = ak2 * trr_21z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0201x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_2001z = trr_21z - zlzk * trr_20z;
                    fzl = al2 * hrr_2001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache6;
                    Ix = hrr_2100x;
                    Iy = hrr_0100y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_3100x;
                    fxi -= 2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_2200x;
                    fxj -= 1 * trr_20x;
                    v_jx += fxj * prod_yz;
                    double hrr_0200y = hrr_1100y - yjyi * hrr_0100y;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_2110x;
                    v_kx += fxk * prod_yz;
                    double hrr_0110y = trr_11y - yjyi * trr_01y;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_2101x;
                    v_lx += fxl * prod_yz;
                    double hrr_0101y = hrr_1001y - yjyi * hrr_0001y;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache7;
                    Ix = hrr_1100x;
                    Iy = hrr_1100y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_2100x;
                    fxi -= 1 * hrr_0100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_2100y;
                    fyi -= 1 * hrr_0100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1200x;
                    fxj -= 1 * trr_10x;
                    v_jx += fxj * prod_yz;
                    double hrr_1200y = hrr_2100y - yjyi * hrr_1100y;
                    fyj = aj2 * hrr_1200y;
                    fyj -= 1 * trr_10y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_1110x;
                    v_kx += fxk * prod_yz;
                    double hrr_1110y = trr_21y - yjyi * trr_11y;
                    fyk = ak2 * hrr_1110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1101x;
                    v_lx += fxl * prod_yz;
                    double hrr_1101y = hrr_2001y - yjyi * hrr_1001y;
                    fyl = al2 * hrr_1101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache8;
                    Ix = hrr_1100x;
                    Iy = hrr_0100y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_2100x;
                    fxi -= 1 * hrr_0100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1200x;
                    fxj -= 1 * trr_10x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_1110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache9;
                    Ix = hrr_0100x;
                    Iy = hrr_2100y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    double trr_40y = c0y * trr_30y + 3*b10 * trr_20y;
                    double hrr_3100y = trr_40y - yjyi * trr_30y;
                    fyi = ai2 * hrr_3100y;
                    fyi -= 2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    double hrr_2200y = hrr_3100y - yjyi * hrr_2100y;
                    fyj = aj2 * hrr_2200y;
                    fyj -= 1 * trr_20y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    double trr_31y = cpy * trr_30y + 3*b00 * trr_20y;
                    double hrr_2110y = trr_31y - yjyi * trr_21y;
                    fyk = ak2 * hrr_2110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    double hrr_3001y = trr_31y - ylyk * trr_30y;
                    double hrr_2101y = hrr_3001y - yjyi * hrr_2001y;
                    fyl = al2 * hrr_2101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache10;
                    Ix = hrr_0100x;
                    Iy = hrr_1100y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_2100y;
                    fyi -= 1 * hrr_0100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1200y;
                    fyj -= 1 * trr_10y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_1110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache11;
                    Ix = hrr_0100x;
                    Iy = hrr_0100y;
                    Iz = trr_20z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_30z;
                    fzi -= 2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_2100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_21z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_2001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache12;
                    Ix = hrr_2100x;
                    Iy = 1;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_3100x;
                    fxi -= 2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_2200x;
                    fxj -= 1 * trr_20x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0200z = hrr_1100z - zjzi * hrr_0100z;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_2110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double hrr_0110z = trr_11z - zjzi * trr_01z;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_2101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0101z = hrr_1001z - zjzi * hrr_0001z;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache13;
                    Ix = hrr_1100x;
                    Iy = trr_10y;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_2100x;
                    fxi -= 1 * hrr_0100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1200x;
                    fxj -= 1 * trr_10x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_1110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache14;
                    Ix = hrr_1100x;
                    Iy = 1;
                    Iz = hrr_1100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_2100x;
                    fxi -= 1 * hrr_0100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_2100z;
                    fzi -= 1 * hrr_0100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1200x;
                    fxj -= 1 * trr_10x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1200z = hrr_2100z - zjzi * hrr_1100z;
                    fzj = aj2 * hrr_1200z;
                    fzj -= 1 * trr_10z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_1110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double hrr_1110z = trr_21z - zjzi * trr_11z;
                    fzk = ak2 * hrr_1110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1101z = hrr_2001z - zjzi * hrr_1001z;
                    fzl = al2 * hrr_1101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache15;
                    Ix = hrr_0100x;
                    Iy = trr_20y;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_30y;
                    fyi -= 2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_2100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_21y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_2001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache16;
                    Ix = hrr_0100x;
                    Iy = trr_10y;
                    Iz = hrr_1100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_2100z;
                    fzi -= 1 * hrr_0100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1200z;
                    fzj -= 1 * trr_10z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_1110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache17;
                    Ix = hrr_0100x;
                    Iy = 1;
                    Iz = hrr_2100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * hrr_1100x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_40z = c0z * trr_30z + 3*b10 * trr_20z;
                    double hrr_3100z = trr_40z - zjzi * trr_30z;
                    fzi = ai2 * hrr_3100z;
                    fzi -= 2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0200x;
                    fxj -= 1 * 1;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_2200z = hrr_3100z - zjzi * hrr_2100z;
                    fzj = aj2 * hrr_2200z;
                    fzj -= 1 * trr_20z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * hrr_0110x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_31z = cpz * trr_30z + 3*b00 * trr_20z;
                    double hrr_2110z = trr_31z - zjzi * trr_21z;
                    fzk = ak2 * hrr_2110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0101x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_3001z = trr_31z - zlzk * trr_30z;
                    double hrr_2101z = hrr_3001z - zjzi * hrr_2001z;
                    fzl = al2 * hrr_2101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache18;
                    Ix = trr_20x;
                    Iy = hrr_0200y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_30x;
                    fxi -= 2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1200y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_2100x;
                    v_jx += fxj * prod_yz;
                    double hrr_0300y = hrr_1200y - yjyi * hrr_0200y;
                    fyj = aj2 * hrr_0300y;
                    fyj -= 2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_21x;
                    v_kx += fxk * prod_yz;
                    double hrr_0210y = hrr_1110y - yjyi * hrr_0110y;
                    fyk = ak2 * hrr_0210y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_2001x;
                    v_lx += fxl * prod_yz;
                    double hrr_0201y = hrr_1101y - yjyi * hrr_0101y;
                    fyl = al2 * hrr_0201y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache19;
                    Ix = trr_10x;
                    Iy = hrr_1200y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_2200y;
                    fyi -= 1 * hrr_0200y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    double hrr_1300y = hrr_2200y - yjyi * hrr_1200y;
                    fyj = aj2 * hrr_1300y;
                    fyj -= 2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    double hrr_1210y = hrr_2110y - yjyi * hrr_1110y;
                    fyk = ak2 * hrr_1210y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    double hrr_1201y = hrr_2101y - yjyi * hrr_1101y;
                    fyl = al2 * hrr_1201y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache20;
                    Ix = trr_10x;
                    Iy = hrr_0200y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1200y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0300y;
                    fyj -= 2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0210y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0201y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache21;
                    Ix = 1;
                    Iy = hrr_2200y;
                    Iz = wt;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    double trr_50y = c0y * trr_40y + 4*b10 * trr_30y;
                    double hrr_4100y = trr_50y - yjyi * trr_40y;
                    double hrr_3200y = hrr_4100y - yjyi * hrr_3100y;
                    fyi = ai2 * hrr_3200y;
                    fyi -= 2 * hrr_1200y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    double hrr_2300y = hrr_3200y - yjyi * hrr_2200y;
                    fyj = aj2 * hrr_2300y;
                    fyj -= 2 * hrr_2100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    double trr_41y = cpy * trr_40y + 4*b00 * trr_30y;
                    double hrr_3110y = trr_41y - yjyi * trr_31y;
                    double hrr_2210y = hrr_3110y - yjyi * hrr_2110y;
                    fyk = ak2 * hrr_2210y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_01z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    double hrr_4001y = trr_41y - ylyk * trr_40y;
                    double hrr_3101y = hrr_4001y - yjyi * hrr_3001y;
                    double hrr_2201y = hrr_3101y - yjyi * hrr_2101y;
                    fyl = al2 * hrr_2201y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache22;
                    Ix = 1;
                    Iy = hrr_1200y;
                    Iz = trr_10z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_2200y;
                    fyi -= 1 * hrr_0200y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_20z;
                    fzi -= 1 * wt;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1300y;
                    fyj -= 2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_1210y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_11z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1201y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache23;
                    Ix = 1;
                    Iy = hrr_0200y;
                    Iz = trr_20z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1200y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * trr_30z;
                    fzi -= 2 * trr_10z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0300y;
                    fyj -= 2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_2100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0210y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * trr_21z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0201y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_2001z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache24;
                    Ix = trr_20x;
                    Iy = hrr_0100y;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_30x;
                    fxi -= 2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_2100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_21x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_2001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache25;
                    Ix = trr_10x;
                    Iy = hrr_1100y;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_2100y;
                    fyi -= 1 * hrr_0100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1200y;
                    fyj -= 1 * trr_10y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_1110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache26;
                    Ix = trr_10x;
                    Iy = hrr_0100y;
                    Iz = hrr_1100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_2100z;
                    fzi -= 1 * hrr_0100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1200z;
                    fzj -= 1 * trr_10z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_1110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache27;
                    Ix = 1;
                    Iy = hrr_2100y;
                    Iz = hrr_0100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_3100y;
                    fyi -= 2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_2200y;
                    fyj -= 1 * trr_20y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0200z;
                    fzj -= 1 * wt;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_2110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_2101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache28;
                    Ix = 1;
                    Iy = hrr_1100y;
                    Iz = hrr_1100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_2100y;
                    fyi -= 1 * hrr_0100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_2100z;
                    fzi -= 1 * hrr_0100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1200y;
                    fyj -= 1 * trr_10y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1200z;
                    fzj -= 1 * trr_10z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_1110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_1110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache29;
                    Ix = 1;
                    Iy = hrr_0100y;
                    Iz = hrr_2100z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * hrr_1100y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_3100z;
                    fzi -= 2 * hrr_1100z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0200y;
                    fyj -= 1 * 1;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_2200z;
                    fzj -= 1 * trr_20z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * hrr_0110y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_2110z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0101y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_2101z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache30;
                    Ix = trr_20x;
                    Iy = 1;
                    Iz = hrr_0200z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_30x;
                    fxi -= 2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1200z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_2100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_0300z = hrr_1200z - zjzi * hrr_0200z;
                    fzj = aj2 * hrr_0300z;
                    fzj -= 2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_21x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double hrr_0210z = hrr_1110z - zjzi * hrr_0110z;
                    fzk = ak2 * hrr_0210z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_2001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_0201z = hrr_1101z - zjzi * hrr_0101z;
                    fzl = al2 * hrr_0201z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache31;
                    Ix = trr_10x;
                    Iy = trr_10y;
                    Iz = hrr_0200z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1200z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0300z;
                    fzj -= 2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0210z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0201z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache32;
                    Ix = trr_10x;
                    Iy = 1;
                    Iz = hrr_1200z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_20x;
                    fxi -= 1 * 1;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_2200z;
                    fzi -= 1 * hrr_0200z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_1100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_1300z = hrr_2200z - zjzi * hrr_1200z;
                    fzj = aj2 * hrr_1300z;
                    fzj -= 2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_11x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double hrr_1210z = hrr_2110z - zjzi * hrr_1110z;
                    fzk = ak2 * hrr_1210z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_1001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_1201z = hrr_2101z - zjzi * hrr_1101z;
                    fzl = al2 * hrr_1201z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache33;
                    Ix = 1;
                    Iy = trr_20y;
                    Iz = hrr_0200z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_30y;
                    fyi -= 2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_1200z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_2100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_0300z;
                    fzj -= 2 * hrr_0100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_21y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_0210z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_2001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_0201z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache34;
                    Ix = 1;
                    Iy = trr_10y;
                    Iz = hrr_1200z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_20y;
                    fyi -= 1 * 1;
                    v_iy += fyi * prod_xz;
                    fzi = ai2 * hrr_2200z;
                    fzi -= 1 * hrr_0200z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_1100y;
                    v_jy += fyj * prod_xz;
                    fzj = aj2 * hrr_1300z;
                    fzj -= 2 * hrr_1100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_11y;
                    v_ky += fyk * prod_xz;
                    fzk = ak2 * hrr_1210z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_1001y;
                    v_ly += fyl * prod_xz;
                    fzl = al2 * hrr_1201z;
                    v_lz += fzl * prod_xy;
                    dd = dd_cache35;
                    Ix = 1;
                    Iy = 1;
                    Iz = hrr_2200z;
                    prod_xy = Ix * Iy * dd;
                    prod_xz = Ix * Iz * dd;
                    prod_yz = Iy * Iz * dd;
                    fxi = ai2 * trr_10x;
                    v_ix += fxi * prod_yz;
                    fyi = ai2 * trr_10y;
                    v_iy += fyi * prod_xz;
                    double trr_50z = c0z * trr_40z + 4*b10 * trr_30z;
                    double hrr_4100z = trr_50z - zjzi * trr_40z;
                    double hrr_3200z = hrr_4100z - zjzi * hrr_3100z;
                    fzi = ai2 * hrr_3200z;
                    fzi -= 2 * hrr_1200z;
                    v_iz += fzi * prod_xy;
                    fxj = aj2 * hrr_0100x;
                    v_jx += fxj * prod_yz;
                    fyj = aj2 * hrr_0100y;
                    v_jy += fyj * prod_xz;
                    double hrr_2300z = hrr_3200z - zjzi * hrr_2200z;
                    fzj = aj2 * hrr_2300z;
                    fzj -= 2 * hrr_2100z;
                    v_jz += fzj * prod_xy;
                    fxk = ak2 * trr_01x;
                    v_kx += fxk * prod_yz;
                    fyk = ak2 * trr_01y;
                    v_ky += fyk * prod_xz;
                    double trr_41z = cpz * trr_40z + 4*b00 * trr_30z;
                    double hrr_3110z = trr_41z - zjzi * trr_31z;
                    double hrr_2210z = hrr_3110z - zjzi * hrr_2110z;
                    fzk = ak2 * hrr_2210z;
                    v_kz += fzk * prod_xy;
                    fxl = al2 * hrr_0001x;
                    v_lx += fxl * prod_yz;
                    fyl = al2 * hrr_0001y;
                    v_ly += fyl * prod_xz;
                    double hrr_4001z = trr_41z - zlzk * trr_40z;
                    double hrr_3101z = hrr_4001z - zjzi * hrr_3001z;
                    double hrr_2201z = hrr_3101z - zjzi * hrr_2101z;
                    fzl = al2 * hrr_2201z;
                    v_lz += fzl * prod_xy;
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

__global__ static
void rys_ejk_ip1_2210(RysIntEnvVars envs, JKEnergy jk, BoundsInfo bounds,
                     int *pool, double *dd_pool, int *head)
{
    int sq_id = threadIdx.x;
    int gout_id = threadIdx.y;
    constexpr int nsq_per_block = 32;
    constexpr int gout_stride = 8;
    int thread_id = threadIdx.y * nsq_per_block + threadIdx.x;
    int threads = nsq_per_block * gout_stride;
    int *bas_kl_idx = pool + blockIdx.x * QUEUE_DEPTH;
    double *dd_cache = dd_pool + blockIdx.x * 3456 + sq_id;
    __shared__ int ntasks, pair_ij;
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
while (pair_ij < bounds.npairs_ij) {
    int bas_ij = bounds.pair_ij_mapping[pair_ij];
    if (thread_id == 0) {
        ntasks = 0;
    }
    __syncthreads();
    if (jk.lr_factor != 0) {
        _fill_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    } else {
        _fill_sr_ejk_tasks(&ntasks, bas_kl_idx, bas_ij, jk, envs, bounds);
    }
    if (ntasks == 0) {
        if (thread_id == 0) {
            pair_ij = atomicAdd(head, 1);
        }
        __syncthreads();
        continue;
    }

    int nbas = envs.nbas;
    int *bas = envs.bas;
    double *env = envs.env;
    int iprim = bounds.iprim;
    int jprim = bounds.jprim;
    int kprim = bounds.kprim;
    int lprim = bounds.lprim;
    int nroots = bounds.nroots;
    extern __shared__ double shared_memory[];
    double *rlrk = shared_memory + sq_id;
    double *Rpq = shared_memory + nsq_per_block * 3 + sq_id;
    double *gx = shared_memory + nsq_per_block * 6 + sq_id;
    double *rw = shared_memory + nsq_per_block * 114 + sq_id;
    double *cicj_cache = shared_memory + nsq_per_block * (114+nroots*2);

    __shared__ int ish;
    __shared__ int jsh;
    __shared__ double ri[3];
    __shared__ double rjri[3];
    if (thread_id == 0) {
        ish = bas_ij / nbas;
        jsh = bas_ij % nbas;
    }
    __syncthreads();
    double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
    double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
    double *ci = env + bas[ish*BAS_SLOTS+PTR_COEFF];
    double *cj = env + bas[jsh*BAS_SLOTS+PTR_COEFF];
    if (thread_id < 3) {
        int ri_ptr = bas[ish*BAS_SLOTS+PTR_BAS_COORD];
        int rj_ptr = bas[jsh*BAS_SLOTS+PTR_BAS_COORD];
        ri[thread_id] = env[ri_ptr+thread_id];
        rjri[thread_id] = env[rj_ptr+thread_id] - ri[thread_id];
    }
    __syncthreads();
    double xjxi = rjri[0];
    double yjyi = rjri[1];
    double zjzi = rjri[2];
    for (int ij = thread_id; ij < iprim*jprim; ij += threads) {
        int ip = ij / jprim;
        int jp = ij % jprim;
        double ai = expi[ip];
        double aj = expj[jp];
        double aij = ai + aj;
        double theta_ij = ai * aj / aij;
        double rr_ij = xjxi*xjxi + yjyi*yjyi + zjzi*zjzi;
        double Kab = exp(-theta_ij * rr_ij);
        cicj_cache[ij] = ci[ip] * cj[jp] * Kab;
    }

    int *ao_loc = envs.ao_loc;
    int nao = ao_loc[nbas];
    double *dm = jk.dm;

    for (int task_id = sq_id; task_id < ntasks+sq_id; task_id += nsq_per_block) {
        __syncthreads();
        int bas_kl = bas_kl_idx[task_id];
        int ksh = bas_kl / nbas;
        int lsh = bas_kl % nbas;
        double fac_sym = PI_FAC;
        if (task_id < ntasks) {
            if (ish == jsh) fac_sym *= .5;
            if (ksh == lsh) fac_sym *= .5;
            if (ish*nbas+jsh == bas_kl) fac_sym *= .5;
        } else {
            fac_sym = 0;
        }
        int i0 = ao_loc[ish];
        int j0 = ao_loc[jsh];
        int k0 = ao_loc[ksh];
        int l0 = ao_loc[lsh];
        double *expi = env + bas[ish*BAS_SLOTS+PTR_EXP];
        double *expj = env + bas[jsh*BAS_SLOTS+PTR_EXP];
        double *expk = env + bas[ksh*BAS_SLOTS+PTR_EXP];
        double *expl = env + bas[lsh*BAS_SLOTS+PTR_EXP];
        double *ck = env + bas[ksh*BAS_SLOTS+PTR_COEFF];
        double *cl = env + bas[lsh*BAS_SLOTS+PTR_COEFF];
        double *rk = env + bas[ksh*BAS_SLOTS+PTR_BAS_COORD];
        double *rl = env + bas[lsh*BAS_SLOTS+PTR_BAS_COORD];
        double xlxk = rl[0] - rk[0];
        double ylyk = rl[1] - rk[1];
        double zlzk = rl[2] - rk[2];
        if (gout_id == 0) {
            rlrk[0] = xlxk;
            rlrk[32] = ylyk;
            rlrk[64] = zlzk;
        }
        double v_ix = 0;
        double v_iy = 0;
        double v_iz = 0;
        double v_jx = 0;
        double v_jy = 0;
        double v_jz = 0;
        double v_kx = 0;
        double v_ky = 0;
        double v_kz = 0;
        double v_lx = 0;
        double v_ly = 0;
        double v_lz = 0;
        double dd;
        double prod_xy;
        double prod_xz;
        double prod_yz;
        double Ix, Iy, Iz;
        int do_j = jk.j_factor != 0.;
        int do_k = jk.k_factor != 0.;
        if (jk.n_dm == 1) {
            for (int n = gout_id; n < 108; n+=8) {
                int kl = n / 36;
                int ij = n % 36;
                int i = ij % 6;
                int j = ij / 6;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm[_jk] * dm[_il] + dm[_jl] * dm[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * dm[_ji] * dm[_lk];
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        } else {
            double *dmb = dm + nao * nao;
            for (int n = gout_id; n < 108; n+=8) {
                int kl = n / 36;
                int ij = n % 36;
                int i = ij % 6;
                int j = ij / 6;
                int k = kl % 3;
                int l = kl / 3;
                int _i = i + i0;
                int _j = j + j0;
                int _k = k + k0;
                int _l = l + l0;
                int _jl = _j*nao+_l;
                int _jk = _j*nao+_k;
                int _il = _i*nao+_l;
                int _ik = _i*nao+_k;
                int _ji = _j*nao+_i;
                int _lk = _l*nao+_k;
                double dd = 0;
                if (do_k) {
                    dd += jk.k_factor * (dm [_jk] * dm [_il] + dm [_jl] * dm [_ik] +
                                         dmb[_jk] * dmb[_il] + dmb[_jl] * dmb[_ik]);
                }
                if (do_j) {
                    dd += jk.j_factor * (dm[_ji] + dmb[_ji]) * (dm[_lk] + dmb[_lk]);
                }
                dd_cache[n*32] = fac_sym * dd;
            }
        }

        for (int klp = 0; klp < kprim*lprim; ++klp) {
            int kp = klp / lprim;
            int lp = klp % lprim;
            double ak = expk[kp];
            double al = expl[lp];
            double ak2 = ak * 2;
            double al2 = al * 2;
            double akl = ak + al;
            double al_akl = al / akl;
            double theta_kl = ak * al_akl;
            __syncthreads();
            if (gout_id == 0) {
                double xlxk = rlrk[0];
                double ylyk = rlrk[32];
                double zlzk = rlrk[64];
                double Kcd = exp(-theta_kl * (xlxk*xlxk+ylyk*ylyk+zlzk*zlzk));
                double ckcl = ck[kp] * cl[lp] * Kcd;
                gx[0] = ckcl;
            }
            for (int ijp = 0; ijp < iprim*jprim; ++ijp) {
                int ip = ijp / jprim;
                int jp = ijp % jprim;
                double ai = expi[ip];
                double aj = expj[jp];
                double ai2 = ai * 2;
                double aj2 = aj * 2;
                double aij = ai + aj;
                double aj_aij = aj / aij;
                double xij = ri[0] + (rjri[0]) * aj_aij;
                double yij = ri[1] + (rjri[1]) * aj_aij;
                double zij = ri[2] + (rjri[2]) * aj_aij;
                double xkl = rk[0] + rlrk[0] * al_akl;
                double ykl = rk[1] + rlrk[32] * al_akl;
                double zkl = rk[2] + rlrk[64] * al_akl;
                double xpq = xij - xkl;
                double ypq = yij - ykl;
                double zpq = zij - zkl;
                double theta = aij * akl / (aij + akl);
                double rr = xpq * xpq + ypq * ypq + zpq * zpq;
                __syncthreads();
                if (gout_id == 0) {
                    Rpq[0] = xpq;
                    Rpq[32] = ypq;
                    Rpq[64] = zpq;
                    double cicj = cicj_cache[ijp];
                    gx[1152] = cicj / (aij*akl*sqrt(aij+akl));
                }
                int nroots = bounds.nroots;
                rys_roots_for_k(nroots, theta, rr, rw, jk.omega, jk.lr_factor, jk.sr_factor);
                double s0, s1, s2;
                for (int irys = 0; irys < nroots; ++irys) {
                    __syncthreads();
                    double rt = rw[irys*64];
                    double rt_aa = rt / (aij + akl);
                    double rt_aij = rt_aa * akl;
                    double rt_akl = rt_aa * aij;
                    double b00 = .5 * rt_aa;
                    double b10 = .5/aij * (1 - rt_aij);
                    double b01 = .5/akl * (1 - rt_akl);
                    for (int n = gout_id; n < 3; n += 8) {
                        if (n == 2) {
                            gx[2304] = rw[irys*64+32];
                        }
                        double *_gx = gx + n * 1152;
                        double xjxi = rjri[n];
                        double Rpa = xjxi * aj_aij;
                        double c0x = Rpa - rt_aij * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = c0x * s0;
                        _gx[32] = s1;
                        s2 = c0x * s1 + 1 * b10 * s0;
                        _gx[64] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 2 * b10 * s0;
                        _gx[96] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 3 * b10 * s0;
                        _gx[128] = s2;
                        s0 = s1;
                        s1 = s2;
                        s2 = c0x * s1 + 4 * b10 * s0;
                        _gx[160] = s2;
                        double xlxk = rlrk[n*32];
                        double Rqc = xlxk * al_akl;
                        double cpx = Rqc + rt_akl * Rpq[n*32];
                        s0 = _gx[0];
                        s1 = cpx * s0;
                        _gx[384] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        _gx[768] = s2;
                        s0 = _gx[32];
                        s1 = cpx * s0;
                        s1 += 1 * b00 * _gx[0];
                        _gx[416] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 1 * b00 * _gx[384];
                        _gx[800] = s2;
                        s0 = _gx[64];
                        s1 = cpx * s0;
                        s1 += 2 * b00 * _gx[32];
                        _gx[448] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 2 * b00 * _gx[416];
                        _gx[832] = s2;
                        s0 = _gx[96];
                        s1 = cpx * s0;
                        s1 += 3 * b00 * _gx[64];
                        _gx[480] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 3 * b00 * _gx[448];
                        _gx[864] = s2;
                        s0 = _gx[128];
                        s1 = cpx * s0;
                        s1 += 4 * b00 * _gx[96];
                        _gx[512] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 4 * b00 * _gx[480];
                        _gx[896] = s2;
                        s0 = _gx[160];
                        s1 = cpx * s0;
                        s1 += 5 * b00 * _gx[128];
                        _gx[544] = s1;
                        s2 = cpx*s1 + 1 * b01 *s0;
                        s2 += 5 * b00 * _gx[512];
                        _gx[928] = s2;
                        s1 = _gx[160];
                        s0 = _gx[128];
                        _gx[256] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[96];
                        _gx[224] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[64];
                        _gx[192] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[32];
                        _gx[160] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[0];
                        _gx[128] = s1 - xjxi * s0;
                        s1 = _gx[256];
                        s0 = _gx[224];
                        _gx[352] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[192];
                        _gx[320] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[160];
                        _gx[288] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[128];
                        _gx[256] = s1 - xjxi * s0;
                        s1 = _gx[544];
                        s0 = _gx[512];
                        _gx[640] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[480];
                        _gx[608] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[448];
                        _gx[576] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[416];
                        _gx[544] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[384];
                        _gx[512] = s1 - xjxi * s0;
                        s1 = _gx[640];
                        s0 = _gx[608];
                        _gx[736] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[576];
                        _gx[704] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[544];
                        _gx[672] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[512];
                        _gx[640] = s1 - xjxi * s0;
                        s1 = _gx[928];
                        s0 = _gx[896];
                        _gx[1024] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[864];
                        _gx[992] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[832];
                        _gx[960] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[800];
                        _gx[928] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[768];
                        _gx[896] = s1 - xjxi * s0;
                        s1 = _gx[1024];
                        s0 = _gx[992];
                        _gx[1120] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[960];
                        _gx[1088] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[928];
                        _gx[1056] = s1 - xjxi * s0;
                        s1 = s0;
                        s0 = _gx[896];
                        _gx[1024] = s1 - xjxi * s0;
                    }
                    __syncthreads();
                    double xjxi = rjri[0];
                    double yjyi = rjri[1];
                    double zjzi = rjri[2];
                    double xlxk = rlrk[0];
                    double ylyk = rlrk[32];
                    double zlzk = rlrk[64];
                    switch (gout_id) {
                    case 0:
                        dd = dd_cache[0];
                        Ix = gx[704];
                        Iy = gx[1152];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[736] - 2 * gx[672]) * prod_yz;
                        v_kx += (ak2 * gx[1088] - 1 * gx[320]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += (aj2 * (gx[736] - xjxi * Ix) - 2 * gx[576]) * prod_yz;
                        v_lx += al2 * (gx[1088] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[256];
                        Ix = gx[544];
                        Iy = gx[1280];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += (ak2 * gx[928] - 1 * gx[160]) * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += (aj2 * (gx[576] - xjxi * Ix) - 1 * gx[416]) * prod_yz;
                        v_lx += al2 * (gx[928] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[512];
                        Ix = gx[512];
                        Iy = gx[1184];
                        Iz = gx[2464];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[896] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1568] * prod_xz;
                        v_iz += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xy;
                        v_kz += ak2 * gx[2848] * prod_xy;
                        v_jx += (aj2 * (gx[544] - xjxi * Ix) - 1 * gx[384]) * prod_yz;
                        v_lx += al2 * (gx[896] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2496] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2848] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[768];
                        Ix = gx[448];
                        Iy = gx[1280];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[480] - 2 * gx[416]) * prod_yz;
                        v_kx += (ak2 * gx[832] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += ak2 * gx[2816] * prod_xy;
                        v_jx += aj2 * (gx[480] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[832] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1024];
                        Ix = gx[416];
                        Iy = gx[1152];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += ak2 * gx[2976] * prod_xy;
                        v_jx += aj2 * (gx[448] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[800] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2624] - zjzi * Iz) - 2 * gx[2464]) * prod_xy;
                        v_lz += al2 * (gx[2976] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1280];
                        Ix = gx[256];
                        Iy = gx[1568];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += (ak2 * gx[1952] - 1 * gx[1184]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += (aj2 * (gx[288] - xjxi * Ix) - 2 * gx[128]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1536];
                        Ix = gx[192];
                        Iy = gx[1536];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += ak2 * gx[576] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 1 * gx[1152]) * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += ak2 * gx[2816] * prod_xy;
                        v_jx += (aj2 * (gx[224] - xjxi * Ix) - 1 * gx[64]) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1792];
                        Ix = gx[32];
                        Iy = gx[1792];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2176] - 1 * gx[1408]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1824] - yjyi * Iy) - 2 * gx[1664]) * prod_xz;
                        v_ly += al2 * (gx[2176] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2048];
                        Ix = gx[0];
                        Iy = gx[1696];
                        Iz = gx[2464];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += (ak2 * gx[2080] - 1 * gx[1312]) * prod_xz;
                        v_iz += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xy;
                        v_kz += ak2 * gx[2848] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[2080] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2496] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2848] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2304];
                        Ix = gx[320];
                        Iy = gx[1152];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += ak2 * gx[704] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[3072] - 1 * gx[2304]) * prod_xy;
                        v_jx += (aj2 * (gx[352] - xjxi * Ix) - 2 * gx[192]) * prod_yz;
                        v_lx += al2 * (gx[704] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3072] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2560];
                        Ix = gx[160];
                        Iy = gx[1280];
                        Iz = gx[2720];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[544] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xy;
                        v_kz += (ak2 * gx[3104] - 1 * gx[2336]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2752] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3104] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2816];
                        Ix = gx[128];
                        Iy = gx[1184];
                        Iz = gx[2848];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1568] * prod_xz;
                        v_iz += (ai2 * gx[2880] - 1 * gx[2816]) * prod_xy;
                        v_kz += (ak2 * gx[3232] - 1 * gx[2464]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2880] - zjzi * Iz) - 1 * gx[2720]) * prod_xy;
                        v_lz += al2 * (gx[3232] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3072];
                        Ix = gx[64];
                        Iy = gx[1280];
                        Iz = gx[2816];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += ai2 * gx[2848] * prod_xy;
                        v_kz += (ak2 * gx[3200] - 1 * gx[2432]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2848] - zjzi * Iz) - 1 * gx[2688]) * prod_xy;
                        v_lz += al2 * (gx[3200] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3328];
                        Ix = gx[32];
                        Iy = gx[1152];
                        Iz = gx[2976];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += (ai2 * gx[3008] - 1 * gx[2944]) * prod_xy;
                        v_kz += (ak2 * gx[3360] - 1 * gx[2592]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3008] - zjzi * Iz) - 2 * gx[2848]) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        break;
                    case 1:
                        dd = dd_cache[32];
                        Ix = gx[672];
                        Iy = gx[1184];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[704] - 1 * gx[640]) * prod_yz;
                        v_kx += (ak2 * gx[1056] - 1 * gx[288]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1568] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += (aj2 * (gx[704] - xjxi * Ix) - 2 * gx[544]) * prod_yz;
                        v_lx += al2 * (gx[1056] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[288];
                        Ix = gx[512];
                        Iy = gx[1344];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[896] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1376] - 2 * gx[1312]) * prod_xz;
                        v_ky += ak2 * gx[1728] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += (aj2 * (gx[544] - xjxi * Ix) - 1 * gx[384]) * prod_yz;
                        v_lx += al2 * (gx[896] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1376] - yjyi * Iy) - 1 * gx[1216]) * prod_xz;
                        v_ly += al2 * (gx[1728] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[544];
                        Ix = gx[512];
                        Iy = gx[1152];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[896] - 1 * gx[128]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += (ai2 * gx[2528] - 2 * gx[2464]) * prod_xy;
                        v_kz += ak2 * gx[2880] * prod_xy;
                        v_jx += (aj2 * (gx[544] - xjxi * Ix) - 1 * gx[384]) * prod_yz;
                        v_lx += al2 * (gx[896] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2528] - zjzi * Iz) - 1 * gx[2368]) * prod_xy;
                        v_lz += al2 * (gx[2880] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[800];
                        Ix = gx[416];
                        Iy = gx[1312];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += ak2 * gx[2816] * prod_xy;
                        v_jx += aj2 * (gx[448] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[800] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1344] - yjyi * Iy) - 1 * gx[1184]) * prod_xz;
                        v_ly += al2 * (gx[1696] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1056];
                        Ix = gx[384];
                        Iy = gx[1216];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += ak2 * gx[1600] * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2944] * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1248] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1600] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2592] - zjzi * Iz) - 2 * gx[2432]) * prod_xy;
                        v_lz += al2 * (gx[2944] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1312];
                        Ix = gx[256];
                        Iy = gx[1536];
                        Iz = gx[2368];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xy;
                        v_kz += ak2 * gx[2752] * prod_xy;
                        v_jx += (aj2 * (gx[288] - xjxi * Ix) - 2 * gx[128]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2400] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2752] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1568];
                        Ix = gx[160];
                        Iy = gx[1568];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[544] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += (ak2 * gx[1952] - 1 * gx[1184]) * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += ak2 * gx[2816] * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1824];
                        Ix = gx[0];
                        Iy = gx[1856];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1888] - 2 * gx[1824]) * prod_xz;
                        v_ky += (ak2 * gx[2240] - 1 * gx[1472]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1888] - yjyi * Iy) - 2 * gx[1728]) * prod_xz;
                        v_ly += al2 * (gx[2240] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2080];
                        Ix = gx[0];
                        Iy = gx[1664];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1280]) * prod_xz;
                        v_iz += (ai2 * gx[2528] - 2 * gx[2464]) * prod_xy;
                        v_kz += ak2 * gx[2880] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2528] - zjzi * Iz) - 1 * gx[2368]) * prod_xy;
                        v_lz += al2 * (gx[2880] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2336];
                        Ix = gx[288];
                        Iy = gx[1184];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += ak2 * gx[672] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1568] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[3072] - 1 * gx[2304]) * prod_xy;
                        v_jx += (aj2 * (gx[320] - xjxi * Ix) - 2 * gx[160]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3072] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2592];
                        Ix = gx[128];
                        Iy = gx[1344];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += (ai2 * gx[1376] - 2 * gx[1312]) * prod_xz;
                        v_ky += ak2 * gx[1728] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[3072] - 1 * gx[2304]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1376] - yjyi * Iy) - 1 * gx[1216]) * prod_xz;
                        v_ly += al2 * (gx[1728] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3072] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2848];
                        Ix = gx[128];
                        Iy = gx[1152];
                        Iz = gx[2880];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += (ai2 * gx[2912] - 2 * gx[2848]) * prod_xy;
                        v_kz += (ak2 * gx[3264] - 1 * gx[2496]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2912] - zjzi * Iz) - 1 * gx[2752]) * prod_xy;
                        v_lz += al2 * (gx[3264] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3104];
                        Ix = gx[32];
                        Iy = gx[1312];
                        Iz = gx[2816];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += ai2 * gx[2848] * prod_xy;
                        v_kz += (ak2 * gx[3200] - 1 * gx[2432]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1344] - yjyi * Iy) - 1 * gx[1184]) * prod_xz;
                        v_ly += al2 * (gx[1696] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2848] - zjzi * Iz) - 1 * gx[2688]) * prod_xy;
                        v_lz += al2 * (gx[3200] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3360];
                        Ix = gx[0];
                        Iy = gx[1216];
                        Iz = gx[2944];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += ak2 * gx[1600] * prod_xz;
                        v_iz += ai2 * gx[2976] * prod_xy;
                        v_kz += (ak2 * gx[3328] - 1 * gx[2560]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1248] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1600] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2976] - zjzi * Iz) - 2 * gx[2816]) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        break;
                    case 2:
                        dd = dd_cache[64];
                        Ix = gx[672];
                        Iy = gx[1152];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[704] - 1 * gx[640]) * prod_yz;
                        v_kx += (ak2 * gx[1056] - 1 * gx[288]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += (aj2 * (gx[704] - xjxi * Ix) - 2 * gx[544]) * prod_yz;
                        v_lx += al2 * (gx[1056] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[320];
                        Ix = gx[512];
                        Iy = gx[1312];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[896] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += (aj2 * (gx[544] - xjxi * Ix) - 1 * gx[384]) * prod_yz;
                        v_lx += al2 * (gx[896] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1344] - yjyi * Iy) - 1 * gx[1184]) * prod_xz;
                        v_ly += al2 * (gx[1696] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[576];
                        Ix = gx[448];
                        Iy = gx[1408];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[480] - 2 * gx[416]) * prod_yz;
                        v_kx += (ak2 * gx[832] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1440] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[480] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[832] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1440] - yjyi * Iy) - 2 * gx[1280]) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[832];
                        Ix = gx[416];
                        Iy = gx[1280];
                        Iz = gx[2464];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xy;
                        v_kz += ak2 * gx[2848] * prod_xy;
                        v_jx += aj2 * (gx[448] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[800] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2496] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2848] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1088];
                        Ix = gx[384];
                        Iy = gx[1184];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1568] * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += ak2 * gx[2976] * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2624] - zjzi * Iz) - 2 * gx[2464]) * prod_xy;
                        v_lz += al2 * (gx[2976] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1344];
                        Ix = gx[192];
                        Iy = gx[1664];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += ak2 * gx[576] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1280]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += (aj2 * (gx[224] - xjxi * Ix) - 1 * gx[64]) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1600];
                        Ix = gx[160];
                        Iy = gx[1536];
                        Iz = gx[2464];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[544] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xy;
                        v_kz += ak2 * gx[2848] * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2496] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2848] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1856];
                        Ix = gx[0];
                        Iy = gx[1824];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xz;
                        v_ky += (ak2 * gx[2208] - 1 * gx[1440]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1856] - yjyi * Iy) - 2 * gx[1696]) * prod_xz;
                        v_ly += al2 * (gx[2208] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2112];
                        Ix = gx[64];
                        Iy = gx[1536];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 1 * gx[1152]) * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2944] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2592] - zjzi * Iz) - 2 * gx[2432]) * prod_xy;
                        v_lz += al2 * (gx[2944] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2368];
                        Ix = gx[288];
                        Iy = gx[1152];
                        Iz = gx[2720];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += ak2 * gx[672] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xy;
                        v_kz += (ak2 * gx[3104] - 1 * gx[2336]) * prod_xy;
                        v_jx += (aj2 * (gx[320] - xjxi * Ix) - 2 * gx[160]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2752] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3104] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2624];
                        Ix = gx[128];
                        Iy = gx[1312];
                        Iz = gx[2720];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xy;
                        v_kz += (ak2 * gx[3104] - 1 * gx[2336]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1344] - yjyi * Iy) - 1 * gx[1184]) * prod_xz;
                        v_ly += al2 * (gx[1696] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2752] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3104] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2880];
                        Ix = gx[64];
                        Iy = gx[1408];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[1440] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[3072] - 1 * gx[2304]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1440] - yjyi * Iy) - 2 * gx[1280]) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3072] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3136];
                        Ix = gx[32];
                        Iy = gx[1280];
                        Iz = gx[2848];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2880] - 1 * gx[2816]) * prod_xy;
                        v_kz += (ak2 * gx[3232] - 1 * gx[2464]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2880] - zjzi * Iz) - 1 * gx[2720]) * prod_xy;
                        v_lz += al2 * (gx[3232] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3392];
                        Ix = gx[0];
                        Iy = gx[1184];
                        Iz = gx[2976];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1568] * prod_xz;
                        v_iz += (ai2 * gx[3008] - 1 * gx[2944]) * prod_xy;
                        v_kz += (ak2 * gx[3360] - 1 * gx[2592]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3008] - zjzi * Iz) - 2 * gx[2848]) * prod_xy;
                        v_lz += al2 * (gx[3360] - zlzk * Iz) * prod_xy;
                        break;
                    case 3:
                        dd = dd_cache[96];
                        Ix = gx[640];
                        Iy = gx[1216];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[672] * prod_yz;
                        v_kx += (ak2 * gx[1024] - 1 * gx[256]) * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += ak2 * gx[1600] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += (aj2 * (gx[672] - xjxi * Ix) - 2 * gx[512]) * prod_yz;
                        v_lx += al2 * (gx[1024] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1248] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1600] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[352];
                        Ix = gx[512];
                        Iy = gx[1280];
                        Iz = gx[2368];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[896] - 1 * gx[128]) * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xy;
                        v_kz += ak2 * gx[2752] * prod_xy;
                        v_jx += (aj2 * (gx[544] - xjxi * Ix) - 1 * gx[384]) * prod_yz;
                        v_lx += al2 * (gx[896] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2400] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2752] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[608];
                        Ix = gx[416];
                        Iy = gx[1440];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1472] - 1 * gx[1408]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[448] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[800] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1472] - yjyi * Iy) - 2 * gx[1312]) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[864];
                        Ix = gx[384];
                        Iy = gx[1344];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1376] - 2 * gx[1312]) * prod_xz;
                        v_ky += ak2 * gx[1728] * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += ak2 * gx[2816] * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1376] - yjyi * Iy) - 1 * gx[1216]) * prod_xz;
                        v_ly += al2 * (gx[1728] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1120];
                        Ix = gx[384];
                        Iy = gx[1152];
                        Iz = gx[2624];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += (ai2 * gx[2656] - 2 * gx[2592]) * prod_xy;
                        v_kz += ak2 * gx[3008] * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2656] - zjzi * Iz) - 2 * gx[2496]) * prod_xy;
                        v_lz += al2 * (gx[3008] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1376];
                        Ix = gx[160];
                        Iy = gx[1696];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[544] * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += (ak2 * gx[2080] - 1 * gx[1312]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[2080] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1632];
                        Ix = gx[128];
                        Iy = gx[1600];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += (ak2 * gx[1984] - 1 * gx[1216]) * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += ak2 * gx[2816] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1984] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1888];
                        Ix = gx[0];
                        Iy = gx[1792];
                        Iz = gx[2368];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2176] - 1 * gx[1408]) * prod_xz;
                        v_iz += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xy;
                        v_kz += ak2 * gx[2752] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1824] - yjyi * Iy) - 2 * gx[1664]) * prod_xz;
                        v_ly += al2 * (gx[2176] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2400] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2752] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2144];
                        Ix = gx[32];
                        Iy = gx[1568];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += (ak2 * gx[1952] - 1 * gx[1184]) * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2944] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2592] - zjzi * Iz) - 2 * gx[2432]) * prod_xy;
                        v_lz += al2 * (gx[2944] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2400];
                        Ix = gx[256];
                        Iy = gx[1216];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += ak2 * gx[1600] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[3072] - 1 * gx[2304]) * prod_xy;
                        v_jx += (aj2 * (gx[288] - xjxi * Ix) - 2 * gx[128]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1248] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1600] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3072] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2656];
                        Ix = gx[128];
                        Iy = gx[1280];
                        Iz = gx[2752];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2784] - 2 * gx[2720]) * prod_xy;
                        v_kz += (ak2 * gx[3136] - 1 * gx[2368]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2784] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3136] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2912];
                        Ix = gx[32];
                        Iy = gx[1440];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[1472] - 1 * gx[1408]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[3072] - 1 * gx[2304]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1472] - yjyi * Iy) - 2 * gx[1312]) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3072] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3168];
                        Ix = gx[0];
                        Iy = gx[1344];
                        Iz = gx[2816];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1376] - 2 * gx[1312]) * prod_xz;
                        v_ky += ak2 * gx[1728] * prod_xz;
                        v_iz += ai2 * gx[2848] * prod_xy;
                        v_kz += (ak2 * gx[3200] - 1 * gx[2432]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1376] - yjyi * Iy) - 1 * gx[1216]) * prod_xz;
                        v_ly += al2 * (gx[1728] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2848] - zjzi * Iz) - 1 * gx[2688]) * prod_xy;
                        v_lz += al2 * (gx[3200] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3424];
                        Ix = gx[0];
                        Iy = gx[1152];
                        Iz = gx[3008];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += (ai2 * gx[3040] - 2 * gx[2976]) * prod_xy;
                        v_kz += (ak2 * gx[3392] - 1 * gx[2624]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[3040] - zjzi * Iz) - 2 * gx[2880]) * prod_xy;
                        v_lz += al2 * (gx[3392] - zlzk * Iz) * prod_xy;
                        break;
                    case 4:
                        dd = dd_cache[128];
                        Ix = gx[640];
                        Iy = gx[1184];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[672] * prod_yz;
                        v_kx += (ak2 * gx[1024] - 1 * gx[256]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1568] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += (aj2 * (gx[672] - xjxi * Ix) - 2 * gx[512]) * prod_yz;
                        v_lx += al2 * (gx[1024] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[384];
                        Ix = gx[576];
                        Iy = gx[1152];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[608] - 2 * gx[544]) * prod_yz;
                        v_kx += (ak2 * gx[960] - 1 * gx[192]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += ak2 * gx[2816] * prod_xy;
                        v_jx += (aj2 * (gx[608] - xjxi * Ix) - 1 * gx[448]) * prod_yz;
                        v_lx += al2 * (gx[960] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[640];
                        Ix = gx[416];
                        Iy = gx[1408];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 1 * gx[32]) * prod_yz;
                        v_iy += ai2 * gx[1440] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += aj2 * (gx[448] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[800] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1440] - yjyi * Iy) - 2 * gx[1280]) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[896];
                        Ix = gx[384];
                        Iy = gx[1312];
                        Iz = gx[2464];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xy;
                        v_kz += ak2 * gx[2848] * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1344] - yjyi * Iy) - 1 * gx[1184]) * prod_xz;
                        v_ly += al2 * (gx[1696] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2496] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2848] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1152];
                        Ix = gx[320];
                        Iy = gx[1536];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[352] - 2 * gx[288]) * prod_yz;
                        v_kx += ak2 * gx[704] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 1 * gx[1152]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += (aj2 * (gx[352] - xjxi * Ix) - 2 * gx[192]) * prod_yz;
                        v_lx += al2 * (gx[704] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1408];
                        Ix = gx[160];
                        Iy = gx[1664];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[544] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1280]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1664];
                        Ix = gx[128];
                        Iy = gx[1568];
                        Iz = gx[2464];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += (ak2 * gx[1952] - 1 * gx[1184]) * prod_xz;
                        v_iz += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xy;
                        v_kz += ak2 * gx[2848] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2496] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2848] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1920];
                        Ix = gx[64];
                        Iy = gx[1664];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1280]) * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += ak2 * gx[2816] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2176];
                        Ix = gx[32];
                        Iy = gx[1536];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += ak2 * gx[2976] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2624] - zjzi * Iz) - 2 * gx[2464]) * prod_xy;
                        v_lz += al2 * (gx[2976] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2432];
                        Ix = gx[256];
                        Iy = gx[1184];
                        Iz = gx[2720];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1568] * prod_xz;
                        v_iz += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xy;
                        v_kz += (ak2 * gx[3104] - 1 * gx[2336]) * prod_xy;
                        v_jx += (aj2 * (gx[288] - xjxi * Ix) - 2 * gx[128]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2752] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3104] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2688];
                        Ix = gx[192];
                        Iy = gx[1152];
                        Iz = gx[2816];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += ak2 * gx[576] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += ai2 * gx[2848] * prod_xy;
                        v_kz += (ak2 * gx[3200] - 1 * gx[2432]) * prod_xy;
                        v_jx += (aj2 * (gx[224] - xjxi * Ix) - 1 * gx[64]) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2848] - zjzi * Iz) - 1 * gx[2688]) * prod_xy;
                        v_lz += al2 * (gx[3200] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2944];
                        Ix = gx[32];
                        Iy = gx[1408];
                        Iz = gx[2720];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[1440] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xy;
                        v_kz += (ak2 * gx[3104] - 1 * gx[2336]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1440] - yjyi * Iy) - 2 * gx[1280]) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2752] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3104] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3200];
                        Ix = gx[0];
                        Iy = gx[1312];
                        Iz = gx[2848];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += (ai2 * gx[2880] - 1 * gx[2816]) * prod_xy;
                        v_kz += (ak2 * gx[3232] - 1 * gx[2464]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1344] - yjyi * Iy) - 1 * gx[1184]) * prod_xz;
                        v_ly += al2 * (gx[1696] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2880] - zjzi * Iz) - 1 * gx[2720]) * prod_xy;
                        v_lz += al2 * (gx[3232] - zlzk * Iz) * prod_xy;
                        break;
                    case 5:
                        dd = dd_cache[160];
                        Ix = gx[640];
                        Iy = gx[1152];
                        Iz = gx[2368];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[672] * prod_yz;
                        v_kx += (ak2 * gx[1024] - 1 * gx[256]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xy;
                        v_kz += ak2 * gx[2752] * prod_xy;
                        v_jx += (aj2 * (gx[672] - xjxi * Ix) - 2 * gx[512]) * prod_yz;
                        v_lx += al2 * (gx[1024] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2400] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2752] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[416];
                        Ix = gx[544];
                        Iy = gx[1184];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += (ak2 * gx[928] - 1 * gx[160]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1568] * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += ak2 * gx[2816] * prod_xy;
                        v_jx += (aj2 * (gx[576] - xjxi * Ix) - 1 * gx[416]) * prod_yz;
                        v_lx += al2 * (gx[928] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[672];
                        Ix = gx[384];
                        Iy = gx[1472];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1504] - 2 * gx[1440]) * prod_xz;
                        v_ky += ak2 * gx[1856] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1504] - yjyi * Iy) - 2 * gx[1344]) * prod_xz;
                        v_ly += al2 * (gx[1856] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[928];
                        Ix = gx[384];
                        Iy = gx[1280];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2528] - 2 * gx[2464]) * prod_xy;
                        v_kz += ak2 * gx[2880] * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2528] - zjzi * Iz) - 1 * gx[2368]) * prod_xy;
                        v_lz += al2 * (gx[2880] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1184];
                        Ix = gx[288];
                        Iy = gx[1568];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += ak2 * gx[672] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += (ak2 * gx[1952] - 1 * gx[1184]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += (aj2 * (gx[320] - xjxi * Ix) - 2 * gx[160]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1440];
                        Ix = gx[128];
                        Iy = gx[1728];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += (ai2 * gx[1760] - 2 * gx[1696]) * prod_xz;
                        v_ky += (ak2 * gx[2112] - 1 * gx[1344]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1760] - yjyi * Iy) - 1 * gx[1600]) * prod_xz;
                        v_ly += al2 * (gx[2112] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1696];
                        Ix = gx[128];
                        Iy = gx[1536];
                        Iz = gx[2496];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2528] - 2 * gx[2464]) * prod_xy;
                        v_kz += ak2 * gx[2880] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2528] - zjzi * Iz) - 1 * gx[2368]) * prod_xy;
                        v_lz += al2 * (gx[2880] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1952];
                        Ix = gx[32];
                        Iy = gx[1696];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += (ak2 * gx[2080] - 1 * gx[1312]) * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += ak2 * gx[2816] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[2080] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2208];
                        Ix = gx[0];
                        Iy = gx[1600];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += (ak2 * gx[1984] - 1 * gx[1216]) * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2944] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1984] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2592] - zjzi * Iz) - 2 * gx[2432]) * prod_xy;
                        v_lz += al2 * (gx[2944] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2464];
                        Ix = gx[256];
                        Iy = gx[1152];
                        Iz = gx[2752];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += (ai2 * gx[2784] - 2 * gx[2720]) * prod_xy;
                        v_kz += (ak2 * gx[3136] - 1 * gx[2368]) * prod_xy;
                        v_jx += (aj2 * (gx[288] - xjxi * Ix) - 2 * gx[128]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2784] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3136] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2720];
                        Ix = gx[160];
                        Iy = gx[1184];
                        Iz = gx[2816];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[544] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1568] * prod_xz;
                        v_iz += ai2 * gx[2848] * prod_xy;
                        v_kz += (ak2 * gx[3200] - 1 * gx[2432]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2848] - zjzi * Iz) - 1 * gx[2688]) * prod_xy;
                        v_lz += al2 * (gx[3200] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2976];
                        Ix = gx[0];
                        Iy = gx[1472];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1504] - 2 * gx[1440]) * prod_xz;
                        v_ky += ak2 * gx[1856] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[3072] - 1 * gx[2304]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1504] - yjyi * Iy) - 2 * gx[1344]) * prod_xz;
                        v_ly += al2 * (gx[1856] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3072] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3232];
                        Ix = gx[0];
                        Iy = gx[1280];
                        Iz = gx[2880];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += (ai2 * gx[2912] - 2 * gx[2848]) * prod_xy;
                        v_kz += (ak2 * gx[3264] - 1 * gx[2496]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2912] - zjzi * Iz) - 1 * gx[2752]) * prod_xy;
                        v_lz += al2 * (gx[3264] - zlzk * Iz) * prod_xy;
                        break;
                    case 6:
                        dd = dd_cache[192];
                        Ix = gx[576];
                        Iy = gx[1280];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[608] - 2 * gx[544]) * prod_yz;
                        v_kx += (ak2 * gx[960] - 1 * gx[192]) * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += (aj2 * (gx[608] - xjxi * Ix) - 1 * gx[448]) * prod_yz;
                        v_lx += al2 * (gx[960] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[448];
                        Ix = gx[544];
                        Iy = gx[1152];
                        Iz = gx[2464];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += (ak2 * gx[928] - 1 * gx[160]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xy;
                        v_kz += ak2 * gx[2848] * prod_xy;
                        v_jx += (aj2 * (gx[576] - xjxi * Ix) - 1 * gx[416]) * prod_yz;
                        v_lx += al2 * (gx[928] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2496] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2848] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[704];
                        Ix = gx[384];
                        Iy = gx[1440];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[0]) * prod_yz;
                        v_iy += (ai2 * gx[1472] - 1 * gx[1408]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1472] - yjyi * Iy) - 2 * gx[1312]) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[960];
                        Ix = gx[448];
                        Iy = gx[1152];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[480] - 2 * gx[416]) * prod_yz;
                        v_kx += (ak2 * gx[832] - 1 * gx[64]) * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2944] * prod_xy;
                        v_jx += aj2 * (gx[480] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[832] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2592] - zjzi * Iz) - 2 * gx[2432]) * prod_xy;
                        v_lz += al2 * (gx[2944] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1216];
                        Ix = gx[288];
                        Iy = gx[1536];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[320] - 1 * gx[256]) * prod_yz;
                        v_kx += ak2 * gx[672] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += (aj2 * (gx[320] - xjxi * Ix) - 2 * gx[160]) * prod_yz;
                        v_lx += al2 * (gx[672] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1472];
                        Ix = gx[128];
                        Iy = gx[1696];
                        Iz = gx[2336];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += (ai2 * gx[1728] - 1 * gx[1664]) * prod_xz;
                        v_ky += (ak2 * gx[2080] - 1 * gx[1312]) * prod_xz;
                        v_iz += (ai2 * gx[2368] - 1 * gx[2304]) * prod_xy;
                        v_kz += ak2 * gx[2720] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1728] - yjyi * Iy) - 1 * gx[1568]) * prod_xz;
                        v_ly += al2 * (gx[2080] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2368] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2720] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1728];
                        Ix = gx[64];
                        Iy = gx[1792];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[1824] * prod_xz;
                        v_ky += (ak2 * gx[2176] - 1 * gx[1408]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1824] - yjyi * Iy) - 2 * gx[1664]) * prod_xz;
                        v_ly += al2 * (gx[2176] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1984];
                        Ix = gx[32];
                        Iy = gx[1664];
                        Iz = gx[2464];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1280]) * prod_xz;
                        v_iz += (ai2 * gx[2496] - 1 * gx[2432]) * prod_xy;
                        v_kz += ak2 * gx[2848] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2496] - zjzi * Iz) - 1 * gx[2336]) * prod_xy;
                        v_lz += al2 * (gx[2848] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2240];
                        Ix = gx[0];
                        Iy = gx[1568];
                        Iz = gx[2592];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1600] - 1 * gx[1536]) * prod_xz;
                        v_ky += (ak2 * gx[1952] - 1 * gx[1184]) * prod_xz;
                        v_iz += (ai2 * gx[2624] - 1 * gx[2560]) * prod_xy;
                        v_kz += ak2 * gx[2976] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1600] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1952] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2624] - zjzi * Iz) - 2 * gx[2464]) * prod_xy;
                        v_lz += al2 * (gx[2976] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2496];
                        Ix = gx[192];
                        Iy = gx[1280];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[224] - 2 * gx[160]) * prod_yz;
                        v_kx += ak2 * gx[576] * prod_yz;
                        v_iy += ai2 * gx[1312] * prod_xz;
                        v_ky += ak2 * gx[1664] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[3072] - 1 * gx[2304]) * prod_xy;
                        v_jx += (aj2 * (gx[224] - xjxi * Ix) - 1 * gx[64]) * prod_yz;
                        v_lx += al2 * (gx[576] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1312] - yjyi * Iy) - 1 * gx[1152]) * prod_xz;
                        v_ly += al2 * (gx[1664] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3072] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2752];
                        Ix = gx[160];
                        Iy = gx[1152];
                        Iz = gx[2848];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[544] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += (ai2 * gx[2880] - 1 * gx[2816]) * prod_xy;
                        v_kz += (ak2 * gx[3232] - 1 * gx[2464]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2880] - zjzi * Iz) - 1 * gx[2720]) * prod_xy;
                        v_lz += al2 * (gx[3232] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3008];
                        Ix = gx[0];
                        Iy = gx[1440];
                        Iz = gx[2720];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1472] - 1 * gx[1408]) * prod_xz;
                        v_ky += ak2 * gx[1824] * prod_xz;
                        v_iz += (ai2 * gx[2752] - 1 * gx[2688]) * prod_xy;
                        v_kz += (ak2 * gx[3104] - 1 * gx[2336]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1472] - yjyi * Iy) - 2 * gx[1312]) * prod_xz;
                        v_ly += al2 * (gx[1824] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2752] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3104] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3264];
                        Ix = gx[64];
                        Iy = gx[1152];
                        Iz = gx[2944];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[96] - 2 * gx[32]) * prod_yz;
                        v_kx += ak2 * gx[448] * prod_yz;
                        v_iy += ai2 * gx[1184] * prod_xz;
                        v_ky += ak2 * gx[1536] * prod_xz;
                        v_iz += ai2 * gx[2976] * prod_xy;
                        v_kz += (ak2 * gx[3328] - 1 * gx[2560]) * prod_xy;
                        v_jx += aj2 * (gx[96] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[448] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1184] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1536] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2976] - zjzi * Iz) - 2 * gx[2816]) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        break;
                    case 7:
                        dd = dd_cache[224];
                        Ix = gx[544];
                        Iy = gx[1312];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[576] - 1 * gx[512]) * prod_yz;
                        v_kx += (ak2 * gx[928] - 1 * gx[160]) * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += (aj2 * (gx[576] - xjxi * Ix) - 1 * gx[416]) * prod_yz;
                        v_lx += al2 * (gx[928] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1344] - yjyi * Iy) - 1 * gx[1184]) * prod_xz;
                        v_ly += al2 * (gx[1696] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[480];
                        Ix = gx[512];
                        Iy = gx[1216];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[544] * prod_yz;
                        v_kx += (ak2 * gx[896] - 1 * gx[128]) * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += ak2 * gx[1600] * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += ak2 * gx[2816] * prod_xy;
                        v_jx += (aj2 * (gx[544] - xjxi * Ix) - 1 * gx[384]) * prod_yz;
                        v_lx += al2 * (gx[896] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1248] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1600] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[736];
                        Ix = gx[384];
                        Iy = gx[1408];
                        Iz = gx[2368];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[416] * prod_yz;
                        v_kx += (ak2 * gx[768] - 1 * gx[0]) * prod_yz;
                        v_iy += ai2 * gx[1440] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xy;
                        v_kz += ak2 * gx[2752] * prod_xy;
                        v_jx += aj2 * (gx[416] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[768] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1440] - yjyi * Iy) - 2 * gx[1280]) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2400] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2752] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[992];
                        Ix = gx[416];
                        Iy = gx[1184];
                        Iz = gx[2560];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[448] - 1 * gx[384]) * prod_yz;
                        v_kx += (ak2 * gx[800] - 1 * gx[32]) * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1568] * prod_xz;
                        v_iz += ai2 * gx[2592] * prod_xy;
                        v_kz += ak2 * gx[2944] * prod_xy;
                        v_jx += aj2 * (gx[448] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[800] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2592] - zjzi * Iz) - 2 * gx[2432]) * prod_xy;
                        v_lz += al2 * (gx[2944] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1248];
                        Ix = gx[256];
                        Iy = gx[1600];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[288] * prod_yz;
                        v_kx += ak2 * gx[640] * prod_yz;
                        v_iy += (ai2 * gx[1632] - 2 * gx[1568]) * prod_xz;
                        v_ky += (ak2 * gx[1984] - 1 * gx[1216]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += (aj2 * (gx[288] - xjxi * Ix) - 2 * gx[128]) * prod_yz;
                        v_lx += al2 * (gx[640] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1632] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1984] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1504];
                        Ix = gx[128];
                        Iy = gx[1664];
                        Iz = gx[2368];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += ai2 * gx[1696] * prod_xz;
                        v_ky += (ak2 * gx[2048] - 1 * gx[1280]) * prod_xz;
                        v_iz += (ai2 * gx[2400] - 2 * gx[2336]) * prod_xy;
                        v_kz += ak2 * gx[2752] * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1696] - yjyi * Iy) - 1 * gx[1536]) * prod_xz;
                        v_ly += al2 * (gx[2048] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2400] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2752] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[1760];
                        Ix = gx[32];
                        Iy = gx[1824];
                        Iz = gx[2304];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[1856] - 1 * gx[1792]) * prod_xz;
                        v_ky += (ak2 * gx[2208] - 1 * gx[1440]) * prod_xz;
                        v_iz += ai2 * gx[2336] * prod_xy;
                        v_kz += ak2 * gx[2688] * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1856] - yjyi * Iy) - 2 * gx[1696]) * prod_xz;
                        v_ly += al2 * (gx[2208] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2336] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[2688] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2016];
                        Ix = gx[0];
                        Iy = gx[1728];
                        Iz = gx[2432];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += (ai2 * gx[1760] - 2 * gx[1696]) * prod_xz;
                        v_ky += (ak2 * gx[2112] - 1 * gx[1344]) * prod_xz;
                        v_iz += ai2 * gx[2464] * prod_xy;
                        v_kz += ak2 * gx[2816] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1760] - yjyi * Iy) - 1 * gx[1600]) * prod_xz;
                        v_ly += al2 * (gx[2112] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2464] - zjzi * Iz) - 1 * gx[2304]) * prod_xy;
                        v_lz += al2 * (gx[2816] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2272];
                        Ix = gx[0];
                        Iy = gx[1536];
                        Iz = gx[2624];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[1568] * prod_xz;
                        v_ky += (ak2 * gx[1920] - 1 * gx[1152]) * prod_xz;
                        v_iz += (ai2 * gx[2656] - 2 * gx[2592]) * prod_xy;
                        v_kz += ak2 * gx[3008] * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1568] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1920] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2656] - zjzi * Iz) - 2 * gx[2496]) * prod_xy;
                        v_lz += al2 * (gx[3008] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2528];
                        Ix = gx[160];
                        Iy = gx[1312];
                        Iz = gx[2688];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[192] - 1 * gx[128]) * prod_yz;
                        v_kx += ak2 * gx[544] * prod_yz;
                        v_iy += (ai2 * gx[1344] - 1 * gx[1280]) * prod_xz;
                        v_ky += ak2 * gx[1696] * prod_xz;
                        v_iz += ai2 * gx[2720] * prod_xy;
                        v_kz += (ak2 * gx[3072] - 1 * gx[2304]) * prod_xy;
                        v_jx += (aj2 * (gx[192] - xjxi * Ix) - 1 * gx[32]) * prod_yz;
                        v_lx += al2 * (gx[544] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1344] - yjyi * Iy) - 1 * gx[1184]) * prod_xz;
                        v_ly += al2 * (gx[1696] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2720] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3072] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[2784];
                        Ix = gx[128];
                        Iy = gx[1216];
                        Iz = gx[2816];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[160] * prod_yz;
                        v_kx += ak2 * gx[512] * prod_yz;
                        v_iy += (ai2 * gx[1248] - 2 * gx[1184]) * prod_xz;
                        v_ky += ak2 * gx[1600] * prod_xz;
                        v_iz += ai2 * gx[2848] * prod_xy;
                        v_kz += (ak2 * gx[3200] - 1 * gx[2432]) * prod_xy;
                        v_jx += (aj2 * (gx[160] - xjxi * Ix) - 1 * gx[0]) * prod_yz;
                        v_lx += al2 * (gx[512] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1248] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1600] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2848] - zjzi * Iz) - 1 * gx[2688]) * prod_xy;
                        v_lz += al2 * (gx[3200] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3040];
                        Ix = gx[0];
                        Iy = gx[1408];
                        Iz = gx[2752];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += ai2 * gx[32] * prod_yz;
                        v_kx += ak2 * gx[384] * prod_yz;
                        v_iy += ai2 * gx[1440] * prod_xz;
                        v_ky += ak2 * gx[1792] * prod_xz;
                        v_iz += (ai2 * gx[2784] - 2 * gx[2720]) * prod_xy;
                        v_kz += (ak2 * gx[3136] - 1 * gx[2368]) * prod_xy;
                        v_jx += aj2 * (gx[32] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[384] - xlxk * Ix) * prod_yz;
                        v_jy += (aj2 * (gx[1440] - yjyi * Iy) - 2 * gx[1280]) * prod_xz;
                        v_ly += al2 * (gx[1792] - ylyk * Iy) * prod_xz;
                        v_jz += aj2 * (gx[2784] - zjzi * Iz) * prod_xy;
                        v_lz += al2 * (gx[3136] - zlzk * Iz) * prod_xy;
                        dd = dd_cache[3296];
                        Ix = gx[32];
                        Iy = gx[1184];
                        Iz = gx[2944];
                        prod_xy = Ix * Iy * dd;
                        prod_xz = Ix * Iz * dd;
                        prod_yz = Iy * Iz * dd;
                        v_ix += (ai2 * gx[64] - 1 * gx[0]) * prod_yz;
                        v_kx += ak2 * gx[416] * prod_yz;
                        v_iy += (ai2 * gx[1216] - 1 * gx[1152]) * prod_xz;
                        v_ky += ak2 * gx[1568] * prod_xz;
                        v_iz += ai2 * gx[2976] * prod_xy;
                        v_kz += (ak2 * gx[3328] - 1 * gx[2560]) * prod_xy;
                        v_jx += aj2 * (gx[64] - xjxi * Ix) * prod_yz;
                        v_lx += al2 * (gx[416] - xlxk * Ix) * prod_yz;
                        v_jy += aj2 * (gx[1216] - yjyi * Iy) * prod_xz;
                        v_ly += al2 * (gx[1568] - ylyk * Iy) * prod_xz;
                        v_jz += (aj2 * (gx[2976] - zjzi * Iz) - 2 * gx[2816]) * prod_xy;
                        v_lz += al2 * (gx[3328] - zlzk * Iz) * prod_xy;
                        break;
                    }
                }
            }
        }
        if (task_id >= ntasks) {
            break;
        }
        int ia = bas[ish*BAS_SLOTS+ATOM_OF];
        int ja = bas[jsh*BAS_SLOTS+ATOM_OF];
        int ka = bas[ksh*BAS_SLOTS+ATOM_OF];
        int la = bas[lsh*BAS_SLOTS+ATOM_OF];
        double *ejk = jk.ejk;
        atomicAdd(ejk+ia*3+0, v_ix);
        atomicAdd(ejk+ia*3+1, v_iy);
        atomicAdd(ejk+ia*3+2, v_iz);
        atomicAdd(ejk+ja*3+0, v_jx);
        atomicAdd(ejk+ja*3+1, v_jy);
        atomicAdd(ejk+ja*3+2, v_jz);
        atomicAdd(ejk+ka*3+0, v_kx);
        atomicAdd(ejk+ka*3+1, v_ky);
        atomicAdd(ejk+ka*3+2, v_kz);
        atomicAdd(ejk+la*3+0, v_lx);
        atomicAdd(ejk+la*3+1, v_ly);
        atomicAdd(ejk+la*3+2, v_lz);
    }
    if (thread_id == 0) {
        pair_ij = atomicAdd(head, 1);
    }
    __syncthreads();
}
}

int rys_ejk_ip1_unrolled(RysIntEnvVars *envs, JKEnergy *jk, BoundsInfo *bounds,
                        int *pool, double *dd_pool)
{
    int li = bounds->li;
    int lj = bounds->lj;
    int lk = bounds->lk;
    int ll = bounds->ll;
    int ijkl = li*125 + lj*25 + lk*5 + ll;
    int nroots = bounds->nroots;
    int nsq_per_block = 256;
    int gout_stride = 1;

    switch (ijkl) {
    case 156:
        nsq_per_block = 32;
        gout_stride = 8;
        break;
    case 256:
        nsq_per_block = 32;
        gout_stride = 8;
        break;
    case 261:
        nsq_per_block = 32;
        gout_stride = 8;
        break;
    case 280:
        nsq_per_block = 32;
        gout_stride = 8;
        break;
    case 281:
        nsq_per_block = 32;
        gout_stride = 8;
        break;
    case 285:
        nsq_per_block = 32;
        gout_stride = 8;
        break;
    case 305:
        nsq_per_block = 32;
        gout_stride = 8;
        break;
    }

    cudaDeviceProp prop;
    cudaGetDeviceProperties(&prop, 0);
    int workers = prop.multiProcessorCount;
    int *head = pool + workers * QUEUE_DEPTH;
    cudaMemset(head, 0, sizeof(int));

    dim3 threads(nsq_per_block, gout_stride);
    int iprim = bounds->iprim;
    int jprim = bounds->jprim;
    int buflen = nroots*2 * nsq_per_block + iprim*jprim;
    switch (ijkl) {
    case 0:
        rys_ejk_ip1_0000<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 125:
        rys_ejk_ip1_1000<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 130:
        rys_ejk_ip1_1010<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 131:
        rys_ejk_ip1_1011<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 150:
        rys_ejk_ip1_1100<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 155:
        rys_ejk_ip1_1110<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 156:
        buflen += 3648;
        rys_ejk_ip1_1111<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 250:
        rys_ejk_ip1_2000<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 255:
        rys_ejk_ip1_2010<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 256:
        buflen += 2496;
        rys_ejk_ip1_2011<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 260:
        rys_ejk_ip1_2020<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 261:
        buflen += 3264;
        rys_ejk_ip1_2021<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 275:
        rys_ejk_ip1_2100<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 280:
        buflen += 2496;
        rys_ejk_ip1_2110<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 281:
        buflen += 4800;
        rys_ejk_ip1_2111<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 285:
        buflen += 3264;
        rys_ejk_ip1_2120<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 300:
        rys_ejk_ip1_2200<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    case 305:
        buflen += 3648;
        rys_ejk_ip1_2210<<<workers, threads, buflen*sizeof(double)>>>(*envs, *jk, *bounds, pool, dd_pool, head); break;
    default: return 0;
    }
    return 1;
}
