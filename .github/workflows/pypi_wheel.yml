name: PyPI-wheel

on:
  release:
    types:
      # Note: editing the prerelease then marking as release does not trigger
      # this pipeline
      # - prereleased
      - released
  workflow_dispatch:

jobs:
  release-pypi-linux-cuda11:
    runs-on: ubuntu-latest
    env:
      img: wxj6000/manylinux2014:cuda118
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build wheels
      run: |
        docker run --rm -v ${{ github.workspace }}:/gpu4pyscf:rw --workdir=/gpu4pyscf \
        -e CMAKE_CONFIGURE_ARGS="-DBUILD_LIBXC=OFF" \
        ${{ env.img }} \
        bash -exc 'sh /gpu4pyscf/builder/build_wheels.sh'
    - name: List available wheels
      run: |
        ls ${{ github.workspace }}/wheelhouse
    - name: Publish to PyPI
      run: |
          pip install twine==6.0.1
          export TWINE_USERNAME=__token__
          export TWINE_PASSWORD="${{ secrets.PYPI_API_TOKEN }}"
          twine upload --verbose "${{ github.workspace }}/wheelhouse/*"

  release-pypi-linux-cuda12:
    runs-on: ubuntu-latest
    env:
      img: wxj6000/manylinux2014:cuda121
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build wheels
      run: |
        docker run --rm -v ${{ github.workspace }}:/gpu4pyscf:rw --workdir=/gpu4pyscf \
        -e CMAKE_CONFIGURE_ARGS="-DBUILD_LIBXC=OFF" \
        ${{ env.img }} \
        bash -exc 'sh /gpu4pyscf/builder/build_wheels.sh'
    - name: List available wheels
      run: |
        ls ${{ github.workspace }}/wheelhouse
    - name: Publish to PyPI
      run: |
          pip install twine==6.0.1
          export TWINE_USERNAME=__token__
          export TWINE_PASSWORD="${{ secrets.PYPI_API_TOKEN }}"
          twine upload --verbose "${{ github.workspace }}/wheelhouse/*"

  release-pypi-sdist:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Build sdist
      run: |
        python3 setup.py sdist
    - name: Publish to PyPI
      run: |
          pip install twine==6.0.1
          export TWINE_USERNAME=__token__
          export TWINE_PASSWORD="${{ secrets.PYPI_API_TOKEN }}"
          twine upload --verbose "${{ github.workspace }}/dist/*"
