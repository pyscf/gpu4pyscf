# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: nightly build

on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test_rks:
    runs-on: [self-hosted, Linux, X64, v100]
    steps:
    - uses: actions/checkout@v3

    - name: Pull CUDA Devel Image
      run: |
        docker pull wxj6000/gpu4pyscf:latest

    - name: Run RKS tests
      run: |
        docker run --gpus all \
          -u "$(id -u):$(id -g)" \
          -e CUPY_CACHE_DIR=/workspace/.cupy_cache \
          -e HTTP_PROXY=$HTTP_PROXY \
          -e HTTPS_PROXY=$HTTPS_PROXY \
          -v $GITHUB_WORKSPACE:/workspace wxj6000/gpu4pyscf:latest \
          /bin/bash -c "cd /workspace && source build.sh && pytest gpu4pyscf/tests/test_benchmark_rks.py -s -v -m 'not slow and not high_memory' --benchmark-compare-fail=min:10% --benchmark-compare=v1.3.0_rks_1v100 --benchmark-storage=gpu4pyscf/tests/benchmark_results/ && rm -rf .pytest_cache"

  test_uks:
    runs-on: [self-hosted, Linux, X64, v100]
    steps:
    - uses: actions/checkout@v3

    - name: Pull CUDA Devel Image
      run: |
        docker pull wxj6000/gpu4pyscf:latest

    - name: Run UKS tests
      run: |
        docker run --gpus all \
          -u "$(id -u):$(id -g)" \
          -e CUPY_CACHE_DIR=/workspace/.cupy_cache \
          -e HTTP_PROXY=$HTTP_PROXY \
          -e HTTPS_PROXY=$HTTPS_PROXY \
          -v $GITHUB_WORKSPACE:/workspace wxj6000/gpu4pyscf:latest \
          /bin/bash -c "cd /workspace && source build.sh && pytest gpu4pyscf/tests/test_benchmark_uks.py -s -v -m 'not slow and not high_memory' --benchmark-compare-fail=min:10% --benchmark-compare=v1.3.0_uks_1v100 --benchmark-storage=gpu4pyscf/tests/benchmark_results/ && rm -rf .pytest_cache"

  test_tddft:
    runs-on: [self-hosted, Linux, X64, v100]
    steps:
    - uses: actions/checkout@v3

    - name: Pull CUDA Devel Image
      run: |
        docker pull wxj6000/gpu4pyscf:latest

    - name: Run TDDFT tests
      run: |
        docker run --gpus all \
          -u "$(id -u):$(id -g)" \
          -e CUPY_CACHE_DIR=/workspace/.cupy_cache \
          -e HTTP_PROXY=$HTTP_PROXY \
          -e HTTPS_PROXY=$HTTPS_PROXY \
          -v $GITHUB_WORKSPACE:/workspace wxj6000/gpu4pyscf:latest \
          /bin/bash -c "cd /workspace && source build.sh && pytest gpu4pyscf/tests/test_benchmark_tddft.py -s -v -m 'not slow and not high_memory' --benchmark-compare-fail=min:10% --benchmark-compare=v1.3.0_tddft_1v100 --benchmark-storage=gpu4pyscf/tests/benchmark_results/ && rm -rf .pytest_cache"

  test_ecp:
    runs-on: [self-hosted, Linux, X64, v100]
    steps:
    - uses: actions/checkout@v3
    - name: Pull CUDA Devel Image
      run: |
        docker pull wxj6000/gpu4pyscf:latest
    
    - name: Run ECP tests
      run: |
        docker run --gpus all \
          -u "$(id -u):$(id -g)" \
          -e CUPY_CACHE_DIR=/workspace/.cupy_cache \
          -e HTTP_PROXY=$HTTP_PROXY \
          -e HTTPS_PROXY=$HTTPS_PROXY \
          -v $GITHUB_WORKSPACE:/workspace wxj6000/gpu4pyscf:latest \
          /bin/bash -c "cd /workspace && source build.sh && pytest gpu4pyscf/tests/test_benchmark_ecp.py -s -v -m 'not slow and not high_memory' --benchmark-compare-fail=min:10% --benchmark-compare=v1.4.0_ecp_1v100 --benchmark-storage=gpu4pyscf/tests/benchmark_results/ && rm -rf .pytest_cache"

  test_properties:
    runs-on: [self-hosted, Linux, X64, v100]
    steps:
    - uses: actions/checkout@v3

    - name: Pull CUDA Devel Image
      run: |
        docker pull wxj6000/gpu4pyscf:latest

    - name: Run properties tests
      run: |
        docker run --gpus all \
          -u "$(id -u):$(id -g)" \
          -e CUPY_CACHE_DIR=/workspace/.cupy_cache \
          -e HTTP_PROXY=$HTTP_PROXY \
          -e HTTPS_PROXY=$HTTPS_PROXY \
          -v $GITHUB_WORKSPACE:/workspace wxj6000/gpu4pyscf:latest \
          /bin/bash -c "cd /workspace && source build.sh && pytest gpu4pyscf/tests/test_benchmark_properties.py -s -v -m 'not slow and not high_memory' --benchmark-compare-fail=min:10% --benchmark-compare=v1.4.0_properties_1v100 --benchmark-storage=gpu4pyscf/tests/benchmark_results/ && rm -rf .pytest_cache"

